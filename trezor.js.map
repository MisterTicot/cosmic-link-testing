{"version":3,"sources":["webpack:///../trezor-wallet/es5/trezor-tx.js","webpack:///../trezor-wallet/es5/tx-transformer.js","webpack:///../trezor-wallet/es5/index.js"],"names":["_typeof","require","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","Buffer","TrezorTransaction","_TxTransformer","transaction","_this","this","call","rules","network","fee","Number","operations","length","minTime","maxTime","timebounds","forEach","op","type","assetType","assetCode","authorize","notSupported","limit","amount","signer","signer_type","signer_key","key","signer_weight","weight","console","log","JSON","stringify","feature","Error","concat","toFixed","asset","code","issuer","assetsArray","array","map","buffer","value","from","toString","date","Date","memo","text","id","hash","price","n","d","sequence","module","exports","_require","CosmicLink","specs","transform","field","fieldType","odesc","result","TxTransformer","tx","_networkPassphrase","tdesc","transactionOptionalFields","o","connection","disconnection","_regeneratorRuntime","_asyncToGenerator","trezor","StellarSdk","TrezorConnect","TrezorTx","UI","makePath","account","index","internalFlag","path","connect","_connect","apply","arguments","mark","_callee4","wrap","_context4","prev","next","error","undefined","stellarGetAddress","sent","success","publicKey","payload","address","keypair","Keypair","fromPublicKey","onConnect","stop","_onConnect","_callee5","_context5","ledger","onDisconnect","reset","name","register","appUrl","email","manifest","_ref","_callee","_context","abrupt","_x","_x2","_x3","on","event","disconnect","_callee2","_context2","sign","_ref3","_callee3","hint","signature","decorated","_context3","stellarSignTransaction","networkPassphrase","signatureHint","xdr","DecoratedSignature","signatures","push","_x4"],"mappings":"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","file":"trezor.js","sourcesContent":["\"use strict\";\n/**\n * Trezor Tx - A class that create a Trezor-formatted transaction from any\n * format of transaction.\n */\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar TxTransformer = require(\"./tx-transformer\");\n/* Definition */\n\n\nvar TrezorTransaction =\n/*#__PURE__*/\nfunction (_TxTransformer) {\n  _inherits(TrezorTransaction, _TxTransformer);\n\n  function TrezorTransaction(transaction) {\n    var _this;\n\n    _classCallCheck(this, TrezorTransaction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrezorTransaction).call(this, rules, transaction));\n    delete _this.network; // Fees\n\n    if (!_this.fee) _this.fee = 100 * _this.operations.length;else _this.fee = Number(_this.fee) / 10000000; // Timebounds\n\n    if (_this.minTime || _this.maxTime) {\n      _this.timebounds = {\n        minTime: _this.minTime || null,\n        maxTime: _this.maxTime || null\n      };\n      delete _this.minTime;\n      delete _this.maxTime;\n    } // Operations\n\n\n    _this.operations.forEach(function (op) {\n      if (op.type === \"allowTrust\") {\n        op.assetType = op.assetCode.length <= 4 ? 1 : 2;\n        op.authorize = op.authorize ? 1 : 0;\n      } else if (op.type === \"changeTrust\") {\n        notSupported(\"operation changeTrust\");\n        if (!op.limit) op.limit = rules.amount(\"922337203685.4775807\");\n      } else if (op.type === \"createPassiveSellOffer\") {\n        op.type = \"createPassiveOffer\";\n      } else if (op.type === \"manageSellOffer\") {\n        op.type = \"manageOffer\";\n      } else if (op.type === \"manageBuyOffer\") {\n        notSupported(\"operation manageBuyOffer\");\n      } else if (op.type === \"setOptions\") {\n        notSupported(\"set signer\");\n\n        if (op.signer) {\n          op.signer_type = op.signer.type;\n          op.signer_key = op.signer.key;\n          op.signer_weight = op.signer.weight;\n          delete op.signer;\n        }\n      }\n    }); // DEBUG\n\n\n    console.log(\"Trezor TX\", JSON.stringify(_assertThisInitialized(_this), null, 2));\n    return _this;\n  }\n\n  return TrezorTransaction;\n}(TxTransformer);\n/* Rules */\n\n\nvar rules = {};\n\nrules.amount = function (amount) {\n  // Protect against JavaScript number hazards.\n  return Number(amount * 10000000).toFixed(0);\n};\n\nrules.asset = function (asset) {\n  if (asset.code === \"XLM\" && !asset.issuer) return null;\n  asset.type = asset.code.length <= 4 ? 1 : 2;\n  return asset;\n};\n\nrules.assetsArray = function (array) {\n  return array.map(rules.asset);\n};\n\nrules.buffer = function (buffer) {\n  if (!buffer.value) return \"\";\n\n  if (buffer.type === \"base64\") {\n    return Buffer.from(buffer.value, \"base64\").toString(\"hex\");\n  } else {\n    return Buffer.from(buffer.value).toString(\"hex\");\n  }\n};\n\nrules.date = function (date) {\n  return Number(new Date(date)) / 1000;\n};\n\nrules.memo = function (memo) {\n  if (memo.type === \"text\") {\n    memo.type = 1;\n    memo.text = memo.value;\n  } else if (memo.type === \"base64\") {\n    notSupported(\"binary memo text\");\n  } else if (memo.type === \"id\") {\n    memo.type = 2;\n    memo.id = memo.value;\n  } else if (memo.type === \"hash\") {\n    memo.type = 3;\n    memo.hash = memo.value;\n  } else if (memo.type === \"return\") {\n    memo.type = 4;\n    memo.hash = memo.value;\n  }\n\n  delete memo.value;\n  return memo;\n};\n\nrules.price = function (price) {\n  if (_typeof(price) !== \"object\") return {\n    n: Number(price),\n    d: 1\n  };else return price;\n};\n\nrules.sequence = function (sequence) {\n  return Number(sequence);\n};\n\nrules.signer = function (signer) {\n  signer.key = signer.value;\n  if (signer.type === \"key\") signer.type = 0;else if (signer.type === \"hash\") signer.type = 1;else if (signer.type === \"tx\") signer.type = 2;\n  return signer;\n};\n/* Helpers */\n\n\nfunction notSupported(feature) {\n  throw new Error(\"This feature is not supported yet: \".concat(feature, \".\"));\n}\n/* Export */\n\n\nmodule.exports = TrezorTransaction;","\"use strict\";\n/**\n * Tx Transformer\n *\n * Derive new formats form CosmicLink Transitional Description.\n */\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _require = require(\"cosmic-lib\"),\n    CosmicLink = _require.CosmicLink,\n    specs = _require.specs;\n/* Definition */\n\n\nvar TxTransformer = function TxTransformer(rules, tx) {\n  var _this = this;\n\n  _classCallCheck(this, TxTransformer);\n\n  var network = tx._networkPassphrase;\n  var cosmicLink = new CosmicLink(tx, {\n    network: network\n  });\n  var tdesc = cosmicLink.tdesc;\n  specs.transactionOptionalFields.forEach(function (field) {\n    var value = tdesc[field];\n    if (value) _this[field] = transform.field(rules, field, value);\n  });\n  this.operations = tdesc.operations.map(function (o) {\n    return transform.odesc(rules, o);\n  });\n};\n/* Routines */\n\n\nvar transform = {};\n\ntransform.field = function (rules, field, value) {\n  var type = specs.fieldType[field];\n  return rules[type] ? rules[type](value) : value;\n};\n\ntransform.odesc = function (rules, odesc) {\n  var result = {};\n\n  for (var field in odesc) {\n    result[field] = transform.field(rules, field, odesc[field]);\n  }\n\n  return result;\n};\n/* Export */\n\n\nmodule.exports = TxTransformer;","\"use_strict\";\n/**\n * Convenient wrapper around TrezorConnect. Works in browser only.\n *\n * @exports trezor\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar trezor = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar TrezorConnect = require(\"trezor-connect\")[\"default\"];\n\nvar _require = require(\"trezor-connect\"),\n    UI = _require.UI;\n\nvar TrezorTx = require(\"./trezor-tx\");\n/**\n * Methods\n */\n\n\nvar connection, disconnection;\n/**\n * Register yourself into Trezor application database.\n *\n * {@see\n * https://github.com/trezor/connect/blob/develop/docs/index.md#trezor-connect-manifest}\n *\n *\n * @param email {String} Developer email.\n * @param appUrl {String} Application URL.\n */\n\ntrezor.register = function (appUrl, email) {\n  TrezorConnect.manifest({\n    email: email,\n    appUrl: appUrl\n  });\n};\n/**\n * Connect\n */\n\n\ntrezor.connect =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(account, index, internalFlag) {\n    var path;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (account === undefined) {\n              account = trezor.account || 0;\n              index = trezor.index || 0;\n              internalFlag = trezor.internalFlag || false;\n            }\n\n            path = makePath(account, index, internalFlag); /// Be sure disconnection process is finished.\n\n            if (!disconnection) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return disconnection;\n\n          case 5:\n            disconnection = null;\n\n          case 6:\n            /// If the bip path is different we need to go through connect() again.\n            if (trezor.path !== path) {\n              reset();\n              trezor.path = path;\n              trezor.account = account || 0;\n              trezor.index = index || 0;\n              trezor.internalFlag = internalFlag || false;\n            } /// Connect & update data only when needed.\n\n\n            if (!connection) connection = connect();\n            return _context.abrupt(\"return\", connection);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction makePath(account, index, internalFlag) {\n  var path = \"m/44'/148'/\".concat(account, \"'\");\n  if (index || internalFlag) path += internalFlag ? \"/1'\" : \"/0'\";\n  if (index) path += \"/\".concat(index, \"'\");\n  return path;\n}\n\nfunction connect() {\n  return _connect.apply(this, arguments);\n}\n/**\n * Events handler\n */\n\n\nfunction _connect() {\n  _connect = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"Attempting Trezor connection...\");\n            trezor.error = undefined;\n            connection = TrezorConnect.stellarGetAddress({\n              path: trezor.path\n            });\n            _context4.next = 5;\n            return connection;\n\n          case 5:\n            result = _context4.sent;\n            console.log(result);\n\n            if (!result.success) {\n              _context4.next = 13;\n              break;\n            }\n\n            trezor.publicKey = result.payload.address;\n            trezor.keypair = StellarSdk.Keypair.fromPublicKey(trezor.publicKey);\n            onConnect();\n            _context4.next = 15;\n            break;\n\n          case 13:\n            trezor.error = result.payload.error;\n            throw new Error(trezor.error);\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _connect.apply(this, arguments);\n}\n\nTrezorConnect.on(\"DEVICE_EVENT\", function (event) {\n  console.log(\"DEVICE_EVENT\", console.log(event));\n  if (event.type === \"device-disconnect\") onDisconnect();else if (event.type === \"device-connect\") onConnect();\n});\n/**\n * onConnect\n */\n\ntrezor.onConnect = null;\n\nfunction onConnect() {\n  return _onConnect.apply(this, arguments);\n}\n/**\n * OnDisconnect\n */\n\n\nfunction _onConnect() {\n  _onConnect = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(\"Trezor connected\");\n            if (typeof trezor.onConnect === \"function\") ledger.onConnect();\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _onConnect.apply(this, arguments);\n}\n\ntrezor.onDisconnect = null;\n\nfunction onDisconnect() {\n  console.log(\"Trezor disconnected\");\n  reset();\n  if (typeof trezor.onDisconnect === \"function\") trezor.onDisconnect();\n}\n/**\n * Disconnect\n */\n\n\ntrezor.disconnect =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2() {\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          onDisconnect();\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\n\nfunction reset() {\n  connection = null;\n  var fields = [\"path\", \"account\", \"index\", \"internalFlag\", \"publicKey\", \"keypair\"];\n  fields.forEach(function (name) {\n    delete trezor[name];\n  });\n}\n/**\n * Sign\n */\n\n\nvar _require2 = require(\"cosmic-lib\"),\n    CosmicLink = _require2.CosmicLink;\n\ntrezor.sign =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(transaction) {\n    var result, hint, signature, decorated;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (trezor.publicKey) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new Error(\"No Trezor connected.\");\n\n          case 2:\n            console.log(\"Input TX\", JSON.stringify(new CosmicLink(transaction).tdesc), null, 2);\n            _context3.next = 5;\n            return TrezorConnect.stellarSignTransaction({\n              path: trezor.path,\n              networkPassphrase: transaction.networkPassphrase,\n              transaction: new TrezorTx(transaction)\n            });\n\n          case 5:\n            result = _context3.sent;\n\n            if (result.success) {\n              _context3.next = 8;\n              break;\n            }\n\n            throw new Error(result.payload.error);\n\n          case 8:\n            console.log(result.transaction);\n            hint = trezor.keypair.signatureHint();\n            signature = Buffer.from(result.payload.signature, \"hex\");\n            decorated = new StellarSdk.xdr.DecoratedSignature({\n              hint: hint,\n              signature: signature\n            });\n            transaction.signatures.push(decorated);\n            console.log(\"signed\", transaction);\n            return _context3.abrupt(\"return\", transaction);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();"],"sourceRoot":""}