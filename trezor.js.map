{"version":3,"sources":["webpack:///../node-cosmic-lib/es5/cosmiclink.js","webpack:///../node-cosmic-lib/es5/helpers/side-frame.js","webpack:///../node-cosmic-lib/es5/helpers/click-wall.js","webpack:///../node-cosmic-lib/bundled/cosmic-link.svg.js","webpack:///../node-cosmic-lib/es5/action.js","webpack:///../node-cosmic-lib/es5/load.js","webpack:///../node-cosmic-lib/es5/specs.js","webpack:///../node-cosmic-lib/es5/resolve.js","webpack:///../node-cosmic-lib/es5/status.js","webpack:///../node-cosmic-lib/es5/decode.js","webpack:///../node-cosmic-lib/es5/config.js","webpack:///../node-cosmic-lib/es5/convert.js","webpack:///../node-cosmic-lib/es5/check.js","webpack:///../node-cosmic-lib/es5/index.js","webpack:///../node-cosmic-lib/es5/format.js","webpack:///../node-cosmic-lib/es5/signers-utils.js","webpack:///../node-cosmic-lib/es5/normalize.js","webpack:///../node-cosmic-lib/es5/destruct.js","webpack:///../node-cosmic-lib/es5/sep7-utils.js","webpack:///../node-cosmic-lib/es5/event.js","webpack:///../node-cosmic-lib/es5/construct.js","webpack:///../node-cosmic-lib/es5/encode.js","webpack:///../node-cosmic-lib/es5/parse.js","webpack:///../node-cosmic-lib/es5/expand.js"],"names":["_regeneratorRuntime","require","_classCallCheck","_createClass","env","misc","html","isBrowser","SideFrame","action","config","convert","format","parse","resolve","sep7Utils","status","CosmicLink","transaction","options","this","initCosmicLink","key","value","object","checkLock","Object","assign","tdesc","type","params","odesc","operations","push","index","length","Error","concat","splice","useNetwork","lock","_len","arguments","keypairs_or_preimage","Array","_key","sign","apply","horizon","send","target","undefined","isNode","console","error","uri","window","open","location","href","sep7","domain","keypair","locker","signLink","async","_context","prev","next","extra","originDomain","Promise","awrap","sent","verifySignature","abrupt","stop","get","__proto__","query","page","_query","xdr","xdrToQuery","tdescToQuery","_tdesc","transactionToTdesc","_json","tdescToJson","_transaction","_xdr","transactionToXdr","_sep7","xdrToSep7","source","network","callback","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","cosmicLink","formatsFields","forEach","init","cache","destination","account","dispatch","grab","htmlDescription","id","deprecated","clear","className","create","_transactionNode","_statusNode","makeHtmlNode","_signersNode","append","htmlLink","onclick","title","textContent","prototype","module","exports","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","Observable","timeout","ClickWall","cosmicLinkIcon","_Observable","url","_this","call","current","close","shadow","scrollbar","opacity","delay","closeButton","CloseButton","domNode","src","sandbox","hidden","style","transform","document","body","show","_this2","setTransition","then","enable","trigger","_this3","hide","disable","ease","transition","_this4","destroy","addEventListener","event","frameWindow","contentWindow","data","boxSizing","position","zIndex","right","top","width","maxWidth","height","border","borderTop","boxShadow","background","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","willChange","lineHeight","color","fontWeight","cursor","textAlign","click","isEnabled","htmlOverflow","documentElement","overflow","bodyOverflow","setOpacity","_context2","_context3","_args4","_context4","axios","signersUtils","applyLock","tdescToTransaction","_cosmicplus","updateSignersNode","signersNode","signatures","replaceChild","sendToHorizon","server","_context5","submitTransaction","t0","response","sendToStellarGuard","post","result","_args","errors","message","fail","allFine","keypairsOrPreimage","publicKey","_short","_short2","_short3","_args3","keys","t1","done","hasSigner","shorter","hasSigned","t2","signHashX","STELLARGUARD_PUBKEY","load","styles","promise","css","specs","field","transactionOptionalFields","fieldDesc","memo","sequence","minTime","maxTime","fee","isTransactionField","find","name","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","createPassiveSellOffer","inflation","manageData","manageOffer","manageBuyOffer","manageSellOffer","pathPaymentStrictReceive","pathPaymentStrictSend","payment","setOptions","operationOptionalFields","operationFields","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buyAmount","buying","clearFlags","destAsset","destAmount","destMin","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","medThreshold","memoBinary","memoHash","memoId","memoReturn","memoText","memoType","offerId","price","path","selling","sendAmount","sendAsset","sendMax","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","startingBalance","trustor","types","_loop","_field","entry","neutralAccountId","StellarSdk","accountResolver","conf","accountId","quietFlag","accountResponse","loadAccount","makeAccountResponse","Account","signers","public_key","weight","resolveTxSource","address","_context6","signersTableToSignersList","signersTable","array","Server","warn","passphrase","networkPassphrase","currentPassphrase","log","Network","use","currentNetwork","networkName","values","indexOf","FederationServer","account_id","memo_type","aliases","alias","addressResolver","isAccountEmpty","txSourceAccount","baseAccount","sub","_baseAccount","txSources","a","txSigners","filter","txSignersList","_context7","setHiddenProperty","errorContinuation","continuation","update","errorStatus","errorsNode","lineNode","statusNode","statusLine","errorLine","decode","check","normalize","substr","parser","match","split","substring","decoded","decodeURIComponent","process","assetLower","toLowerCase","code","temp","issuer","assetsList","map","string","matched","Date","toISOString","numerator","replace","denominator","n","d","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","set","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","clearClickHandler","construct","destruct","encode","uriToQuery","queryToTdesc","JSON","stringify","toEnvelope","toXDR","encodeURIComponent","pubkey","msg","signature","xdrToTransaction","Transaction","strip","jsonToTdesc","json","queryToUri","_typeof","errDesc","isValid","txField","e","operationType","operationField","number","min","max","num","isNaN","integer","parseInt","utf8","isUtf8","base64","isBase64","assetsArray","_boolean","buffer","date","flags","hash","threshold","exportModule","layer","_config","exposeModule","withConfig","library","_this$module","_class","_require","isWebHandlerSupported","registerWebHandler","nice","parentProperty","element","property","parentNode","infoNode","trNode","domainNode","verifySep7","_index","opNode","retNode","sourceNode","addressNode","meaning","operationMeaning","fieldNode","txt","utils","signersList","sources","div","accountSignersNode","titleNode","listNode","signerNode","addClass","insertBefore","firstChild","makeAccountSignersNode","parentOdesc","parentIndex","parentTdesc","eventObject","constructor","callClickHandler","errorNode","animation","resolveAddressAndUpdate","significant","Number","nicified","String","assetNode","assetsArrayNode","i","toLocaleString","valueNode","typeNode","value1","value2","value3","StrKey","decodeSha256Hash","toString","weightNode","_resolve","SignersUtils","extendFlag","txHash","utilities","Keypair","fromPublicKey","verify","removeEmptyFields","dateFields","shifted","setMinutes","getMinutes","Asset","XLM","tx","neutralAccount","stripNeutralAccount","stripNeutralSequence","_memo","_switch","timeBounds","op","line","assetPath","timestamp","sdkMemo","_arm","_value","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","Buffer","handler","description","navigator","registerProtocolHandler","parseRequest","sep7Request","parseLink","parsePayLink","parseTxLink","parseLinkCommons","from","mode","link","payload","makePayload","getDomainKeypair","toml","signingKey","StellarTomlResolver","URI_REQUEST_SIGNING_KEY","alloc","alert","classList","contains","preimage","prompt","copyString","makeTransactionBuilder","baseFee","txOpts","sourceAccount","builder","memoValue","fetchBaseFee","timebounds","TransactionBuilder","setTimeout","TimeoutInfinite","addMemo","Memo","txBuilder","addOperation","build","Operation","constructedAsset","_context8","_context9","command","encodedValue","expand","guessType","setTdesc","sep7ToXdr","encodeURI","rule","_networkPassphrase","xdrUri","slice","isArray"],"mappings":"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","file":"trezor.js","sourcesContent":["\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n\nvar SideFrame = env.isBrowser && require(\"./helpers/side-frame\");\n\nvar action = require(\"./action\");\n\nvar config = require(\"./config\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar parse = require(\"./parse\");\n\nvar resolve = require(\"./resolve\");\n\nvar sep7Utils = require(\"./sep7-utils\");\n\nvar status = require(\"./status\");\n/**\n * | Formats                                     | Data                                | Actions                                        | Editor                                       | HTML\n * |---------------------------------------------|-------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |---------------------|---------------------|---------------------|---------------------|---------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}        |[open]{@link CosmicLink#open}                   |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network}  |[lock]{@link CosmicLink#lock} async             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[horizon]{@link CosmicLink#horizon}  |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[callback]{@link CosmicLink#callback}|[send]{@link CosmicLink#send} async             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[source]{@link CosmicLink#source}    |[signSep7]{@link CosmicLink#signSep7}           |[insertOperation]{@link CosmicLink#insertOperation}\n * | [xdr]{@link CosmicLink#xdr}                 |[status]{@link CosmicLink#status}    |[verifySep7]{@link CosmicLink#verifySep7} async\n * | [sep7]{@link CosmicLink#sep7}               |[errors]{@link CosmicLink#errors}    |\n * |                                             |[locker]{@link CosmicLink#locker}\n * |                                             |[cache]{@link CosmicLink#cache}\n * |                                             |[extra]{@link CosmicLink#extra}\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLib = require('cosmic-lib')\n * cosmicLib.network = 'test'\n * cosmicLib.source = 'tips*cosmic.link'\n *\n * const cosmicLink = new cosmicLib.CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({)\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\n\n\nvar CosmicLink =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {string} options.strip Remove an element from the original\n   *     XDR transaction. Valid values are `source`, `sequence` and\n   *     `signatures`. Stripping out sequence means that the transaction request\n   *     can get signed anytime in the future, possibly several times.\n   *     Stripping out source means that it can get signed by any account.\n   * @param {boolean} options.stripNeutralAccount If set, strip source account\n   *     out of SEP-0007/XDR requests when it is equal to the neutral account\n   *     (`GAAA...AWHF`).\n   * @param {boolean} options.stripNeutralSequence If set, strip sequence out\n   *     of SEP-0007/XDR requests when it is equal to `0`.\n   * @return {CosmicLink}\n   */\n  function CosmicLink(transaction, options) {\n    _classCallCheck(this, CosmicLink);\n\n    initCosmicLink(this, transaction, options);\n  }\n  /**\n   * Refer to the underlying global configuration\n   * @private\n   */\n\n\n  _createClass(CosmicLink, [{\n    key: \"parse\",\n\n    /**\n     * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n     * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n     * and the result is similar except that no new CosmicLink object is created.\n     */\n    value: function parse(transaction, options) {\n      initCosmicLink(this, transaction, options);\n    } /// Formats\n\n    /**\n     * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n     * This format is simply the `cosmicLink.query` appended to the\n     * `cosmicLink.page`\n     */\n\n  }, {\n    key: \"setTxFields\",\n    /// Editor\n\n    /**\n     * Add/remove transaction fields and reparse the CosmicLink. **object** should\n     * follow the Tdesc format, but fields values can be written using query or\n     * StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n     *\n     * @example\n     * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n     *\n     * @param {Object} object Transaction fields definition. Fields can be either\n     *   written using the JSON format or the query format\n     * @return {CosmicLink}\n     */\n    value: function setTxFields(object) {\n      checkLock(this);\n      this.parse(Object.assign(this.tdesc, object));\n      return this;\n    }\n    /**\n     * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n     * but fields values can be written using query or StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n     *\n     * @param {string} type The operation type.\n     * @param {Object} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"addOperation\",\n    value: function addOperation(type, params) {\n      checkLock(this);\n      var odesc = Object.assign({\n        type: type\n      }, params);\n      this.tdesc.operations.push(odesc);\n      this.parse(this.tdesc);\n      return this;\n    }\n    /**\n     * Insert an operation at **index**. **params** should follow the\n     * Tdesc format, but fields can be written using query or StellarSdk format\n     * as well.\n     *\n     * @example\n     * cosmicLink.insertOperation(0, 'changeTrust', {\n     *   asset: 'CNY:admin*ripplefox'\n     * })\n     *\n     * @param {integer} index The operation index.\n     * @param {string} type  The operation type.\n     * @param {params} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"insertOperation\",\n    value: function insertOperation(index, type, params) {\n      checkLock(this);\n\n      if (index > !this.tdesc.operations.length) {\n        throw new Error(\"Can't insert opereration at position \".concat(index, \": there are only \").concat(this.tdesc.operations.length, \" operations\"));\n      }\n\n      var odesc = Object.assign({\n        type: type\n      }, params);\n      this.tdesc.operations.splice(index, 0, odesc);\n      this.parse(this.tdesc);\n      return this;\n    }\n    /**\n     * Set/remove one of the CosmicLink operations. **params** should follow the\n     * Tdesc format, but fields can be written using query or StellarSdk format\n     * as well. If **type** is set to `null`, the operation at **index**\n     * is deleted.\n     *\n     * @example\n     * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n     *\n     * @example\n     * cosmicLink.setOperation(2, null)\n     *\n     * @param {integer} index The operation index.\n     * @param {string} type  The operation type.\n     * @param {params} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"setOperation\",\n    value: function setOperation(index, type, params) {\n      checkLock(this);\n\n      if (!this.tdesc.operations[index]) {\n        throw new Error(\"Operation \".concat(index, \" doesn't exists\"));\n      }\n\n      if (type === null) {\n        this.tdesc.operations.splice(index, 1);\n      } else {\n        this.tdesc.operations[index] = Object.assign({\n          type: type\n        }, params);\n        this.parse(this.tdesc);\n      }\n\n      return this;\n    } /// Actions\n\n    /**\n     * Select the network that this CosmicLink uses.\n     *\n     * @deprecated StellarSdk global `Network` setting is deprecated.\n     */\n\n  }, {\n    key: \"selectNetwork\",\n    value: function selectNetwork() {\n      return resolve.useNetwork(this);\n    }\n  }, {\n    key: \"lock\",\n    value: function lock(options) {\n      return action.lock(this, options);\n    }\n  }, {\n    key: \"sign\",\n    value: function sign() {\n      for (var _len = arguments.length, keypairs_or_preimage = new Array(_len), _key = 0; _key < _len; _key++) {\n        keypairs_or_preimage[_key] = arguments[_key];\n      }\n\n      return action.sign.apply(action, [this].concat(keypairs_or_preimage));\n    }\n  }, {\n    key: \"send\",\n    value: function send(horizon) {\n      return action.send(this, horizon);\n    }\n    /**\n     * The HTML DOM node that displays a description of the current transaction.\n     * This is a browser-only property.\n     *\n     * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n     * it will automatically get populated with the description of the last\n     * CosmicLink created.\n     */\n\n  }, {\n    key: \"open\",\n\n    /**\n     * Open CosmicLink in **target**.\n     *\n     * - `frame` (default): Open cosmicLink in a side-frame.\n     * - `tab`: Open cosmicLink in a new tab.\n     * - `current`: Open cosmicLink into the current window.\n     * - `sep7`: Open cosmicLink using user's SEP-0007 handler.\n     *\n     * @param {String} [target=\"frame\"] Open `cosmicLink` into the requested\n     *    target. Valid targets are: `frame`, `tab`, `current` and `sep7`.\n     */\n    value: function open() {\n      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"frame\";\n\n      if (env.isNode) {\n        console.error(\"Warning: cosmicLink.open() is not supported in Node.js environment.\");\n        return;\n      }\n\n      if (this.status) throw new Error(this.status);\n\n      switch (target) {\n        case \"frame\":\n          return new SideFrame(this.uri);\n\n        case \"tab\":\n          window.open(this.uri);\n          break;\n\n        case \"current\":\n          location.href = this.uri;\n          break;\n\n        case \"sep7\":\n          if (!this.sep7) {\n            throw new Error(\"Please use cosmicLink.lock() to build SEP-0007 link.\");\n          } else {\n            location.href = this.sep7;\n          }\n\n          break;\n\n        default:\n          throw new Error(\"Invalid cosmicLink.open() target: \".concat(target));\n      }\n    }\n    /**\n     * Sign SEP-0007 link for **domain**, using **keypair**.\n     *\n     * @see [SEP-0007 request signing](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md#request-signing)\n     *\n     * @param {String} domain The domain or subdomain you want to sign the request\n     * for. (example: \"a-domain.org\")\n     * @param {Keypair} keypair A StellarSdk Keypair.\n     */\n\n  }, {\n    key: \"signSep7\",\n    value: function signSep7(domain, keypair) {\n      if (!this.locker) throw new Error(\"cosmicLink is not locked.\");\n      sep7Utils.signLink(this, domain, keypair);\n    }\n    /**\n     * Verify SEP-0007 signature by resolving [`cosmicLink.extra.domain`]{@link\n     * CosmicLink#extra}, if any.\n     * Throw an error if the signature is not valid.\n     *\n     * @return {undefined|String} The resolved `cosmicLink.extra.domain`, if any.\n     */\n\n  }, {\n    key: \"verifySep7\",\n    value: function verifySep7() {\n      var domain;\n      return _regeneratorRuntime.async(function verifySep7$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.extra.originDomain instanceof Promise)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.extra.originDomain);\n\n            case 3:\n              domain = _context.sent;\n              this.extra.originDomain = domain;\n              _context.next = 8;\n              break;\n\n            case 7:\n              if (this.extra.originDomain) {\n                sep7Utils.verifySignature(this, this.extra.originDomain);\n              }\n\n            case 8:\n              return _context.abrupt(\"return\", this.extra.originDomain);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      return this.__proto__.__proto__;\n    }\n  }, {\n    key: \"uri\",\n    get: function get() {\n      if (this.query) return this.page + this.query;else return undefined;\n    }\n    /**\n     * CosmicLink's transaction encoded in the Cosmic\n     * [Query]{@link tutorial:specs_query} format. This format allows to\n     * conveniently pass around Stellar transactions over any URI.\n     */\n\n  }, {\n    key: \"query\",\n    get: function get() {\n      if (!this._query) {\n        if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, this.tdesc);else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc);else return undefined;\n      }\n\n      return this._query;\n    }\n    /**\n     * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n     * query representation and a simplified StellarSdk Transaction object. It has\n     * been created to be convenient to understand, use and manipulate.\n     *\n     * If you need to read the transaction parameters, this is the format of\n     * choice:\n     *\n     * ```js\n     * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n     * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n     * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n     * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n     * ```\n     *\n     * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n     * everywhere StellarSdk Transaction accept public keys. Those addresses are\n     * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n     * tdesc is replaced by a resolved one.\n     *\n     * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n     * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n     * it using the dedicated methods:\n     *\n     * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n     * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n     * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n     */\n\n  }, {\n    key: \"tdesc\",\n    get: function get() {\n      if (!this._tdesc) {\n        if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker);else return undefined;\n      }\n\n      return this._tdesc;\n    }\n    /**\n     * CosmicLink's transaction in JSON format. This is a stringified version of\n     * [Tdesc]{@link CosmicLink#tdesc} format.\n     */\n\n  }, {\n    key: \"json\",\n    get: function get() {\n      if (!this._json) this._json = convert.tdescToJson(this, this.tdesc);\n      return this._json;\n    }\n    /**\n     * CosmicLink's transaction in StellarSdk\n     * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"transaction\",\n    get: function get() {\n      return this._transaction;\n    }\n    /**\n     * CosmicLink's transaction in\n     * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"xdr\",\n    get: function get() {\n      if (!this._xdr) {\n        if (!this.transaction) return undefined;\n        this._xdr = convert.transactionToXdr(this, this.transaction);\n      }\n\n      return this._xdr;\n    }\n    /**\n     * CosmicLink transaction in\n     * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n     * link format. Only the XDR part of this protocol is currently supported by\n     * CosmicLink, minus the signature verification.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"sep7\",\n    get: function get() {\n      if (!this._sep7) {\n        if (!this.xdr) return undefined;\n        this._sep7 = convert.xdrToSep7(this, this.xdr, this.tdesc);\n      }\n\n      return this._sep7;\n    } /// Data\n\n    /**\n     * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n     *\n     * @var CosmicLink#page\n     */\n\n    /**\n     * The source for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.source`) or globally (`cosmicLib.config.source`). The\n     * local configuration takes precedence, or, in other words, the global source\n     * is a fallback value in case the transaction emitter doesn't set one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"source\",\n    get: function get() {\n      return this.tdesc && this.tdesc.source || this.config.source;\n    }\n    /**\n     * The network for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.network`) or globally (`cosmicLib.config.network`). The\n     * local configuration takes precedence, or, in other words, the global\n     * network is a fallback value in case the transaction emitter doesn't set\n     * one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"network\",\n    get: function get() {\n      return this.tdesc && this.tdesc.network || this.config.network;\n    }\n    /**\n     * The URL of the horizon node from which ledger data will be retrieved, and\n     * to which the signed transaction will be posted if there's no\n     * [callback]{@link CosmicLink#callback}.\n     *\n     * This can be defined either locally (`cosmicLink.tdesc.horizon`) or globally\n     * (using [setupNetwork]{@link module:config.setupNetwork}). This parameter is\n     * special in the sense that it's the only one for which the global\n     * configuration takes precedence.\n     *\n     * The rationale for this behavior is that we want transaction emitter to\n     * provide a fallback Horizon URL in the special case none is known for a\n     * custom network, but generally speaking it won't be right to allow the\n     * transaction emitter to force us to use a particular Horizon node.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"horizon\",\n    get: function get() {\n      return resolve.horizon(this.config, this.network) || this.tdesc && this.tdesc.horizon;\n    }\n    /**\n     * The URL at which the signed transaction will be posted. This can be defined\n     * either locally (`cosmicLink.tdesc.callback`) or globally\n     * (`cosmicLib.config.callback`). The local configuration takes precedence.\n     *\n     * When no callback is defined, the signed transaction is posted to\n     * [Horizon]{@link CosmicLink#horizon}. This is the default behavior.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"callback\",\n    get: function get() {\n      return this.tdesc && this.tdesc.callback || this.config.callback;\n    }\n  }, {\n    key: \"htmlDescription\",\n    get: function get() {\n      if (!this._htmlDescription) makeHtmlDescription(this);\n      return this._htmlDescription;\n    }\n    /**\n     * A link HTML Element that points to `cosmicLink.uri`\n     */\n\n  }, {\n    key: \"htmlLink\",\n    get: function get() {\n      if (!this._htmlLink) makeHtmlLink(this);\n      return this._htmlLink;\n    }\n  }]);\n\n  return CosmicLink;\n}();\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\n\n\nfunction initCosmicLink(cosmicLink, transaction) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  checkLock(cosmicLink); /// Reset object in case of reparse.\n\n  formatsFields.forEach(function (type) {\n    return delete cosmicLink[type];\n  });\n  cosmicLink.page = cosmicLink.page || options.page || config.page;\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n\n  status.init(cosmicLink);\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n\n  cosmicLink.cache = {\n    destination: {},\n    account: {}\n  };\n  /**\n   * After parsing a SEP-0007 link, `cosmicLink.extra` contains SEP-0007\n   * specific information:\n   *\n   * - `cosmicLink.extra.type` indicates the operation encoded into the SEP-0007\n   *   link (either `tx` or `pay`).\n   * - `cosmicLink.extra.originDomain` is a _Promise_ that resolves to the\n   *   origin_domain parameter when the link signature is valid. It rejects an\n   *   error when the signature check fails. This property is `undefined` when\n   *   the link has no origin_domain.\n   * - `cosmicLink.extra.signature` contains the link signature, if any.\n   * - `cosmicLink.extra.pubkey` contains the tx operation `pubkey`, if any.\n   * - `cosmicLink.extra.msg` contains the parsed `msg`, if any. This is\n   *   provided for compatibility purpose only. Displaying messages from\n   *   untrusted sources into trusted interfaces opens hard to mitigate attack\n   *   vectors & is discouraged.\n   *\n   * @var CosmicLink#extra\n   */\n\n  cosmicLink.extra = {};\n  parse.dispatch(cosmicLink, transaction, options);\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink);\n\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab(\"#cosmiclink_description\") || html.grab(\"#CL_htmlNode\");\n    }\n\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === \"#CL_htmlNode\") {\n        misc.deprecated(\"2019-03\", \"id=\\\"#CL_htmlNode\\\"\", \"id=\\\"cosmiclink_description\\\"\");\n      }\n\n      makeHtmlDescription(cosmicLink);\n    }\n  }\n}\n\nvar formatsFields = [\"_query\", \"_tdesc\", \"_json\", \"_transaction\", \"_xdr\"];\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\n\nfunction makeHtmlDescription(cosmicLink) {\n  if (env.isNode) return;\n  var htmlDescription = cosmicLink._htmlDescription;\n\n  if (htmlDescription) {\n    html.clear(htmlDescription);\n    htmlDescription.className = \"cosmiclink_description\";\n  } else {\n    htmlDescription = html.create(\"div\", \".cosmiclink_description\");\n    cosmicLink._htmlDescription = htmlDescription;\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc);\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink);\n  cosmicLink._signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  html.append(htmlDescription, cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode);\n}\n/**\n * Make the HTML link.\n * @private\n */\n\n\nfunction makeHtmlLink(cosmicLink) {\n  if (env.isNode) return;\n  var htmlLink = html.grab(\"#cosmiclink\") || html.create(\"a\");\n  htmlLink.className = \".cosmiclink\";\n  htmlLink.href = cosmicLink.page;\n\n  htmlLink.onclick = function () {\n    return htmlLink.href = cosmicLink.uri;\n  };\n\n  if (!htmlLink.title) htmlLink.title = \"Sign transaction\";\n  if (!htmlLink.textContent) htmlLink.textContent = \"CosmicLink\";\n  cosmicLink._htmlLink = htmlLink;\n  return htmlLink;\n}\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\n\n\nfunction checkLock(cosmicLink) {\n  if (cosmicLink.locker) throw new Error(\"Cosmic link is locked.\");\n}\n\nCosmicLink.prototype.__proto__ = config;\nmodule.exports = CosmicLink;","\"use strict\";\n/**\n * Signing Side Frame\n *\n * @private\n */\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar Observable = require(\"@cosmic-plus/jsutils/es5/observable\");\n\nvar _require = require(\"@cosmic-plus/jsutils/es5/misc\"),\n    timeout = _require.timeout;\n\nvar ClickWall = require(\"./click-wall\");\n\nvar cosmicLinkIcon = require(\"../../bundled/cosmic-link.svg\");\n/**\n * Class\n */\n\n\nvar SideFrame =\n/*#__PURE__*/\nfunction (_Observable) {\n  _inherits(SideFrame, _Observable);\n\n  function SideFrame(url) {\n    var _this;\n\n    _classCallCheck(this, SideFrame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SideFrame).call(this));\n    if (SideFrame.current) SideFrame.current.close();\n    SideFrame.current = _assertThisInitialized(_this);\n    _this.shadow = makeShadow();\n    _this.closeButton = new SideFrame.CloseButton();\n    _this.domNode = html.create(\"iframe\", {\n      title: \"Signing Frame\",\n      src: url,\n      sandbox: \"allow-same-origin allow-scripts allow-forms allow-popups\",\n      hidden: true\n    });\n    Object.assign(_this.domNode.style, SideFrame.style);\n    _this.domNode.style.transform = \"translateX(100%)\";\n    html.append(document.body, _this.closeButton, _this.domNode);\n\n    _this.show();\n\n    return _this;\n  }\n\n  _createClass(SideFrame, [{\n    key: \"show\",\n    value: function show() {\n      var _this2 = this;\n\n      if (!this.domNode.hidden) return;\n      html.show(this.domNode); // That timeout is required for transition to play well.\n\n      this.setTransition(250, \"cubic-bezier(0, 0, 0.2, 1)\");\n      timeout(5).then(function () {\n        return _this2.domNode.style.transform = \"none\";\n      });\n      return this.shadow.enable().then(function () {\n        _this2.shadow.onclick = function () {\n          return _this2.close();\n        };\n\n        html.show(_this2.closeButton.domNode);\n\n        _this2.closeButton.domNode.onclick = function () {\n          return _this2.close();\n        };\n\n        _this2.trigger(\"show\");\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this3 = this;\n\n      if (this.domNode.hidden) return;\n      html.hide(this.closeButton.domNode);\n      this.setTransition(200, \"cubic-bezier(0.4, 0, 1, 1)\");\n      this.domNode.style.transform = \"translateX(100%)\";\n      return this.shadow.disable().then(function () {\n        html.hide(_this3.domNode);\n\n        _this3.trigger(\"hide\");\n      });\n    }\n  }, {\n    key: \"setTransition\",\n    value: function setTransition(delay, ease) {\n      var transition = \"transform \".concat(delay, \"ms \").concat(ease);\n      this.domNode.style.transition = transition;\n      this.shadow.domNode.style.transition = transition;\n      this.shadow.delay = delay;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this4 = this;\n\n      SideFrame.current = null;\n      this.hide().then(function () {\n        html.destroy(_this4.domNode);\n        html.destroy(_this4.closeButton.domNode);\n\n        _this4.shadow.destroy();\n\n        _this4.trigger(\"close\");\n\n        _this4.destroy();\n      });\n    }\n  }]);\n\n  return SideFrame;\n}(Observable);\n/**\n * Event\n */\n\n\nwindow.addEventListener(\"message\", function (event) {\n  var frameWindow = SideFrame.current && SideFrame.current.domNode.contentWindow;\n\n  if (event.source === frameWindow) {\n    switch (event.data) {\n      case \"show\":\n        SideFrame.current.show();\n        break;\n\n      case \"hide\":\n        SideFrame.current.hide();\n        break;\n\n      case \"close\":\n        SideFrame.current.close();\n        break;\n    }\n  }\n});\n/**\n * Frame style\n */\n\nSideFrame.style = {\n  boxSizing: \"border-box\",\n  position: \"fixed\",\n  zIndex: 1000,\n  right: 0,\n  top: 0,\n  width: \"30em\",\n  maxWidth: \"100%\",\n  height: \"100vh\",\n  border: 0,\n  borderTop: \"2em solid hsl(240, 40%, 98%)\",\n  boxShadow: \"0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12)\",\n  background: \"hsl(240, 40%, 98%)\",\n  backgroundImage: \"url('\".concat(cosmicLinkIcon, \"')\"),\n  backgroundRepeat: \"no-repeat\",\n  backgroundPosition: \"center\",\n  backgroundSize: \"12em 12em\",\n  willChange: \"transform\"\n};\n/**\n * Closing button\n */\n\nSideFrame.CloseButton = function CloseButton() {\n  _classCallCheck(this, CloseButton);\n\n  this.domNode = html.create(\"span\", {\n    hidden: true\n  }, \"× Close\");\n  Object.assign(this.domNode.style, SideFrame.CloseButton.style);\n};\n\nSideFrame.CloseButton.style = {\n  position: \"fixed\",\n  zIndex: 1001,\n  top: \"0.1em\",\n  right: \"0.1em\",\n  width: \"29.8em\",\n  maxWidth: \"100%\",\n  lineHeight: \"1.8em\",\n  color: \"hsl(0, 0%, 40%)\",\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  textAlign: \"center\"\n};\n/**\n * Shadow Layer\n */\n\nfunction makeShadow() {\n  return new ClickWall({\n    scrollbar: \"hide\",\n    opacity: 0.3,\n    delay: 400\n  });\n}\n/**\n * Export\n */\n\n\nmodule.exports = SideFrame;","\"use strict\";\n/**\n * Overlay that prevent user interaction\n *\n * @private\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar _require = require(\"@cosmic-plus/jsutils/es5/misc\"),\n    timeout = _require.timeout;\n/**\n * Definition\n */\n\n\nvar ClickWall =\n/*#__PURE__*/\nfunction () {\n  function ClickWall() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ClickWall);\n\n    this.domNode = html.create(\"div\", {\n      className: \"ClickWall\",\n      onclick: function onclick() {\n        return _this.click();\n      },\n      hidden: true\n    });\n    Object.assign(this.domNode.style, ClickWall.style);\n    html.append(document.body, this.domNode);\n    this.onclick = params.onclick;\n    this.scrollbar = params.scrollbar;\n    this.opacity = params.opacity;\n    this.delay = params.delay || ClickWall.delay;\n  }\n\n  _createClass(ClickWall, [{\n    key: \"click\",\n    value: function click() {\n      if (this.isEnabled && this.onclick) this.onclick();\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      return _regeneratorRuntime.async(function enable$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Scrollbar hidding.\n              if (this.scrollbar === \"hide\") {\n                this.htmlOverflow = document.documentElement.style.overflow;\n                this.bodyOverflow = document.body.style.overflow;\n                document.documentElement.style.overflow = \"hidden\";\n                document.body.style.overflow = \"hidden\";\n              } // Fade in.\n\n\n              html.show(this.domNode);\n\n              if (!this.opacity) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this.setOpacity(this.opacity));\n\n            case 5:\n              this.isEnabled = true;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      return _regeneratorRuntime.async(function disable$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // Handle scrollbar hidding.\n              if (this.scrollbar === \"hide\") {\n                document.documentElement.style.overflow = this.htmlOverflow;\n                document.body.style.overflow = this.bodyOverflow;\n              } // Fade out.\n\n\n              this.isEnabled = false;\n\n              if (!this.opacity) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(this.setOpacity(0));\n\n            case 5:\n              html.hide(this.domNode);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return _regeneratorRuntime.async(function destroy$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.disable());\n\n            case 2:\n              html.destroy(this.domNode);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"setOpacity\",\n    value: function setOpacity() {\n      var opacity,\n          _args4 = arguments;\n      return _regeneratorRuntime.async(function setOpacity$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              opacity = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : this.opacity;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(timeout(0));\n\n            case 3:\n              Object.assign(this.domNode.style, {\n                transition: \"opacity \".concat(this.delay, \"ms\"),\n                opacity: opacity\n              });\n              return _context4.abrupt(\"return\", timeout(this.delay));\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return ClickWall;\n}();\n/**\n * Configuration\n */\n\n\nClickWall.delay = 500;\nClickWall.style = {\n  position: \"fixed\",\n  zIndex: 999,\n  top: 0,\n  width: \"100%\",\n  height: \"100%\",\n  background: \"#000\",\n  opacity: 0,\n  willChange: \"opacity\"\n};\n/**\n * Export\n */\n\nmodule.exports = ClickWall;","module.exports=`data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"%3E%3Cpath fill=\"%23c1c1c1\" d=\"M179.24078 179.33326l-139.467135 139.472c-42.36486 42.364-42.36486 111.057 0 153.421 42.364861 42.365 111.057145 42.365 153.421735 0l138.729-138.733c-25.99806 25.453-61.62709 35.207-95.00214 29.258l-76.60113 76.601c-24.2097 24.21-63.463495 24.21-87.673478 0-24.209708-24.21-24.209708-63.463 0-87.673l76.605518-76.606 63.49455-63.49c24.25805-23.586 63.04182-23.375 87.04055.624 24.17894 24.179 24.20971 63.362.0967 87.585l62.86162-62.866c-3.75663-21.094-13.78318-41.292-30.08405-57.593-16.29648-16.297-36.49024-26.323-57.58476-30.084-34.92606-6.226-70.73529 4.982-95.83698 30.084z\"/%3E%3Cpath fill=\"%239f9f9f\" d=\"M332.75922 332.66726l139.46713-139.472c42.36487-42.364 42.36487-111.057004 0-153.421004-42.36485-42.3660001-111.05714-42.3660001-153.42174 0L180.07562 178.50726c25.99805-25.453 61.62708-35.207 95.00214-29.258l76.60112-76.601004c24.2097-24.21 63.4635-24.21 87.67348 0 24.20972 24.209 24.20972 63.463004 0 87.673004l-76.60551 76.606-63.49456 63.49c-24.25805 23.586-63.04182 23.375-87.04054-.624-24.17895-24.179-24.20972-63.363-.0967-87.585l-62.86163 62.866c3.75663 21.094 13.78319 41.292 30.08406 57.593 16.29648 16.297 36.49023 26.323 57.58476 30.084 34.92606 6.226 70.73529-4.982 95.83698-30.084z\"/%3E%3Cpath fill=\"%23a6a6a6\" d=\"M356.90299 216.24526l-38.96398 38.964c.21537 15.871-5.62848 31.807-17.5269 44.048l62.33446-62.33c-1.25211-7.03-3.1987-13.959-5.84358-20.682zm-24.97861 117.248c-22.2722 21.797-52.72519 32.826-83.47734 30.682-3.84013-.268-7.68906-.738-11.5248-1.424l-13.98536 13.986c10.03974 2.622 20.58027 4.02 31.44193 4.02 12.3069 0 24.19213-1.793 35.41393-5.132l42.13191-42.132z\"/%3E%3Cpath fill=\"%23888\" d=\"M180.07562 178.50726c22.2722-21.797 52.72519-32.826 83.47733-30.682 3.84013.268 7.68907.738 11.52481 1.424l12.06515-12.065c-10.43531-2.852-21.42416-4.376-32.76438-4.376-11.45008 0-22.53563 1.551-33.06297 4.459zm13.98537 76.61c.20218-15.312 6.04576-30.563 17.52689-42.374l-62.33446 62.331c1.17768 6.608 2.97014 13.132 5.37795 19.473z\"/%3E%3C/svg%3E`\n","\"use strict\";\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar action = exports;\n\nvar axios = require(\"@cosmic-plus/base/es5/axios\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar status = require(\"./status\");\n/**\n * Lock a CosmicLink to a network/source pair. If the cosmicLink was created\n * from a query/uri/tdesc/json, it will create the corresponding\n * transaction/xdr/sep7 formats.\n *\n * This operation must be performed by the wallet before signing & sending the\n * transaction.\n *\n * @example\n * cosmicLib.config.network = \"test\"\n * const cosmicLink = new CosmicLink(\"?setOptions\")\n * console.log(cosmicLink.network) // => undefined\n * console.log(cosmicLink.xdr)     // => undefined\n * await cosmicLink.lock()\n * console.log(cosmicLink.network) // => \"test\"\n * console.log(cosmicLink.xdr)     // => \"AAAA...AA==\"\n *\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network Local fallback network\n * @param {string} options.horizon Local fallback horizon (overwrited by global configuration)\n * @param {string} options.callback Local fallback callback\n * @param {string} options.source Local fallback source\n */\n\n\naction.lock = function _callee(cosmicLink) {\n  var options,\n      _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n          if (!cosmicLink.status) {\n            _context.next = 3;\n            break;\n          }\n\n          throw new Error(cosmicLink.status);\n\n        case 3:\n          if (!cosmicLink.locker) {\n            _context.next = 5;\n            break;\n          }\n\n          throw new Error(\"CosmicLink is already locked.\");\n\n        case 5:\n          _context.prev = 5;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(applyLock(cosmicLink, options));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](5);\n\n          if (!cosmicLink.errors) {\n            console.error(_context.t0);\n            status.error(cosmicLink, _context.t0.message);\n          }\n\n          status.fail(cosmicLink, \"Transaction build failed\", \"throw\");\n\n        case 14:\n          updateSignersNode(cosmicLink);\n          return _context.abrupt(\"return\", cosmicLink);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[5, 10]]);\n};\n\nfunction applyLock(cosmicLink, options) {\n  return _regeneratorRuntime.async(function applyLock$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          /**\n           * The locker property tells that a CosmicLink have been locked, and exposes\n           * the network & source values to which it have been locked.\n           *\n           * @alias CosmicLink#locker\n           */\n          cosmicLink.locker = {\n            source: cosmicLink.tdesc.source || options.source || cosmicLink.config.source,\n            network: cosmicLink.tdesc.network || options.network || cosmicLink.config.network,\n            horizon: options.horizon || cosmicLink.horizon,\n            callback: cosmicLink.tdesc.callback || options.callback || cosmicLink.config.callback\n          }; /// Preserve the underlying tdesc object.\n\n          cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker);\n          delete cosmicLink._query;\n          delete cosmicLink._json;\n\n          if (cosmicLink._transaction) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc));\n\n        case 7:\n          cosmicLink._transaction = _context2.sent;\n          delete cosmicLink._tdesc;\n\n        case 9:\n          delete cosmicLink._transaction._cosmicplus;\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(signersUtils[\"extends\"](cosmicLink, cosmicLink._transaction));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\n\n\naction.sign = function _callee2(cosmicLink) {\n  var transaction,\n      allFine,\n      _len,\n      keypairsOrPreimage,\n      _key,\n      index,\n      keypair,\n      publicKey,\n      _short,\n      _short2,\n      _short3,\n      _args3 = arguments;\n\n  return _regeneratorRuntime.async(function _callee2$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (cosmicLink.locker) {\n            _context3.next = 2;\n            break;\n          }\n\n          throw new Error(\"cosmicLink is not locked.\");\n\n        case 2:\n          transaction = cosmicLink.transaction;\n          allFine = true;\n\n          for (_len = _args3.length, keypairsOrPreimage = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            keypairsOrPreimage[_key - 1] = _args3[_key];\n          }\n\n          if (!(typeof keypairsOrPreimage[0] !== \"string\")) {\n            _context3.next = 33;\n            break;\n          }\n\n          _context3.t0 = _regeneratorRuntime.keys(keypairsOrPreimage);\n\n        case 7:\n          if ((_context3.t1 = _context3.t0()).done) {\n            _context3.next = 31;\n            break;\n          }\n\n          index = _context3.t1.value;\n          keypair = keypairsOrPreimage[index];\n          publicKey = keypair.publicKey();\n\n          if (cosmicLink.transaction.hasSigner(publicKey)) {\n            _context3.next = 16;\n            break;\n          }\n\n          _short = misc.shorter(publicKey);\n          status.error(cosmicLink, \"Not a legit signer: \" + _short);\n          allFine = false;\n          return _context3.abrupt(\"continue\", 7);\n\n        case 16:\n          if (!cosmicLink.transaction.hasSigned(publicKey)) {\n            _context3.next = 18;\n            break;\n          }\n\n          return _context3.abrupt(\"continue\", 7);\n\n        case 18:\n          _context3.prev = 18;\n          transaction.sign(keypair);\n          _context3.next = 29;\n          break;\n\n        case 22:\n          _context3.prev = 22;\n          _context3.t2 = _context3[\"catch\"](18);\n          console.error(_context3.t2);\n          _short2 = misc.shorter(publicKey);\n          status.error(cosmicLink, \"Failed to sign with key: \" + _short2);\n          allFine = false;\n          return _context3.abrupt(\"continue\", 7);\n\n        case 29:\n          _context3.next = 7;\n          break;\n\n        case 31:\n          _context3.next = 34;\n          break;\n\n        case 33:\n          try {\n            transaction.signHashX(keypairsOrPreimage[0]);\n          } catch (error) {\n            console.error(error);\n            _short3 = misc.shorter(keypairsOrPreimage[0]);\n            status.error(cosmicLink, \"Failed to sign with preimage: \" + _short3, \"throw\");\n          }\n\n        case 34:\n          /// Update other formats.\n          [\"_query\", \"_xdr\", \"_sep7\"].forEach(function (format) {\n            return delete cosmicLink[format];\n          });\n          updateSignersNode(cosmicLink);\n\n          if (allFine) {\n            _context3.next = 40;\n            break;\n          }\n\n          throw new Error(\"Some signers where invalid\");\n\n        case 40:\n          return _context3.abrupt(\"return\", transaction);\n\n        case 41:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[18, 22]]);\n};\n\nfunction updateSignersNode(cosmicLink) {\n  if (cosmicLink._signersNode) {\n    var signersNode = format.signatures(cosmicLink, cosmicLink._transaction);\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode);\n    cosmicLink._signersNode = signersNode;\n  }\n}\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\n\n\naction.send = function _callee3(cosmicLink) {\n  var horizon,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          horizon = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : cosmicLink.horizon;\n\n          if (cosmicLink.locker) {\n            _context4.next = 3;\n            break;\n          }\n\n          throw new Error(\"cosmicLink is not locked.\");\n\n        case 3:\n          _context4.prev = 3;\n\n          if (!cosmicLink.transaction.hasSigner(STELLARGUARD_PUBKEY)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 7;\n          return _regeneratorRuntime.awrap(sendToStellarGuard(cosmicLink));\n\n        case 7:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 10:\n          if (!cosmicLink.callback) {\n            _context4.next = 16;\n            break;\n          }\n\n          _context4.next = 13;\n          return _regeneratorRuntime.awrap(axios.post(cosmicLink.callback, {\n            xdr: cosmicLink.xdr\n          }));\n\n        case 13:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 16:\n          _context4.next = 18;\n          return _regeneratorRuntime.awrap(sendToHorizon(cosmicLink, horizon));\n\n        case 18:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 19:\n          _context4.next = 25;\n          break;\n\n        case 21:\n          _context4.prev = 21;\n          _context4.t0 = _context4[\"catch\"](3);\n          if (_context4.t0.response) console.error(_context4.t0.message, _context4.t0.response);\n          throw _context4.t0;\n\n        case 25:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[3, 21]]);\n};\n\nfunction sendToHorizon(cosmicLink, horizon) {\n  var server;\n  return _regeneratorRuntime.async(function sendToHorizon$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          server = resolve.server(cosmicLink, horizon); // Keep connection alive until transaction gets validated or a non-504 error\n          // is returned. 504 error means the transaction is still following the\n          // validation process.\n          // eslint-disable-next-line no-constant-condition\n\n        case 1:\n          if (!true) {\n            _context5.next = 14;\n            break;\n          }\n\n          _context5.prev = 2;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(server.submitTransaction(cosmicLink.transaction));\n\n        case 5:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](2);\n\n          if (!(_context5.t0.response.status !== 504)) {\n            _context5.next = 12;\n            break;\n          }\n\n          throw _context5.t0;\n\n        case 12:\n          _context5.next = 1;\n          break;\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[2, 8]]);\n}\n\nfunction sendToStellarGuard(cosmicLink) {\n  var url = cosmicLink.network === \"test\" ? \"https://test.stellarguard.me/api/transactions\" : \"https://stellarguard.me/api/transactions\";\n  return axios.post(url, {\n    xdr: cosmicLink.xdr,\n    callback: cosmicLink.callback\n  }).then(function (result) {\n    return result.data;\n  });\n}\n\nvar STELLARGUARD_PUBKEY = \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\";","\"use strict\";\n/**\n * Asynchronously load external ressources.\n */\n\n/**/\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar load = require(\"@cosmic-plus/domutils/es5/load\");\n\nmodule.exports = load;\n/**\n *\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @alias module:load#styles\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\n\nload.styles = function _callee() {\n  var href,\n      promise,\n      _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          href = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"https://cdn.cosmic.plus/cosmic-lib@2.x/cosmic-lib.css\";\n          promise = load.css(href);\n\n          load.styles = function () {\n            return promise;\n          };\n\n          return _context.abrupt(\"return\", promise);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","\"use strict\";\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\n\nvar specs = exports;\n/**\n * Transaction optional fields.\n */\n\nspecs.transactionOptionalFields = [\"network\", \"horizon\", \"callback\", \"memo\", \"source\", \"sequence\", \"minTime\", \"maxTime\", \"fee\"];\n/**\n * Transaction field meaning.\n */\n\nspecs.fieldDesc = {\n  network: \"Network\",\n  horizon: \"Horizon\",\n  callback: \"Callback\",\n  memo: \"Memo\",\n  source: \"Source\",\n  sequence: \"Sequence\",\n  minTime: \"Valid after\",\n  maxTime: \"Valid until\",\n  fee: \"Fees\"\n};\n/**\n * @param {string} field\n * @return {boolean}\n */\n\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Operation mandatory fields.\n */\n\n\nspecs.operationMandatoryFields = {\n  accountMerge: [\"destination\"],\n  allowTrust: [\"authorize\", \"assetCode\", \"trustor\"],\n  bumpSequence: [\"bumpTo\"],\n  changeTrust: [\"asset\"],\n  createAccount: [\"destination\", \"startingBalance\"],\n  createPassiveOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  createPassiveSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  inflation: [],\n  manageData: [\"name\", \"value\"],\n  manageOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  manageBuyOffer: [\"selling\", \"buying\", \"buyAmount\", \"price\"],\n  manageSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  pathPaymentStrictReceive: [\"sendAsset\", \"sendMax\", \"destination\", \"destAsset\", \"destAmount\"],\n  pathPaymentStrictSend: [\"sendAsset\", \"sendAmount\", \"destination\", \"destAsset\", \"destMin\"],\n  payment: [\"asset\", \"destination\", \"amount\"],\n  setOptions: []\n};\n/**\n * Operation optionnal fields.\n */\n\nspecs.operationOptionalFields = {\n  accountMerge: [\"source\"],\n  allowTrust: [\"source\"],\n  bumpSequence: [\"source\"],\n  changeTrust: [\"limit\", \"source\"],\n  createAccount: [\"source\"],\n  createPassiveOffer: [\"source\"],\n  createPassiveSellOffer: [\"source\"],\n  inflation: [\"source\"],\n  manageData: [\"source\"],\n  manageOffer: [\"offerId\", \"source\"],\n  manageBuyOffer: [\"offerId\", \"source\"],\n  manageSellOffer: [\"offerId\", \"source\"],\n  pathPaymentStrictReceive: [\"path\", \"source\"],\n  pathPaymentStrictSend: [\"path\", \"source\"],\n  payment: [\"source\"],\n  setOptions: [\"inflationDest\", \"clearFlags\", \"setFlags\", \"masterWeight\", \"lowThreshold\", \"medThreshold\", \"highThreshold\", \"signer\", \"homeDomain\", \"source\"]\n};\n/**\n * Operations fields\n */\n\nspecs.operationFields = {};\n\nfor (var field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field].concat(specs.operationOptionalFields[field]);\n}\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\n\n\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Field types.\n */\n\n\nspecs.fieldType = {\n  amount: \"amount\",\n  asset: \"asset\",\n  assetCode: \"string\",\n  assetIssuer: \"address\",\n  authorize: \"boolean\",\n  bumpTo: \"sequence\",\n  buyAmount: \"amount\",\n  buying: \"asset\",\n  callback: \"url\",\n  clearFlags: \"flags\",\n  destAsset: \"asset\",\n  destAmount: \"amount\",\n  destMin: \"amount\",\n  destination: \"address\",\n  fee: \"amount\",\n  highThreshold: \"threshold\",\n  homeDomain: \"string\",\n  horizon: \"url\",\n  inflationDest: \"address\",\n  limit: \"amount\",\n  lowThreshold: \"threshold\",\n  masterWeight: \"weight\",\n  maxTime: \"date\",\n  medThreshold: \"threshold\",\n  memo: \"memo\",\n  memoBinary: \"hash\",\n  memoHash: \"hash\",\n  memoId: \"id\",\n  memoReturn: \"hash\",\n  memoText: \"string\",\n  memoType: \"string\",\n  minTime: \"date\",\n  network: \"network\",\n  offerId: \"string\",\n  price: \"price\",\n  name: \"string\",\n  path: \"assetsArray\",\n  selling: \"asset\",\n  sendAmount: \"amount\",\n  sendAsset: \"asset\",\n  sendMax: \"amount\",\n  sequence: \"sequence\",\n  setFlags: \"flags\",\n  signer: \"signer\",\n  signerHash: \"hash\",\n  signerKey: \"address\",\n  signerType: \"string\",\n  signerTx: \"id\",\n  signerWeight: \"weight\",\n  source: \"address\",\n  startingBalance: \"amount\",\n  trustor: \"address\",\n  value: \"buffer\"\n};\n/**\n * An array of each valid type for fields.\n */\n\nspecs.types = [];\n\nvar _loop = function _loop(_field) {\n  var type = specs.fieldType[_field];\n  specs.types.find(function (entry) {\n    return entry === type;\n  }) || specs.types.push(type);\n};\n\nfor (var _field in specs.fieldType) {\n  _loop(_field);\n}\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\n\n\nspecs.neutralAccountId = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\";","\"use strict\";\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar resolve = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.server = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var horizon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : conf.horizon;\n  if (!horizon) horizon = resolve.horizon(conf, network);\n  if (!horizon) throw new Error(\"No horizon node defined for selected network.\");\n\n  if (!conf.current.server[horizon]) {\n    conf.current.server[horizon] = new StellarSdk.Server(horizon);\n  }\n\n  return conf.current.server[horizon];\n};\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @deprecated StellarSdk global `Network` setting is deprecated.\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.useNetwork = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  // DEPRECATED - to be removed when in sync with stellar-sdk 3.x.\n  console.warn(\"`.selectNetwork()`, `.useNetwork()`, as well as StellarSdk global `Network` setting are deprecated. Please use `cosmicLib.config.network` or pass parameter explicitely.\");\n  var passphrase = resolve.networkPassphrase(conf, network);\n  var currentPassphrase = resolve.networkPassphrase();\n\n  if (passphrase !== currentPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network);\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase));\n  }\n};\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\n\n\nresolve.horizon = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (conf.horizon) {\n    return conf.horizon;\n  } else {\n    var passphrase = resolve.networkPassphrase(conf, network);\n\n    if (conf.current && conf.current.horizon[passphrase]) {\n      return conf.current.horizon[passphrase];\n    }\n  }\n};\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\n\n\nresolve.networkPassphrase = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (network === undefined) {\n    // DEPRECATED: To be removed in sync with stellar-sdk 3.x.\n    var currentNetwork = StellarSdk.Network.current();\n    if (currentNetwork) return currentNetwork.networkPassphrase();\n  } else {\n    return conf.current.passphrase[network] || network;\n  }\n};\n/**\n * Returns the network name for **network passphrase**, or `undefined`.\n *\n * @param {string} networkPassphrase\n * @return {string}\n */\n\n\nresolve.networkName = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var networkPassphrase = arguments.length > 1 ? arguments[1] : undefined;\n  var index = Object.values(conf.current.passphrase).indexOf(networkPassphrase);\n  if (index === -1) return networkPassphrase;else return Object.keys(conf.current.passphrase)[index];\n};\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\n\n\nresolve.address = function (conf, address) {\n  var cache = conf.cache;\n  if (cache && cache.destination[address]) return cache.destination[address];\n  var promise = addressResolver(conf, address);\n  if (cache) cache.destination[address] = promise;\n  return promise;\n};\n\nfunction addressResolver(conf, address) {\n  var account, accountId;\n  return _regeneratorRuntime.async(function addressResolver$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(StellarSdk.FederationServer.resolve(address));\n\n        case 3:\n          account = _context.sent;\n          accountId = account.account_id;\n\n          if (accountId) {\n            _context.next = 7;\n            break;\n          }\n\n          throw new Error(\"Unknow address\");\n\n        case 7:\n          if (!account.memo_type) delete account.memo;\n          if (address !== accountId) account.address = address;\n\n          if (conf.aliases && conf.aliases[accountId]) {\n            account.alias = conf.aliases[accountId];\n          }\n\n          return _context.abrupt(\"return\", account);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          status.error(conf, \"Can't resolve: \" + misc.shorter(address));\n          status.fail(conf, \"Unresolved address\", \"throw\");\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 13]]);\n}\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\n\n\nresolve.account = function _callee(conf, address, quietFlag) {\n  var account, accountId, cache, promise;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(resolve.address(conf, address));\n\n        case 2:\n          account = _context2.sent;\n          accountId = account.account_id;\n          cache = conf.cache;\n\n          if (!(cache && cache.account[accountId])) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", cache.account[accountId]);\n\n        case 7:\n          promise = accountResolver(conf, accountId, quietFlag);\n          if (cache) cache.account[accountId] = promise;\n          return _context2.abrupt(\"return\", promise);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nfunction accountResolver(conf, accountId, quietFlag) {\n  var server, accountResponse;\n  return _regeneratorRuntime.async(function accountResolver$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          server = resolve.server(conf);\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(server.loadAccount(accountId));\n\n        case 4:\n          accountResponse = _context3.sent;\n          return _context3.abrupt(\"return\", accountResponse);\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](1);\n\n          if (!quietFlag) {\n            _context3.next = 14;\n            break;\n          }\n\n          throw _context3.t0;\n\n        case 14:\n          if (_context3.t0.response) {\n            status.error(conf, \"Empty account: \" + misc.shorter(accountId), \"throw\");\n          } else {\n            status.error(conf, \"Invalid horizon node: \" + resolve.horizon(conf), \"throw\");\n          }\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 8]]);\n}\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\n\n\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(function () {\n    return false;\n  })[\"catch\"](function () {\n    return true;\n  });\n};\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\n\n\nresolve.txSourceAccount = function _callee2(conf, address, sequence) {\n  var destination, account, baseAccount;\n  return _regeneratorRuntime.async(function _callee2$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (address) {\n            _context4.next = 4;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", makeAccountResponse(conf, specs.neutralAccountId, \"-1\"));\n\n        case 4:\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(resolve.address(conf, address));\n\n        case 6:\n          destination = _context4.sent;\n          if (destination.memo) status.error(conf, \"Invalid transaction source address (requires a memo)\", \"throw\");\n          _context4.next = 10;\n          return _regeneratorRuntime.awrap(resolve.account(conf, destination.account_id));\n\n        case 10:\n          account = _context4.sent;\n\n          if (sequence) {\n            baseAccount = new StellarSdk.Account(account.id, sequence);\n            baseAccount.sequence = baseAccount.sequence.sub(1);\n            account._baseAccount = baseAccount;\n          }\n\n          return _context4.abrupt(\"return\", account);\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\n/**\n * Creates an AccountResponse object with signers set for an empty account.\n *\n * @param  {string} publicKey\n * @param  {string} sequence [description]\n * @return {AccountResponse}\n */\n\n\nfunction makeAccountResponse(conf, publicKey, sequence) {\n  var account = new StellarSdk.Account(publicKey, sequence);\n  if (conf.cache) conf.cache.account[publicKey] = account;\n  account.id = publicKey;\n  account.signers = [{\n    public_key: publicKey,\n    weight: 1,\n    key: publicKey,\n    type: \"ed25519_public_key\"\n  }];\n  return account;\n}\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error(\"No source for transaction\");\n  var extra = resolve.extra(conf, transaction);\n  if (extra.cache.txSources) return extra.cache.txSources;\n  var array = extra.cache.txSources = [transaction.source];\n\n  var _loop = function _loop(index) {\n    var source = transaction.operations[index].source;\n    if (source && !array.find(function (a) {\n      return a === source;\n    })) array.push(source);\n  };\n\n  for (var index in transaction.operations) {\n    _loop(index);\n  }\n\n  return array;\n};\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\n\n\nresolve.txSigners = function _callee3(conf, transaction) {\n  var extra, txSources, signers, index, source, account;\n  return _regeneratorRuntime.async(function _callee3$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          extra = resolve.extra(conf, transaction);\n\n          if (!extra.cache.txSigners) {\n            _context5.next = 3;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", extra.cache.txSigners);\n\n        case 3:\n          txSources = resolve.txSources(extra, transaction);\n          signers = extra.cache.txSigners = {};\n          _context5.t0 = _regeneratorRuntime.keys(txSources);\n\n        case 6:\n          if ((_context5.t1 = _context5.t0()).done) {\n            _context5.next = 15;\n            break;\n          }\n\n          index = _context5.t1.value;\n          source = txSources[index];\n          _context5.next = 11;\n          return _regeneratorRuntime.awrap(resolveTxSource(extra, source));\n\n        case 11:\n          account = _context5.sent;\n\n          if (!signers[account.id]) {\n            signers[account.id] = account.signers.filter(function (signer) {\n              return signer.type !== \"preauthTx\";\n            });\n          }\n\n          _context5.next = 6;\n          break;\n\n        case 15:\n          return _context5.abrupt(\"return\", signers);\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\n\nfunction resolveTxSource(conf, address) {\n  return _regeneratorRuntime.async(function resolveTxSource$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(resolve.account(conf, address, \"quiet\"));\n\n        case 3:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n          return _context6.abrupt(\"return\", makeAccountResponse(conf, address, \"0\"));\n\n        case 9:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 6]]);\n}\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nresolve.txSignersList = function _callee4(conf, transaction) {\n  var extra, txSigners;\n  return _regeneratorRuntime.async(function _callee4$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          extra = resolve.extra(conf, transaction);\n\n          if (extra.cache.txSignersList) {\n            _context7.next = 6;\n            break;\n          }\n\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(resolve.txSigners(extra, transaction));\n\n        case 4:\n          txSigners = _context7.sent;\n          extra.cache.txSignersList = signersTableToSignersList(txSigners);\n\n        case 6:\n          return _context7.abrupt(\"return\", extra.cache.txSignersList);\n\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};\n\nfunction signersTableToSignersList(signersTable) {\n  var array = [];\n\n  for (var accountId in signersTable) {\n    signersTable[accountId].forEach(function (signer) {\n      if (!array.find(function (key) {\n        return key === signer.key;\n      })) array.push(signer.key);\n    });\n  }\n\n  return array;\n}\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\n\n\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    misc.setHiddenProperty(object, \"_cosmicplus\", {});\n    if (conf.cache) object._cosmicplus.cache = conf.cache;else object._cosmicplus.cache = {\n      destination: {},\n      account: {}\n    };\n    object._cosmicplus.network = conf.network;\n    object._cosmicplus.current = conf.current;\n  }\n\n  return object._cosmicplus;\n};","\"use strict\";\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\n\nvar status = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\n\n\nstatus.init = function (conf) {\n  conf.status = null;\n  conf.errors = false;\n};\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\n\n\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return; // eslint-disable-next-line no-console\n\n  console.log(\"Set status: \" + status);\n  conf.status = status;\n\n  if (conf._statusNode) {\n    var title = html.grab(\".cosmiclib_status\", conf._statusNode);\n    title.textContent = status;\n  }\n};\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\n\n\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus);\n  errorContinuation(errorStatus, continuation);\n};\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\n\n\nstatus.error = function (conf, error, continuation) {\n  // eslint-disable-next-line no-console\n  console.log(error);\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = [];\n    conf.errors.push(error);\n\n    if (conf._statusNode) {\n      var errorsNode = html.grab(\".cosmiclib_errors\", conf._statusNode);\n      var lineNode = html.create(\"li\", null, error);\n      html.append(errorsNode, lineNode);\n    }\n  }\n\n  errorContinuation(error, continuation);\n};\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\n\n\nstatus.makeHtmlNode = function (conf) {\n  var statusNode = html.create(\"div\", \".cosmiclib_statusNode\");\n  var statusLine = html.create(\"span\", \".cosmiclib_status\");\n  html.append(statusNode, statusLine);\n  if (conf.status) statusLine.textContent = conf.status;\n  var errorsNode = html.create(\"ul\", \".cosmiclib_errors\");\n  html.append(statusNode, errorsNode);\n\n  if (conf.errors) {\n    conf.errors.forEach(function (error) {\n      var errorLine = html.create(\"li\", null, error);\n      html.append(errorsNode, errorLine);\n    });\n  }\n\n  return statusNode;\n};\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\n\n\nfunction errorContinuation(error, continuation) {\n  if (continuation) {\n    if (continuation === \"throw\") throw new Error(error);else continuation(error);\n  }\n}","\"use strict\";\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\n\nvar decode = exports;\n\nvar check = require(\"./check\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n\ndecode.query = function (conf) {\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  if (query.substr(0, 1) !== \"?\") status.fail(conf, \"Invalid query\", \"throw\");\n  query = query.substr(1);\n  var operations = [];\n  var tdesc = {}; // Backward compatibility with the old non-standard syntax, deprecated since\n  // 2019-08-26. This adds `type=` at the beginning of the query when the first\n  // parameter doesn't contains an `=` sign.\n\n  if (query.match(/^\\w+(&|$)/)) query = \"type=\".concat(query);\n  var parser;\n  var params = query.split(\"&\");\n\n  for (var index in params) {\n    var entry = params[index];\n    var field = entry.split(\"=\", 1)[0];\n    var value = entry.substring(field.length + 1);\n    if (!field) continue;\n\n    if (field === \"type\") {\n      if (parser) {\n        status.error(conf, \"Query declares 'type' several times\", \"throw\");\n      } else if (value !== \"transaction\") {\n        operations[0] = {\n          type: value\n        };\n      }\n\n      parser = value;\n      continue;\n    } else if (!parser) {\n      status.error(conf, \"Query doesn't declare 'type' in first position\", \"throw\");\n    }\n\n    if (field === \"operation\") {\n      operations.push({\n        type: value\n      });\n      parser = \"operation\";\n      continue;\n    }\n\n    var decoded = decode.field(conf, field, value); /// Multi-operation link.\n\n    if (parser === \"transaction\") {\n      tdesc[field] = decoded;\n    } else if (parser === \"operation\") {\n      operations[operations.length - 1][field] = decoded; /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = decoded;\n      } else {\n        operations[0][field] = decoded;\n      }\n    }\n  }\n\n  tdesc.operations = operations;\n  normalize.tdesc(conf, tdesc);\n  tdesc.operations.forEach(function (odesc) {\n    return normalize.odesc(conf, odesc);\n  });\n  check.tdesc(conf, tdesc);\n  return tdesc;\n};\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\ndecode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  return type ? decode.type(conf, type, value) : value;\n};\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value);\n    return process[type] ? process[type](conf, value) : value;\n  } else {\n    return \"\";\n  }\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  var assetLower = asset.toLowerCase();\n\n  if (assetLower === \"xlm\" || assetLower === \"native\") {\n    return {\n      code: \"XLM\"\n    };\n  } else {\n    var temp = asset.split(\":\");\n    var object = {\n      code: temp[0],\n      issuer: temp[1]\n    };\n    return object;\n  }\n};\n\nprocess.assetsArray = function (conf, assetsList) {\n  var strArray = assetsList.split(\",\");\n  return strArray.map(function (entry) {\n    return decode.asset(conf, entry);\n  });\n};\n\nprocess[\"boolean\"] = function (conf, string) {\n  switch (string) {\n    case \"true\":\n      return true;\n\n    case \"false\":\n      return false;\n  }\n};\n\nprocess.buffer = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.date = function (conf, string) {\n  /// now + {minutes} syntactic sugar\n  if (string.match(/^\\+[0-9]+$/)) return string; /// Use UTC timezone by default.\n\n  if (string.match(/T[^+]*[0-9]$/)) string += \"Z\";\n  return new Date(string).toISOString();\n};\n\nprocess.memo = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n    case \"id\":\n    case \"hash\":\n    case \"return\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.price = function (conf, price) {\n  var numerator = price.replace(/:.*/, \"\");\n  var denominator = price.replace(/^[^:]*:/, \"\");\n  if (numerator === denominator) return price;else return {\n    n: +numerator,\n    d: +denominator\n  };\n};\n\nprocess.signer = function (conf, signer) {\n  var temp = signer.split(\":\");\n  var object = {\n    weight: temp[0],\n    type: temp[1],\n    value: temp[2]\n  };\n  return object;\n};\n\nprocess.string = function (conf, string) {\n  return string.replace(/\\+/g, \" \");\n};\n\nprocess.network = process.string;\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return decode.type(conf, type, value);\n  };\n});","\"use strict\";\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.set as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\n\nvar config = exports;\n\nvar aliases = require(\"@cosmic-plus/base/es5/aliases\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar event = env.isBrowser && require(\"./event\");\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\n\n\nconfig.page = \"https://cosmic.link/\";\n/**\n * The default fallback network.\n * @default 'public'\n */\n\nconfig.network = \"public\";\n/**\n * The default fallback source address.\n * @default undefined\n */\n\nconfig.source = undefined;\n/**\n * Networks setup.\n *\n * @private\n */\n\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n};\n/**\n * Set default **passphrase** and **horizon** URL for network **name**.\n *\n * Adding custom network this way will enable the use of their name in cosmic\n * queries (as in `&network=name`). However, please remind that this feature\n * will works only on your side and could break compatibility with other\n * services.\n *\n * @example\n * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n *\n * @param {string} name Network name (like 'public', 'test')\n * @param {string} horizon Horizon URL\n * @param {string} [passphrase] Network passphrase\n */\n\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase;else passphrase = config.current.passphrase[name];\n  config.current.horizon[passphrase] = horizon;\n};\n\nconfig.setupNetwork(\"public\", \"https://horizon.stellar.org\", StellarSdk.Networks.PUBLIC);\nconfig.setupNetwork(\"test\", \"https://horizon-testnet.stellar.org\", StellarSdk.Networks.TESTNET);\nconfig.aliases = aliases.all;\n\nconfig.addAliases = function (definitions) {\n  return aliases.set(config, definitions);\n};\n\nconfig.removeAliases = function (array) {\n  return aliases.remove(config, array);\n};\n\nconfig.clickHandlers = event.defaultClickHandlers;\n\nconfig.setClickHandler = function (fieldType, callback) {\n  return event.setClickHandler(config, fieldType, callback);\n};\n\nconfig.clearClickHandler = function (fieldType) {\n  return event.clearClickHandler(config, fieldType);\n};","\"use strict\";\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\n\nvar convert = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar construct = require(\"./construct\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar encode = require(\"./encode\");\n\nvar resolve = require(\"./resolve\");\n/** ****************************    URI -> XDR    ******************************/\n\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null;\n  var query = uri.replace(/^[^?]*/, \"\");\n  return query;\n};\n\nconvert.queryToTdesc = decode.query;\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2);\n};\n\nconvert.tdescToTransaction = construct.transaction;\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR(\"base64\");\n};\n\nconvert.xdrToSep7 = function (conf, xdr, options) {\n  if (conf.locker && !conf.locker.source) {\n    throw new Error(\"SEP-0007 requires a source account.\");\n  }\n\n  var sep7 = \"web+stellar:tx?xdr=\";\n  sep7 += encodeURIComponent(xdr);\n\n  if (conf.extra.pubkey) {\n    sep7 += \"&pubkey=\" + encodeURIComponent(conf.extra.pubkey);\n  }\n\n  if (conf.extra.msg) {\n    sep7 += \"&msg=\" + encodeURIComponent(conf.extra.msg);\n  }\n\n  if (options.network && options.network !== \"public\") {\n    var passphrase = resolve.networkPassphrase(conf, options.network);\n    sep7 += \"&network_passphrase=\" + encodeURIComponent(passphrase);\n  }\n\n  if (options.callback) {\n    sep7 += \"&callback=\" + encode.url(conf, \"url:\".concat(options.callback));\n  }\n\n  if (typeof conf.extra.originDomain === \"string\") {\n    sep7 += \"&origin_domain=\" + conf.extra.originDomain;\n    sep7 += \"&signature=\" + conf.extra.signature;\n  } // Not part of the standard.\n  // if (options.horizon) sep7 +=\"&horizon=\" + encode.url(conf, options.horizon)\n\n\n  return sep7;\n};\n/** ****************************    XDR -> URI    ******************************/\n\n\nconvert.xdrToTransaction = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var networkPassphrase = resolve.networkPassphrase(conf, options.network);\n  var transaction = new StellarSdk.Transaction(xdr, networkPassphrase);\n  if (options.strip === \"signatures\") transaction.signatures = [];\n  return transaction;\n};\n\nconvert.xdrToQuery = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var query = \"?xdr=\" + xdr;\n  if (options.network) query += \"&network=\" + encodeURIComponent(options.network);\n  if (options.horizon) query += \"&horizon=\" + encode.url(conf, options.horizon);\n  if (options.callback) query += \"&callback=\" + encode.url(conf, options.callback); // Handle with source-independent transactions.\n\n  if (conf.locker && !conf.locker.source) query += \"&strip=source\";\n  return query;\n};\n\nconvert.transactionToTdesc = destruct.transaction;\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json);\n};\n\nconvert.tdescToQuery = encode.query;\n\nconvert.queryToUri = function (conf, query) {\n  var page = conf.page || \"https://cosmic.link\";\n  return page + query;\n};","\"use strict\";\n/**\n * Exposes some of the check routines used by cosmic-lib. Individual type-checks\n * are also available for:\n *\n * > address, amount, asset, assetsArray, boolean, buffer, date, flags, hash,\n * id, memo, network, price, sequence, signer, string, threshold, url, weight\n *\n * All checks are meant to be used on tdesc formatted values. Form example, in\n * tdesc buffer values are not encoded as actual Buffer object but as something\n * like: `{ type: \"text\", value: \"Hello World!\"}`.\n *\n * @example\n * check.field(\"minTime\", \"2018-11\")\n * check.date(\"2018-11\")\n *\n * @private\n * @exports check\n */\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar check = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Check that **tdesc** is valid.\n *\n * @example\n * check.tdesc({\n *   memo: { type: \"text\", value: \"Hello, World!\" },\n *   network: \"public\",\n *   source: \"tips*cosmic.link\",\n *   operations: [{ type: \"setOptions\", homeDomain: \"cosmic.link\" }]\n * })\n *\n * @param  {Object} tdesc\n */\n\n\ncheck.tdesc = function (conf, tdesc) {\n  var isValid = true;\n\n  for (var field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field]);\n    } catch (error) {\n      isValid = false;\n      tdesc[field] = errDesc(error, tdesc[field]);\n    }\n  }\n\n  if (tdesc.operations.length > 100) {\n    isValid = false;\n    status.error(conf, \"Too much operations (max 100)\");\n  }\n\n  tdesc.operations.forEach(function (odesc) {\n    try {\n      check.odesc(conf, odesc);\n    } catch (e) {\n      isValid = false;\n    }\n  });\n\n  if (!isValid) {\n    var error = new Error(\"Invalid tdesc\"); // TODO: check if this is really useful\n\n    error.tdesc = tdesc;\n    throw error;\n  }\n};\n/**\n * Check that tdesc operation is valid (referred as **odesc**).\n *\n * @example\n * check.odesc({ type: \"payment\", destination: \"tips*cosmic.link\", amount: \"20\" })\n *\n * @param  {Object} odesc [description]\n */\n\n\ncheck.odesc = function (conf, odesc) {\n  var isValid = true;\n\n  try {\n    check.operationType(conf, odesc.type);\n  } catch (error) {\n    isValid = false;\n    odesc.type = errDesc(error, odesc.type);\n  }\n\n  for (var field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field]);\n    } catch (error) {\n      isValid = false;\n      odesc[field] = errDesc(error, odesc[field]);\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(function (field) {\n    if (odesc[field] === undefined) {\n      isValid = false;\n      var error = new Error(\"Missing mandatory field: \" + field);\n      odesc[field] = errDesc(error);\n      status.error(conf, error.message);\n    }\n  });\n  if (!isValid) throw new Error(\"Invalid odesc\");\n};\n/**\n * Check that **field** is a valid transaction field and that its **value** is\n * valid.\n *\n * @param  {string} field\n * @param  {*} value\n */\n\n\ncheck.txField = function (conf, field, value) {\n  if (field === \"operations\") return;\n\n  if (!specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  })) {\n    status.error(conf, \"Invalid transaction field: \" + field, \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n/**\n * Check that **type** is a valid Stellar Operation type.\n *\n * @param  {String}\n */\n\n\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, \"Invalid operation: \" + type, \"throw\");\n  }\n};\n/**\n * Check that **field** is a valid **operation** field and that its **value** is\n * valid.\n *\n * @param {String} operation\n * @param {String} field\n * @param {*} value\n */\n\n\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === \"type\") return;\n\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, \"Invalid field for \".concat(operation, \": \").concat(field), \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n\nfunction errDesc(error) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return {\n    error: error,\n    value: value\n  };\n}\n/******************************************************************************/\n\n/**\n * Check that **field** **value** is a valid.\n *\n * @example\n * check.field(\"memo\", { type: \"text\", value: \"Hello, World!\" })\n *\n * @param {string} field The name of a Stellar Transaction parameter\n * @param {*} value\n */\n\n\ncheck.field = function (conf, field, value) {\n  if (value === \"\" && field !== \"homeDomain\" && field !== \"value\") {\n    status.error(conf, \"Missing value for field: \".concat(field), \"throw\");\n  }\n\n  var type = specs.fieldType[field];\n  if (!type) status.error(conf, \"Unknow field: \" + field, \"throw\");\n  if (value) check.type(conf, type, value);\n};\n/**\n * Check that **value** is of type **type**.\n *\n * @example\n * check.type(\"date\", \"2018-11-28\")\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(function (entry) {\n    return entry === type;\n  })) {\n    throw new Error(\"Invalid type: \" + type);\n  }\n\n  return check[type](conf, value);\n};\n/**\n * Generic check for numbers. Check that **value** is a number or a string\n * representing a number. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction\n * for `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.number = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"number\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"unlimited\";\n  var num = +value;\n\n  if (isNaN(num)) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be a number): \").concat(value), \"throw\");\n  } else if (min && num < min || max && num > max) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be between \").concat(min, \" and \").concat(max, \" ): \").concat(value), \"throw\");\n  }\n};\n/**\n * Generic check for integers. Check that **value** is an integer or a string\n * representing an integer. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction for\n * **value**.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.integer = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"integer\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 ? arguments[4] : undefined;\n  check.number(conf, value, type, min, max);\n\n  if (parseInt(value) + \"\" !== value + \"\") {\n    status.error(conf, \"Not an integer: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is an UTF-8 string.\n *\n * *Note:* This use a weak (simplified) test that may not be accurate for small\n * strings.\n *\n * @param  {String} value\n */\n\n\ncheck.utf8 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isUtf8(value)) {\n    status.error(conf, \"Invalid UTF8 string: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is a base64 string.\n *\n * @param  {String} value\n */\n\n\ncheck.base64 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isBase64(value)) {\n    status.error(conf, \"Invalid base64 string: \".concat(value), \"throw\");\n  }\n};\n/******************************************************************************/\n\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, \"amount\");\n};\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, \"Invalid address: \" + misc.shorter(address), \"throw\");\n  }\n};\n\ncheck.asset = function (conf, asset) {\n  var code = asset.code.toLowerCase();\n\n  if (!asset.issuer && code !== \"xlm\" && code !== \"native\") {\n    status.error(conf, \"Missing issuer for asset: \" + code, \"throw\");\n  }\n};\n\ncheck.assetsArray = function (conf, assetsArray) {\n  var isValid = true;\n\n  for (var index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index]);\n    } catch (error) {\n      console.error(error);\n      isValid = false;\n    }\n  }\n\n  if (!isValid) throw new Error(\"Invalid assets array\");\n};\n\ncheck[\"boolean\"] = function (conf, _boolean) {\n  if (typeof _boolean !== \"boolean\") {\n    status.error(conf, \"Invalid boolean: \" + _boolean, \"throw\");\n  }\n};\n\ncheck.buffer = function (conf, buffer) {\n  switch (buffer.type) {\n    case \"text\":\n      check.utf8(conf, buffer.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, buffer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid buffer type: \" + buffer.type, \"throw\");\n  }\n};\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, \"Invalid date: \" + date, \"throw\");\n  }\n};\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, \"flags\", 0, 7);\n};\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/^[0-9a-f]*$/)) {\n    status.error(conf, \"Invalid hash: \" + hash, \"throw\");\n  }\n};\n\ncheck.id = function (conf, id) {\n  if (!id.match(/^[0-9]*$/)) status.error(conf, \"Invalid id: \" + id, \"throw\");\n};\n\ncheck.memo = function (conf, memo) {\n  switch (memo.type) {\n    case \"text\":\n      check.utf8(conf, memo.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, memo.value);\n      break;\n\n    case \"hash\":\n    case \"return\":\n      check.hash(conf, memo.value);\n      break;\n\n    case \"id\":\n      check.id(conf, memo.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid memo type: \" + memo.type, \"throw\");\n  }\n};\n\ncheck.price = function (conf, price) {\n  if (_typeof(price) === \"object\") {\n    try {\n      check.price(null, price.n);\n      check.price(null, price.d);\n    } catch (error) {\n      status.error(conf, \"Invalid price: \" + price, \"throw\");\n    }\n  } else {\n    check.number(conf, price, \"price\", 0);\n  }\n};\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight);\n\n  switch (signer.type) {\n    case \"key\":\n      check.address(conf, signer.value);\n      break;\n\n    case \"hash\":\n    case \"tx\":\n      check.hash(conf, signer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid signer type: \" + signer.type, \"throw\");\n  }\n};\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, \"sequence\", 0);\n};\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, \"threshold\", 0, 255);\n};\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, \"weight\", 0, 255);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nif (env.isBrowser) require(\"@cosmic-plus/domutils/es5/polyfill\");\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} module A cosmic-lib module whose functions takes config as\n *   the first argument.\n * @param {Object} config A configuration object similar than config.js module.\n * @private\n */\n\nfunction exposeModule(module) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var layer = Object.assign({}, module);\n  misc.setHiddenProperty(layer, \"_config\", config);\n\n  var _loop = function _loop(name) {\n    if (typeof module[name] === \"function\") {\n      layer[name] = function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return module[name].apply(module, [this._config].concat(params));\n      };\n    } else {\n      layer[name] = module[name];\n    }\n  };\n\n  for (var name in module) {\n    _loop(name);\n  }\n\n  return layer;\n}\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\n\n\nexports.withConfig = function (params) {\n  var library = Object.create(this);\n  library.config = Object.assign({}, this.config, params);\n\n  for (var module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] =\n      /*#__PURE__*/\n      function (_this$module) {\n        _inherits(_class, _this$module);\n\n        function _class() {\n          _classCallCheck(this, _class);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n        }\n\n        return _class;\n      }(this[module]);\n\n      Object.assign(library[module].prototype, this[module].prototype);\n      library[module].prototype.__proto__ = library.config;\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module]);\n      misc.setHiddenProperty(library[module], \"_config\", library.config);\n    }\n  }\n\n  return library;\n};\n/**\n * Export modules **names** after linking them to `config`.\n *\n * @param  {...String} names Module names\n */\n\n\nfunction exportModule(name, module) {\n  exports[name] = exposeModule(module, config);\n} // Export modules.\n\n\nvar config = exports.config = require(\"./config\");\n\nexports.CosmicLink = require(\"./cosmiclink\");\nif (env.isBrowser) exports.load = require(\"./load\");\nexportModule(\"resolve\", require(\"./resolve\"));\nexportModule(\"signersUtils\", require(\"./signers-utils\"));\nexports.specs = require(\"./specs\"); // sep7Utils\n\nvar _require = require(\"./sep7-utils\"),\n    isWebHandlerSupported = _require.isWebHandlerSupported,\n    registerWebHandler = _require.registerWebHandler;\n\nexports.sep7Utils = {\n  isWebHandlerSupported: isWebHandlerSupported,\n  registerWebHandler: registerWebHandler\n}; // Export helpers (not documented in the manual - please check the code).\n\nexportModule(\"check\", require(\"./check\"));\nexportModule(\"expand\", require(\"./expand\"));\nexportModule(\"construct\", require(\"./construct\"));\nexportModule(\"destruct\", require(\"./destruct\"));\nexportModule(\"encode\", require(\"./encode\"));\nexportModule(\"decode\", require(\"./decode\"));","\"use strict\";\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar format = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar nice = require(\"@cosmic-plus/jsutils/es5/nice\");\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar event = require(\"./event\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar specs = require(\"./specs\");\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\n\n\nformat.tdesc = function (conf, tdesc) {\n  var trNode = html.create(\"div\", \".cosmiclib_transactionNode\");\n  if (!tdesc) return trNode; // SEP-0007 verified domain.\n\n  if (conf.extra.originDomain) {\n    var domainNode = html.create(\"div\");\n    html.append(trNode, domainNode);\n    conf.verifySep7().then(function () {\n      html.append(domainNode, \"Request from: \".concat(conf.extra.originDomain));\n      domainNode.className = \"cosmicLib_signed\";\n    });\n  }\n\n  var infoNode;\n\n  for (var index in specs.transactionOptionalFields) {\n    var entry = specs.transactionOptionalFields[index];\n    if (entry === \"horizon\" && resolve.horizon(config, conf.network)) continue;\n\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create(\"ul\", \".cosmiclib_sideInfo\");\n      var lineNode = html.create(\"li\", {}, specs.fieldDesc[entry] + \": \", format.field(conf, entry, tdesc[entry]));\n      html.append(infoNode, lineNode);\n    }\n  }\n\n  if (infoNode) html.append(trNode, infoNode);\n\n  try {\n    for (var _index in tdesc.operations) {\n      var operation = tdesc.operations[_index];\n      var opNode = format.odesc(conf, operation);\n      opNode.index = _index;\n      html.append(trNode, opNode);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (!tdesc.operations.length) {\n    if (Object.keys(tdesc).length === 1) {\n      html.append(trNode, html.create(\"div\", null, \"No transaction\"));\n    } else {\n      html.append(trNode, html.create(\"div\", \".cosmiclib_operation\", \"No operation\"));\n    }\n  }\n\n  trNode.tdesc = tdesc;\n  return trNode;\n};\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\n\n\nformat.odesc = function (conf, odesc) {\n  var opNode = html.create(\"div\", \".cosmiclib_operation\");\n  opNode.odesc = odesc;\n  var retNode = opNode;\n\n  if (odesc.source) {\n    retNode = html.create(\"div\", \".cosmiclib_sourcedOperation\");\n    var sourceNode = html.create(\"div\", \".cosmiclib_sideInfo\", \"Source: \");\n    var addressNode = format.address(conf, odesc.source);\n    html.append(sourceNode, addressNode);\n    html.append(retNode, sourceNode, opNode);\n  }\n\n  var meaning = operationMeaning(odesc);\n\n  while (meaning) {\n    if (meaning.substr(0, 1) === \"{\") {\n      var query = meaning.substr(1).replace(/}.*/, \"\");\n      meaning = meaning.replace(/^[^}]*}/, \"\");\n\n      if (query === \"newline\") {\n        if (meaning === \"\") break;\n        html.append(opNode, html.create(\"br\"));\n      } else {\n        var fieldNode = format.field(conf, query, odesc[query]);\n        html.append(opNode, fieldNode);\n      }\n    } else {\n      var txt = meaning.replace(/{.*/, \"\");\n      meaning = meaning.replace(/^[^{]*/, \"\");\n      html.append(opNode, txt);\n    }\n  }\n\n  return retNode;\n};\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\n\n\nfunction operationMeaning(odesc) {\n  var msg = \"\";\n\n  switch (odesc.type) {\n    case \"accountMerge\":\n      return \"Merge account inside {destination}\";\n\n    case \"allowTrust\":\n      if (odesc.authorize) {\n        return \"Allow usage of your asset {assetCode} to {trustor}\";\n      } else {\n        return \"Deny usage of your asset {assetCode} to {trustor}\";\n      }\n\n    case \"bumpSequence\":\n      return \"Set account sequence number to {bumpTo}\";\n\n    case \"changeTrust\":\n      if (odesc.limit === \"0\") {\n        return \"Refuse asset {asset}\";\n      } else if (odesc.limit) {\n        return \"Set holding limit as {limit} for asset {asset}\";\n      } else {\n        return \"Accept asset {asset}\";\n      }\n\n    case \"createAccount\":\n      return \"Create account {destination} and send {startingBalance} XLM to it\";\n\n    case \"createPassiveOffer\":\n    case \"createPassiveSellOffer\":\n      return \"Offer to passively sell {amount} {selling} at {price} {buying} / unit\";\n\n    case \"inflation\":\n      return \"Run inflation\";\n\n    case \"manageData\":\n      if (odesc.value) {\n        if (odesc.value.type === \"text\") {\n          return \"Set data entry '{name}' to: '{value}'\";\n        } else {\n          return \"Set data entry '{name}' to base64: '{value}'\";\n        }\n      } else {\n        return \"Delete data entry '{name}'\";\n      }\n\n    case \"manageOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      if (odesc.amount === \"0\" || odesc.buyAmount === \"0\") {\n        return \"Delete offer '{offerId}'\";\n      } else {\n        if (odesc.offerId) {\n          msg += \"Change offer '{offerId}' into:{newline}\";\n        }\n\n        if (odesc.type === \"manageBuyOffer\") {\n          msg += \"Offer to buy {buyAmount} {buying} at {price} {selling} / unit\";\n        } else {\n          msg += \"Offer to sell {amount} {selling} at {price} {buying} / unit\";\n        }\n\n        return msg;\n      }\n\n    case \"pathPaymentStrictReceive\":\n      msg = \"Send {destAmount} {destAsset} to {destination} for a maximum \" + \"of {sendMax} {sendAsset}\";\n      if (odesc.path) msg += \" using conversion path: {path}\";\n      return msg;\n\n    case \"pathPaymentStrictSend\":\n      msg = \"Send at least {destMin} {destAsset} to {destination} for \" + \"{sendAmount} {sendAsset}\";\n      if (odesc.path) msg += \" using conversion path: {path}\";\n      return msg;\n\n    case \"payment\":\n      return \"Send {amount} {asset} to {destination}\";\n\n    case \"setOptions\":\n      if (odesc.inflationDest) {\n        msg += \"Set inflation destination to: {inflationDest}{newline}\";\n      }\n\n      if (odesc.clearFlags) msg += \"Clear flag(s): {clearFlags}{newline}\";\n      if (odesc.setFlags) msg += \"Set flag(s): {setFlags}{newline}\";\n\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === \"0\") {\n          msg += \"Delete master key{newline}\";\n        } else {\n          msg += \"Set master key weight at: {masterWeight}{newline}\";\n        }\n      }\n\n      [\"lowThreshold\", \"medThreshold\", \"highThreshold\"].forEach(function (field) {\n        if (odesc[field]) msg += \"Set \" + field + \" at: {\" + field + \"}{newline}\";\n      });\n\n      if (odesc.signer) {\n        if (odesc.signer.type === \"tx\") {\n          if (odesc.signer.weight === \"0\") msg += \"Remove pre-signed {signer}{newline}\";else msg += \"Pre-sign {signer}{newline}\";\n        } else {\n          if (odesc.signer.weight === \"0\") msg += \"Remove signer: {signer}{newline}\";else msg += \"Set signer: {signer}{newline}\";\n        }\n      }\n\n      if (odesc.homeDomain) msg += \"Set home domain: {homeDomain}{newline}\";\n      if (odesc.homeDomain === \"\") msg += \"Unset home domain\";\n      if (!msg) msg = \"Do nothing\";\n      return msg;\n\n    default:\n      throw new Error(\"Unknow operation: \" + odesc.type);\n  }\n}\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\n\n\nformat.signatures = function (conf, transaction) {\n  var signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  signersUtils[\"for\"](conf, transaction).then(function (utils) {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return;\n    utils.sources.forEach(function (accountId) {\n      if (accountId !== specs.neutralAccountId) {\n        var div = makeAccountSignersNode(conf, utils, accountId);\n        html.append(signersNode, div);\n      }\n    });\n  });\n  return signersNode;\n};\n\nfunction makeAccountSignersNode(conf, utils, accountId) {\n  var accountSignersNode = html.create(\"div\");\n  var title = \"Signers for \" + misc.shorter(accountId);\n  var titleNode = html.create(\"span\", \".cosmiclib_threshold\", title);\n  var listNode = html.create(\"ul\", \".cosmiclib_signers\");\n  html.append(accountSignersNode, titleNode, listNode);\n  utils.signers[accountId].forEach(function (signer) {\n    var signerNode = format.signer(conf, signer);\n    var lineNode = html.create(\"li\", null, signerNode);\n\n    if (utils.hasSigned(signer.key)) {\n      html.addClass(lineNode, \"cosmiclib_signed\");\n      listNode.insertBefore(lineNode, listNode.firstChild);\n    } else {\n      html.append(listNode, lineNode);\n    }\n  });\n  return accountSignersNode;\n}\n/**\n * Retrieves the parent odesc (*Operation Descriptor*) of an HTML element, or\n * returns `undefined` if **element** is not the child of an HTML formatted\n * operation.\n *\n * @param {HTMLElement} element\n * @return {Object} odesc\n */\n\n\nformat.parentOdesc = function (conf, element) {\n  return parentProperty(element, \"odesc\");\n};\n/**\n * Retrieves the parent operation index of an HTML element, or returns\n * `undefined` if **element** is not the child of an HTML formatted operation.\n *\n * @param {HTMLElement} element\n * @return {Number} operation index\n */\n\n\nformat.parentIndex = function (conf, element) {\n  return parentProperty(element, \"index\");\n};\n/**\n * Retrieves the parent tdesc of an HTML element, or returns `undefined`\n * if **element** is not the child of an HTML formatted transaction.\n *\n * @param {HTMLElement} element\n * @return {Object} tdesc\n */\n\n\nformat.parentTdesc = function (conf, element) {\n  return parentProperty(element, \"tdesc\");\n};\n\nfunction parentProperty(element, property) {\n  while (element.parentNode) {\n    if (element.parentNode[property]) return element.parentNode[property];else element = element.parentNode;\n  }\n}\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\n\n\nformat.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Unknow field: \" + field);\n  var domNode = format.type(conf, type, value);\n  domNode.field = field;\n  if (field !== type) html.addClass(domNode, \"cosmiclib_\" + field);\n  return domNode;\n};\n\nformat.type = function (conf, type, value) {\n  if (_typeof(value) === \"object\" && value.error) type = \"error\";\n  var formatter = process[type] || process.string;\n  var domNode = formatter(conf, value);\n  html.addClass(domNode, \"cosmiclib_\" + type);\n  var eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  };\n  if (conf.constructor.name === \"CosmicLink\") eventObject.cosmicLink = conf;\n\n  if (event.defaultClickHandlers[type]) {\n    domNode.onclick = function () {\n      return event.callClickHandler(conf, type, eventObject);\n    };\n\n    html.addClass(domNode, \"cosmiclib_clickable\");\n  }\n\n  return domNode;\n}; /// Provide a format method for each data type.\n\n\nspecs.types.forEach(function (type) {\n  format[type] = function (conf, value) {\n    return format.type(conf, type, value);\n  };\n});\n/******************************************************************************/\n\nvar process = {};\n\nprocess.string = function (conf, string) {\n  if (typeof string !== \"string\") string = string + \"\";\n  return html.create(\"span\", null, string);\n};\n\nprocess.error = function (conf, errDesc) {\n  var errorNode = html.create(\"span\", \".cosmiclib_error\");\n  errorNode.textContent = errDesc.value === \"\" ? \"(undefined)\" : errDesc.value.value || errDesc.value;\n  errorNode.title = errDesc.error.message;\n  return errorNode;\n};\n\nprocess.address = function (conf, address) {\n  var addressNode = html.create(\"span\", {\n    title: \"Resolving...\"\n  }, misc.shorter(address), html.create(\"span\", \".cosmiclib_loadingAnim\"));\n  resolveAddressAndUpdate(conf, address, addressNode);\n  return addressNode;\n};\n\nfunction resolveAddressAndUpdate(conf, address, addressNode) {\n  var account, animation;\n  return _regeneratorRuntime.async(function resolveAddressAndUpdate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(resolve.address(conf, address));\n\n        case 3:\n          account = _context.sent;\n          addressNode.title = account.account_id;\n\n          if (account.memo) {\n            addressNode.title += \"\\nMemo (\".concat(account.memo_type, \"): \").concat(account.memo);\n          }\n\n          if (account.address) addressNode.textContent = account.address;else if (account.alias) addressNode.textContent = account.alias;\n          addressNode.extra = account;\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          addressNode.title = \"Can't resolve address\";\n          html.addClass(addressNode, \"cosmiclib_error\");\n\n        case 14:\n          animation = html.grab(\".cosmiclib_loadingAnim\", addressNode);\n          if (animation) html.destroy(animation);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n}\n\nprocess.amount = function (conf, amount) {\n  var significant = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  var max = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7;\n  // Hide non-significant numbers\n  if (typeof amount !== \"number\") amount = Number(amount);\n  var nicified = nice(amount, {\n    significant: significant,\n    max: max\n  });\n\n  if (String(amount).length <= nicified.length) {\n    return html.create(\"span\", null, nicified);\n  } else {\n    return html.create(\"span\", {\n      className: \"cosmiclib_clickable\",\n      title: amount\n    }, html.create(\"span\", \".cosmiclib_tilde\", \"~\"), nicified);\n  }\n};\n\nprocess.asset = function (conf, asset) {\n  var assetNode = html.create(\"span\", null, format.field(conf, \"assetCode\", asset.code));\n\n  if (asset.issuer) {\n    html.append(assetNode, \" (\", format.field(conf, \"assetIssuer\", asset.issuer), \")\");\n  }\n\n  return assetNode;\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  var assetsArrayNode = html.create(\"span\");\n\n  for (var i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, \", \");\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]));\n  }\n\n  return assetsArrayNode;\n};\n\nprocess.buffer = function (conf, object) {\n  if (object.type === \"base64\") return format.hash(conf, object.value);else return format.string(conf, object.value);\n};\n\nprocess.date = function (conf, date) {\n  return html.create(\"span\", {}, new Date(date).toLocaleString());\n};\n\nprocess.hash = function (conf, hash) {\n  return html.create(\"span\", {\n    title: hash\n  }, misc.shorter(hash));\n};\n\nprocess.id = process.hash;\n\nprocess.flags = function (conf, flags) {\n  var string = \"\";\n\n  if (flags >= 4) {\n    string = \"immutable\";\n    flags = flags - 4;\n  }\n\n  if (flags >= 2) {\n    if (string) string = \", \" + string;\n    string = \"revocable\" + string;\n    flags = flags - 2;\n  }\n\n  if (+flags === 1) {\n    if (string) string = \", \" + string;\n    string = \"required\" + string;\n  }\n\n  return html.create(\"span\", {}, string);\n};\n\nprocess.memo = function (conf, memo) {\n  var typeNode = format.field(conf, \"memoType\", memo.type);\n  var valueNode;\n\n  switch (memo.type) {\n    case \"text\":\n      valueNode = format.field(conf, \"memoText\", memo.value);\n      break;\n\n    case \"base64\":\n      valueNode = format.field(conf, \"memoBinary\", memo.value);\n      break;\n\n    case \"id\":\n      valueNode = format.field(conf, \"memoId\", memo.value);\n      break;\n\n    case \"hash\":\n      valueNode = format.field(conf, \"memoHash\", memo.value);\n      break;\n\n    case \"return\":\n      valueNode = format.field(conf, \"memoReturn\", memo.value);\n  }\n\n  return html.create(\"span\", {}, valueNode, \" (\", typeNode, \")\");\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return process.amount(conf, price, 3, null);else return process.amount(conf, price.n / price.d, 3, null);\n};\n\nprocess.signer = function (conf, signer) {\n  var signerNode = html.create(\"span\");\n\n  switch (signer.type) {\n    case \"key\":\n    case \"ed25519_public_key\":\n      {\n        var value1 = signer.value || signer.key;\n        html.append(signerNode, \"Account \", format.field(conf, \"signerKey\", value1));\n        break;\n      }\n\n    case \"tx\":\n      {\n        var value2 = signer.value || signer.key;\n        html.append(signerNode, \"transaction \", format.field(conf, \"signerTx\", value2));\n        break;\n      }\n\n    case \"hash\":\n    case \"sha256hash\":\n      {\n        var value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString(\"hex\");\n        html.append(signerNode, \"key whose hash is \", format.field(conf, \"signerHash\", value3));\n        break;\n      }\n  }\n\n  if (signer.weight > 1) {\n    var weightNode = format.weight(conf, signer.weight);\n    html.append(signerNode, \" (weight: \", weightNode, \")\");\n  }\n\n  return signerNode;\n};","\"use strict\";\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar signersUtils = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar _resolve = require(\"./resolve\");\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\n\n\nvar SignersUtils =\n/*#__PURE__*/\nfunction () {\n  _createClass(SignersUtils, null, [{\n    key: \"resolve\",\n    value: function resolve(conf, transaction, extendFlag) {\n      var extra, utils;\n      return _regeneratorRuntime.async(function resolve$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              extra = _resolve.extra(conf, transaction);\n\n              if (extra.cache.signersUtils) {\n                _context.next = 15;\n                break;\n              }\n\n              extra.cache.txHash = transaction.hash();\n              utils = new SignersUtils(extra, transaction);\n              /**\n               * A list of the sources involved in the transaction.\n               * @alias SignersUtils#sources\n               * @type {Array}\n               */\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(_resolve.txSources(extra, transaction));\n\n            case 6:\n              utils.sources = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(_resolve.txSigners(extra, transaction));\n\n            case 9:\n              utils.signers = _context.sent;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(_resolve.txSignersList(extra, transaction));\n\n            case 12:\n              utils.signersList = _context.sent;\n              Object.assign(utils, utilities);\n              extra.cache.signersUtils = utils;\n\n            case 15:\n              if (!extendFlag) {\n                _context.next = 20;\n                break;\n              }\n\n              if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils);\n              return _context.abrupt(\"return\", transaction);\n\n            case 20:\n              return _context.abrupt(\"return\", extra.cache.signersUtils);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  function SignersUtils(conf, transaction) {\n    _classCallCheck(this, SignersUtils);\n\n    this.signatures = transaction.signatures;\n    misc.setHiddenProperty(this, \"_cosmicplus\", transaction._cosmicplus);\n  }\n\n  return SignersUtils;\n}();\n/******************************************************************************/\n\n\nvar utilities = {};\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\n\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(function (key) {\n    return key === accountId;\n  });\n};\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\n\n\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === \"G\") {\n    var keypair = StellarSdk.Keypair.fromPublicKey(accountId);\n    var txHash = this._cosmicplus.cache.txHash;\n    return !!this.signatures.find(function (entry) {\n      return keypair.verify(txHash, entry.signature());\n    });\n  }\n};\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\n\n\nsignersUtils[\"for\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction);\n};\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\n\n\nsignersUtils[\"extends\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction, true);\n};","\"use strict\";\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\n\nvar normalize = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n/**\n * Setup the default values for `tdesc`.\n */\n\n\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc);\n  if (!tdesc.operations) tdesc.operations = [];\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee;\n  dateFields.forEach(function (field) {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field]);\n      if (tdesc[field] === \"1970\") delete tdesc[field];\n    }\n  });\n  if (tdesc.network) tdesc.network = normalize.network(conf, tdesc.network); // When network is neither test nor public, we want to provide a fallback\n  // Horizon URL; else we don't need it.\n\n  if (tdesc.network && tdesc.network !== \"public\" && tdesc.network !== \"test\") {\n    var url = resolve.horizon(config, tdesc.network) || tdesc.horizon;\n    tdesc.horizon = normalize.url(conf, url);\n  } else {\n    delete tdesc.horizon;\n  }\n\n  if (tdesc.callback) tdesc.callback = normalize.url(conf, tdesc.callback);\n};\n\nvar dateFields = [\"minTime\", \"maxTime\"];\n\nnormalize.date = function (conf, date) {\n  if (date.match(/^\\+[0-9]+$/)) {\n    var shifted = new Date();\n    shifted.setMinutes(shifted.getMinutes() + +date.substr(1));\n    date = shifted.toISOString().replace(/\\.[0-9]{3}/, \"\");\n  }\n\n  return date.replace(/:00\\.000/, \"\").replace(/\\.000/, \"\").replace(/T00:00Z/, \"\").replace(/-01$/, \"\").replace(/-01$/, \"\");\n};\n\nnormalize.network = function (conf, network) {\n  var networkName = resolve.networkName(conf, network);\n\n  if (networkName === \"public\" || networkName === \"test\") {\n    return networkName; // In network is neither test nor public, we want to use the network\n    // passphrase as parameter to ensure cross-wallet compatibility.\n  } else {\n    return resolve.networkPassphrase(conf, network);\n  }\n};\n\nnormalize.url = function (conf, url) {\n  if (url) return url.substr(0, 4) === \"http\" ? url : \"https://\" + url;\n};\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\n\n\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc); /// No limit = maximum limit.\n\n  if (odesc.limit === \"922337203685.4775807\") delete odesc.limit; /// New offer.\n\n  if (odesc.offerId === \"0\") delete odesc.offerId; /// Empty asset conversion path.\n\n  if (odesc.path && !odesc.path.length) delete odesc.path; /// Useless denominator.\n\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + \"\";\n\n  switch (odesc.type) {\n    case \"allowTrust\":\n      /// Allow trust by default.\n      if (odesc.authorize === undefined) odesc.authorize = true;\n      break;\n\n    case \"createPassiveOffer\":\n    case \"manageOffer\":\n      /// Protocol 11 update renamed those operations.\n      if (odesc.type === \"manageOffer\") odesc.type = \"manageSellOffer\";else odesc.type = \"createPassiveSellOffer\";\n    // Fall Through\n\n    case \"createPassiveSellOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      /// Syntactic sugar for offer deletion\n      if (odesc.offerId && (odesc.amount === \"0\" || odesc.buyAmount === \"0\")) {\n        if (!odesc.buying && !odesc.selling) {\n          odesc.buying = new StellarSdk.Asset(\"XLM\", specs.neutralAccountId);\n        }\n\n        if (!odesc.price) odesc.price = \"1\";\n      } /// XLM as default asset.\n\n\n      if (odesc.buying && !odesc.selling) odesc.selling = XLM;\n      if (odesc.selling && !odesc.buying) odesc.buying = XLM;\n      break;\n\n    case \"manageData\":\n      /// Delete data entry.\n      if (!odesc.value) odesc.value = \"\";\n      break;\n\n    case \"pathPayment\":\n      /// Protocol 12 update renamed this operation.\n      odesc.type = \"pathPaymentStrictReceive\";\n    // Fall Through\n\n    case \"pathPaymentStrictReceive\":\n    case \"pathPaymentStrictSend\":\n      /// XLM as default asset.\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM;\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM;\n      break;\n\n    case \"payment\":\n      /// XLM as default asset.\n      if (!odesc.asset) odesc.asset = XLM;\n      break;\n  }\n};\n\nvar XLM = StellarSdk.Asset[\"native\"]();\n\nfunction removeEmptyFields(object) {\n  for (var field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field];\n  }\n}","\"use strict\";\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\n\nvar destruct = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\n\n\ndestruct.transaction = function (conf, tx) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var tdesc = {};\n\n  if (tx.source === specs.neutralAccount && options.stripNeutralAccount) {\n    options.strip = \"source\";\n  } else if (tx.sequence === \"0\" && options.stripNeutralSequence) {\n    options.strip = \"sequence\";\n  }\n\n  tdesc.network = options.network;\n  tdesc.horizon = options.horizon;\n  tdesc.callback = options.callback;\n\n  if (options.strip !== \"source\") {\n    tdesc.source = tx.source;\n\n    if (options.strip !== \"sequence\") {\n      tdesc.sequence = destruct.sequence(conf, tx.sequence);\n    }\n  }\n\n  if (tx._memo._switch.name !== \"memoNone\") tdesc.memo = destruct.memo(conf, tx._memo);\n\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime);\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime);\n  }\n\n  tdesc.fee = tx.fee;\n  tdesc.operations = tx.operations.map(function (op) {\n    return destruct.operation(conf, op);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\n\n\ndestruct.operation = function (conf, op) {\n  var odesc = {};\n\n  for (var field in op) {\n    if (field === \"type\") odesc.type = op.type;else if (field === \"line\") odesc.asset = op.line;else odesc[field] = destruct.field(conf, field, op[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\ndestruct.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return destruct.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;else return destruct[type](conf, value);\n};\n/******************************************************************************/\n\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset);\n};\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(function (asset) {\n    return destruct.asset(asset);\n  });\n};\n\ndestruct.amount = function (conf, amount) {\n  return amount.replace(/\\.?0+$/, \"\");\n};\n\ndestruct.buffer = function (conf, buffer) {\n  if (!buffer) return null;\n  var string = buffer.toString();\n\n  if (misc.isUtf8(string)) {\n    return {\n      type: \"text\",\n      value: string\n    };\n  } else {\n    var value = buffer.toString(\"base64\").replace(/=*$/, \"\");\n    return {\n      type: \"base64\",\n      value: value\n    };\n  }\n};\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString();\n};\n\ndestruct.memo = function (conf, sdkMemo) {\n  var memo = {};\n\n  if (sdkMemo._switch.name !== \"memoNone\") {\n    memo.type = sdkMemo._arm;\n\n    if (memo.type === \"hash\" || memo.type === \"retHash\") {\n      memo.value = sdkMemo._value.toString(\"hex\");\n      if (memo.type === \"retHash\") memo.type = \"return\";\n    } else if (memo.type === \"text\") {\n      return destruct.buffer(conf, sdkMemo._value);\n    } else {\n      memo.value = sdkMemo._value.toString();\n    }\n  }\n\n  return memo;\n};\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString();\n};\n\ndestruct.signer = function (conf, sdkSigner) {\n  var signer = {\n    weight: sdkSigner.weight\n  };\n\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = \"key\";\n    signer.value = sdkSigner.ed25519PublicKey;\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = \"hash\";\n    signer.value = sdkSigner.sha256Hash.toString(\"hex\");\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = \"tx\";\n    signer.value = sdkSigner.preAuthTx.toString(\"hex\");\n  }\n\n  return signer;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use strict\";\n/**\n * Sep-0007 protocol utilities.\n *\n * The methods listed in the documentation are browser-only.\n *\n * @see https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md\n *\n * @exports sep7Utils\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar sep7Utils = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar _require = require(\"@cosmic-plus/jsutils/es5/misc\"),\n    timeout = _require.timeout;\n\nvar check = require(\"./check\");\n\nvar convert = require(\"./convert\");\n\nvar decode = require(\"./decode\");\n\nvar parse = require(\"./parse\");\n/* Utils */\n\n/**\n * Proposes the user to register **handler** as her default SEP-0007 link\n * handler. SEP-0007 requests will hit `{handler}?sep7={sep7Request}`.\n *\n * Note that this makes use of a non-standard feature. Compatibility can be\n * checked using `sep7Utils.isWebHandlerSupported()`.\n *\n * [List of compatible browsers](https://caniuse.com/#feat=registerprotocolhandler).\n *\n * @example\n * cosmicLib.sep7Utils.registerWebHandler(\n *  \"https://cosmic.link/\",\n *  \"Cosmic.link\"\n * )\n *\n * @param handler {String} URL of the SEP-0007 web handler.\n * @param description {String} A brief description of the service.\n */\n\n\nsep7Utils.registerWebHandler = function (handler, description) {\n  if (!env.isBrowser) throw new Error(\"This is a browser-only function.\");\n\n  if (navigator.registerProtocolHandler) {\n    navigator.registerProtocolHandler(\"web+stellar\", \"\".concat(handler, \"?sep7=%s\"), description);\n  } else {\n    throw new Error(\"This browser can't register a SEP-0007 web handler.\");\n  }\n};\n/**\n * Returns whether or not the browser can register a SEP-0007 web handler.\n *\n * @example\n * if (cosmicLib.sep7Utils.isWebHandlerSupported()) {\n *    registerSep7HandlerButton.show()\n * }\n *\n * @returns {Boolean}\n */\n\n\nsep7Utils.isWebHandlerSupported = function () {\n  return env.isBrowser && !!navigator.registerProtocolHandler;\n};\n/* Parsing */\n\n/**\n * Initialize cosmicLink using `sep7Request`.\n * @private\n */\n\n\nsep7Utils.parseRequest = function (cosmicLink, sep7Request, options) {\n  parse.page(cosmicLink, sep7Request);\n  var query = convert.uriToQuery(cosmicLink, sep7Request);\n  var sep7 = decodeURIComponent(query.replace(/^\\?(req|sep7)=/, \"\"));\n  return sep7Utils.parseLink(cosmicLink, sep7, options);\n};\n/**\n * Initialize cosmicLink using `sep7`.\n * @private\n */\n\n\nsep7Utils.parseLink = function (cosmicLink, sep7) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  cosmicLink._sep7 = sep7;\n  if (!options.network) options.network = \"public\";\n\n  if (sep7.substr(12, 4) === \"pay?\") {\n    cosmicLink.extra.type = \"pay\";\n    return sep7Utils.parsePayLink(cosmicLink, sep7, options);\n  } else if (sep7.substr(12, 3) === \"tx?\") {\n    cosmicLink.extra.type = \"tx\";\n    return sep7Utils.parseTxLink(cosmicLink, sep7, options);\n  } else {\n    throw new Error(\"Invalid SEP-0007 link.\");\n  }\n};\n/**\n * Initialize cosmicLink using `sep7.xdr`.\n * @private\n */\n\n\nsep7Utils.parseTxLink = function (cosmicLink, sep7) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var query = convert.uriToQuery(cosmicLink, sep7);\n  var params = query.substr(1).split(\"&\");\n  var xdr;\n  params.forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"xdr\":\n        xdr = decodeURIComponent(value);\n        break;\n\n      case \"pubkey\":\n        check.address(cosmicLink, value);\n        cosmicLink.extra.pubkey = value;\n        break;\n\n      default:\n        sep7Utils.parseLinkCommons(cosmicLink, \"xdr\", field, value, options);\n    }\n  });\n  if (!xdr) throw new Error(\"Missing XDR parameter\");\n  options.stripNeutralSequence = true;\n  return {\n    type: \"xdr\",\n    value: xdr,\n    options: options\n  };\n};\n/**\n * Initialize cosmicLink using `sep7.pay`.\n * @private\n */\n\n\nsep7Utils.parsePayLink = function (cosmicLink, sep7) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var query = convert.uriToQuery(cosmicLink, sep7);\n  var params = query.substr(1).split(\"&\");\n  var odesc = {\n    type: \"payment\"\n  },\n      asset = {},\n      memo = {};\n  var tdesc = {\n    network: options.network,\n    operations: [odesc]\n  }; // Parse\n\n  params.forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"destination\":\n      case \"amount\":\n        odesc[field] = decode.field(cosmicLink, field, value);\n        break;\n\n      case \"asset_code\":\n        asset.code = decodeURIComponent(value);\n        break;\n\n      case \"asset_issuer\":\n        asset.issuer = decodeURIComponent(value);\n        break;\n\n      case \"memo_type\":\n        memo.type = value.split(\"_\")[1].toLowerCase();\n        break;\n\n      case \"memo\":\n        memo.value = decode.string(cosmicLink, value);\n        break;\n\n      default:\n        sep7Utils.parseLinkCommons(cosmicLink, \"pay\", field, value, options);\n    }\n  }); // Convert\n\n  if (memo.type || memo.value) {\n    if (memo.type === \"hash\" || memo.type === \"return\") {\n      memo.value = Buffer.from(memo.value, \"base64\").toString(\"hex\");\n    }\n\n    tdesc.memo = memo;\n  }\n\n  if (asset.code || asset.issuer) odesc.asset = asset;\n  if (!odesc.destination) throw new Error(\"Missing parameter: destination\");\n  return {\n    type: \"tdesc\",\n    value: tdesc,\n    options: options\n  };\n};\n\nsep7Utils.parseLinkCommons = function (cosmicLink, mode, field, value, options) {\n  switch (field) {\n    case \"network_passphrase\":\n      options.network = decode.network(cosmicLink, value);\n      break;\n\n    case \"callback\":\n      value = decode.url(cosmicLink, value);\n\n      if (value.substr(0, 4) !== \"url:\") {\n        throw new Error(\"Invalid callback: \" + value);\n      }\n\n      options.callback = value.substr(4);\n      break;\n\n    case \"origin_domain\":\n      cosmicLink.extra.originDomain = sep7Utils.verifySignature(cosmicLink, value);\n      break;\n\n    case \"signature\":\n      cosmicLink.extra.signature = decodeURIComponent(value);\n      break;\n\n    case \"msg\":\n      cosmicLink.extra.msg = decode.string(cosmicLink, value);\n      break;\n\n    default:\n      throw new Error(\"Invalid SEP-0007 \".concat(mode, \" field: \") + field);\n  }\n};\n/* Signing */\n\n\nsep7Utils.signLink = function (cosmicLink, domain, keypair) {\n  if (!cosmicLink.locker) throw new Error(\"cosmicLink is not locked.\");\n  cosmicLink.extra.originDomain = domain;\n  delete cosmicLink.extra.signature;\n  delete cosmicLink._sep7;\n  var link = cosmicLink.sep7;\n  var payload = sep7Utils.makePayload(link);\n  cosmicLink.extra.signature = keypair.sign(payload).toString(\"base64\");\n  delete cosmicLink._sep7;\n};\n\nsep7Utils.verifySignature = function _callee(cosmicLink, domain) {\n  var link, signature, payload, keypair;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          link = cosmicLink.sep7.replace(/&signature=.*/, \"\"); // Let parser parse signature.\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(timeout(1));\n\n        case 3:\n          signature = cosmicLink.extra.signature;\n\n          if (signature) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error(\"No signature attached for domain: \".concat(domain));\n\n        case 6:\n          payload = sep7Utils.makePayload(link);\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(sep7Utils.getDomainKeypair(domain));\n\n        case 9:\n          keypair = _context.sent;\n\n          if (!keypair.verify(payload, Buffer.from(signature, \"base64\"))) {\n            _context.next = 14;\n            break;\n          }\n\n          return _context.abrupt(\"return\", domain);\n\n        case 14:\n          throw new Error(\"Invalid signature for domain: \".concat(domain));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nsep7Utils.getDomainKeypair = function _callee2(domain) {\n  var toml, signingKey;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(StellarSdk.StellarTomlResolver.resolve(domain));\n\n        case 2:\n          toml = _context2.sent;\n          signingKey = toml.URI_REQUEST_SIGNING_KEY;\n\n          if (signingKey) {\n            _context2.next = 6;\n            break;\n          }\n\n          throw new Error(\"Can't find signing key for domain: \".concat(domain));\n\n        case 6:\n          return _context2.abrupt(\"return\", StellarSdk.Keypair.fromPublicKey(signingKey));\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nsep7Utils.makePayload = function (link) {\n  return Buffer.concat([Buffer.alloc(35), Buffer.alloc(1, 4), Buffer.from(\"stellar.sep.7 - URI Scheme\".concat(link))]);\n};","\"use strict\";\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\n\nvar event = exports;\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar format = require(\"./format\");\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\n\n\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback;\n};\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\n\n\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined;\n};\n\nevent.callClickHandler = function (conf, type, event) {\n  var handler = conf.clickHandlers[type];\n  event.extra = event.domNode.extra;\n  event.field = event.domNode.field;\n  event.tdesc = format.parentTdesc(conf, event.domNode);\n  event.odesc = format.parentOdesc(conf, event.domNode);\n  event.index = format.parentIndex(conf, event.domNode);\n  if (handler) handler(event);\n};\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\n\n\nevent.defaultClickHandlers = {\n  address: function address(event) {\n    if (!event.extra) return;\n    var message = \"\";\n\n    for (var field in event.extra) {\n      message += \"\".concat(field, \":\\n\") + \"\".concat(event.extra[field], \"\\n\\n\");\n    }\n\n    window.alert(message);\n  },\n  hash: function hash(event) {\n    var grandma = event.domNode.parentNode.parentNode.parentNode;\n\n    if (grandma.classList.contains(\"cosmiclib_signers\")) {\n      var preimage = prompt(\"Please enter preimage:\");\n      if (preimage) event.cosmicLink.sign(preimage);\n    } else {\n      html.copyString(event.value);\n    }\n  },\n  id: function id(event) {\n    return html.copyString(event.value);\n  }\n};","\"use strict\";\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar construct = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\n\n\nconstruct.transaction = function _callee(conf, tdesc) {\n  var txBuilder, index, odesc, operation;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!conf.status) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new Error(conf.status);\n\n        case 2:\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(makeTransactionBuilder(conf, tdesc));\n\n        case 5:\n          txBuilder = _context.sent;\n          _context.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n        case 7:\n          if ((_context.t1 = _context.t0()).done) {\n            _context.next = 16;\n            break;\n          }\n\n          index = _context.t1.value;\n          odesc = tdesc.operations[index];\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(construct.operation(conf, odesc));\n\n        case 12:\n          operation = _context.sent;\n          txBuilder.addOperation(operation);\n          _context.next = 7;\n          break;\n\n        case 16:\n          return _context.abrupt(\"return\", txBuilder.build());\n\n        case 19:\n          _context.prev = 19;\n          _context.t2 = _context[\"catch\"](2);\n\n          if (!conf.errors) {\n            console.error(_context.t2);\n            status.error(conf, _context.t2.message);\n          }\n\n          if (conf.status) {\n            _context.next = 26;\n            break;\n          }\n\n          status.fail(conf, \"Transaction build failed\", \"throw\");\n          _context.next = 27;\n          break;\n\n        case 26:\n          throw _context.t2;\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 19]]);\n};\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\n\n\nconstruct.operation = function _callee2(conf, odesc) {\n  var operation, field;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          operation = odesc.type;\n          delete odesc.type;\n          _context2.t0 = _regeneratorRuntime.keys(odesc);\n\n        case 3:\n          if ((_context2.t1 = _context2.t0()).done) {\n            _context2.next = 10;\n            break;\n          }\n\n          field = _context2.t1.value;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(construct.field(conf, field, odesc[field]));\n\n        case 7:\n          odesc[field] = _context2.sent;\n          _context2.next = 3;\n          break;\n\n        case 10:\n          return _context2.abrupt(\"return\", StellarSdk.Operation[operation](odesc));\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\n\n\nfunction makeTransactionBuilder(conf, tdesc) {\n  var server, baseFee, txOpts, sourceAccount, builder, index, operation, destination, memoType, memoValue, _short;\n\n  return _regeneratorRuntime.async(function makeTransactionBuilder$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          server = resolve.server(conf);\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(server.fetchBaseFee());\n\n        case 3:\n          baseFee = _context3.sent;\n          txOpts = {};\n          txOpts.networkPassphrase = resolve.networkPassphrase(conf);\n          if (tdesc.fee) txOpts.fee = tdesc.fee;else txOpts.fee = tdesc.operations.length * baseFee;\n          if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo);\n\n          if (tdesc.minTime || tdesc.maxTime) {\n            txOpts.timebounds = {\n              minTime: 0,\n              maxTime: 0\n            };\n            if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime);\n            if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime);\n          }\n\n          _context3.next = 11;\n          return _regeneratorRuntime.awrap(resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence));\n\n        case 11:\n          sourceAccount = _context3.sent;\n          builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts);\n          if (!tdesc.maxTime) builder.setTimeout(StellarSdk.TimeoutInfinite); /// Check if memo is needed for destination account.\n\n          _context3.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n        case 15:\n          if ((_context3.t1 = _context3.t0()).done) {\n            _context3.next = 25;\n            break;\n          }\n\n          index = _context3.t1.value;\n          operation = tdesc.operations[index];\n\n          if (!operation.destination) {\n            _context3.next = 23;\n            break;\n          }\n\n          _context3.next = 21;\n          return _regeneratorRuntime.awrap(resolve.address(conf, operation.destination));\n\n        case 21:\n          destination = _context3.sent;\n\n          if (destination.memo) {\n            memoType = destination.memo_type;\n            memoValue = destination.memo;\n\n            if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n              _short = misc.shorter(operation.destination);\n              status.error(conf, \"Memo conflict: \".concat(_short, \" requires to set a memo\"), \"throw\");\n            } else {\n              // eslint-disable-next-line require-atomic-updates\n              tdesc.memo = {\n                type: memoType,\n                value: memoValue\n              };\n              builder.addMemo(new StellarSdk.Memo(memoType, memoValue));\n            }\n          }\n\n        case 23:\n          _context3.next = 15;\n          break;\n\n        case 25:\n          return _context3.abrupt(\"return\", builder);\n\n        case 26:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n}\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\nconstruct.field = function _callee3(conf, field, value) {\n  var type;\n  return _regeneratorRuntime.async(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          type = specs.fieldType[field];\n\n          if (!type) {\n            _context4.next = 5;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", construct.type(conf, type, value));\n\n        case 5:\n          throw new Error(\"Invalid field: \".concat(field));\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\nconstruct.type = function _callee4(conf, type, value) {\n  return _regeneratorRuntime.async(function _callee4$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", construct[type](conf, value));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\n/******************************************************************************/\n\n\nconstruct.address = function _callee5(conf, address) {\n  var account;\n  return _regeneratorRuntime.async(function _callee5$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(resolve.address(conf, address));\n\n        case 2:\n          account = _context6.sent;\n          return _context6.abrupt(\"return\", account.account_id);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n};\n\nconstruct.asset = function _callee6(conf, asset) {\n  var publicKey;\n  return _regeneratorRuntime.async(function _callee6$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!asset.issuer) {\n            _context7.next = 7;\n            break;\n          }\n\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(construct.address(conf, asset.issuer));\n\n        case 3:\n          publicKey = _context7.sent;\n          return _context7.abrupt(\"return\", new StellarSdk.Asset(asset.code, publicKey));\n\n        case 7:\n          return _context7.abrupt(\"return\", StellarSdk.Asset[\"native\"]());\n\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};\n\nconstruct.assetsArray = function _callee7(conf, assetsArray) {\n  var path, index, string, constructedAsset;\n  return _regeneratorRuntime.async(function _callee7$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          path = [];\n          _context8.t0 = _regeneratorRuntime.keys(assetsArray);\n\n        case 2:\n          if ((_context8.t1 = _context8.t0()).done) {\n            _context8.next = 11;\n            break;\n          }\n\n          index = _context8.t1.value;\n          string = assetsArray[index];\n          _context8.next = 7;\n          return _regeneratorRuntime.awrap(construct.asset(conf, string));\n\n        case 7:\n          constructedAsset = _context8.sent;\n          path.push(constructedAsset);\n          _context8.next = 2;\n          break;\n\n        case 11:\n          return _context8.abrupt(\"return\", path);\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  });\n};\n\nconstruct.buffer = function (conf, object) {\n  if (object.type === \"base64\") {\n    return Buffer.from(object.value, \"base64\");\n  } else {\n    return object.value || null;\n  }\n};\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000;\n};\n\nconstruct.memo = function (conf, memo) {\n  if (memo.type === \"base64\") {\n    return new StellarSdk.Memo(\"text\", Buffer.from(memo.value, \"base64\"));\n  } else {\n    return new StellarSdk.Memo(memo.type, memo.value);\n  }\n};\n\nconstruct.signer = function _callee8(conf, signer) {\n  var sdkSigner, publicKey;\n  return _regeneratorRuntime.async(function _callee8$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          sdkSigner = {\n            weight: +signer.weight\n          };\n\n          if (!(signer.type === \"tx\")) {\n            _context9.next = 5;\n            break;\n          }\n\n          sdkSigner.preAuthTx = signer.value;\n          _context9.next = 14;\n          break;\n\n        case 5:\n          if (!(signer.type === \"hash\")) {\n            _context9.next = 9;\n            break;\n          }\n\n          sdkSigner.sha256Hash = signer.value;\n          _context9.next = 14;\n          break;\n\n        case 9:\n          if (!(signer.type === \"key\")) {\n            _context9.next = 14;\n            break;\n          }\n\n          _context9.next = 12;\n          return _regeneratorRuntime.awrap(construct.address(conf, signer.value));\n\n        case 12:\n          publicKey = _context9.sent;\n          sdkSigner.ed25519PublicKey = publicKey;\n\n        case 14:\n          return _context9.abrupt(\"return\", sdkSigner);\n\n        case 15:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  });\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use strict\";\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\n\nvar encode = exports;\n\nvar decode = require(\"./decode\");\n\nvar specs = require(\"./specs\");\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined;\n  var command;\n\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = \"transaction\";\n  } else {\n    command = tdesc.operations[0].type;\n  }\n\n  var query = \"?type=\" + command;\n  specs.transactionOptionalFields.forEach(function (field) {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field]);\n  });\n  tdesc.operations.forEach(function (odesc) {\n    if (command === \"transaction\") query += \"&operation=\" + odesc.type;\n\n    for (var field in odesc) {\n      if (field === \"type\") continue; // Syntactic sugar for offer deletion.\n\n      if (odesc.type === \"manageOffer\" && odesc.amount == \"0\" && odesc.offerId) {\n        if (field === \"price\" && odesc.price === \"1\") continue;\n\n        if (field === \"buying\" && odesc.buying.code === \"XLM\" && odesc.buying.issuer === specs.neutralAccountId) {\n          continue;\n        }\n      }\n\n      query += encode.field(conf, field, odesc[field]);\n    }\n  });\n  return query;\n};\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Invalid field: \".concat(field));\n  var encodedValue = encode.type(conf, type, value);\n  if (encodedValue === \"\" && field !== \"homeDomain\") return \"\";else return \"&\".concat(field, \"=\").concat(encodedValue);\n};\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.type = function (conf, type, value) {\n  if (value === undefined) return \"\";\n  var encodedValue = process[type] ? process[type](conf, value) : value;\n  if (encodedValue === undefined) return \"\";else return encodedValue;\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + \":\" + encodeURIComponent(asset.issuer);\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(function (asset) {\n    return encode.asset(conf, asset);\n  }).toString();\n};\n\nprocess[\"boolean\"] = function (conf, _boolean) {\n  if (_boolean === false) return \"false\";\n};\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.buffer(conf, buffer.value);\n    if (decoded.type === \"text\") return encodeURIComponent(buffer.value);\n  } else if (buffer) {\n    return buffer.type + \":\" + encodeURIComponent(buffer.value);\n  }\n};\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, \"\");\n};\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.memo(conf, memo.value);\n    if (decoded.type === \"text\") return encodeURIComponent(memo.value);\n  }\n\n  return memo.type + \":\" + encodeURIComponent(memo.value);\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return price;else return price.n + \":\" + price.d;\n};\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + \":\" + signer.type + \":\" + signer.value;\n};\n\nprocess.string = encode.buffer;\n\nprocess.url = function (conf, url) {\n  if (url.substr(0, 8) === \"https://\") url = url.substr(8);\n  return encodeURIComponent(url);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return encode.type(conf, type, value);\n  };\n});","\"use strict\";\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\n\nvar parse = exports;\n\nvar check = require(\"./check\");\n\nvar convert = require(\"./convert\");\n\nvar decode = require(\"./decode\");\n\nvar expand = require(\"./expand\");\n\nvar resolve = require(\"./resolve\");\n\nvar sep7Utils = require(\"./sep7-utils\");\n\nvar status = require(\"./status\");\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\n\n\nparse.page = function (cosmicLink, uri) {\n  var page = uri.split(\"?\")[0];\n  if (page) cosmicLink.page = encodeURI(page);\n};\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\n\n\nparse.dispatch = function (cosmicLink) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var type = guessType(value); // Strip out URL hash\n\n  switch (type) {\n    case \"uri\":\n    case \"query\":\n    case \"xdrUri\":\n    case \"sep7\":\n    case \"sep7Request\":\n      value = value.replace(/#.*$/, \"\");\n  } // Parse transaction\n\n\n  try {\n    if (parse.rule[type]) {\n      var params = parse.rule[type](cosmicLink, value, options);\n      setTdesc(cosmicLink, params.type, params.value, params.options);\n    } else {\n      setTdesc(cosmicLink, type, value, options);\n    }\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error);\n      status.error(cosmicLink, error.message);\n    }\n\n    status.fail(cosmicLink, \"Invalid \" + type);\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc;\n  } // Asynchronously check SEP-0007 link.\n\n\n  if (cosmicLink.extra.originDomain) {\n    cosmicLink.verifySep7()[\"catch\"](function (error) {\n      status.error(cosmicLink, error.message);\n      status.fail(cosmicLink, \"Invalid SEP-0007 link\");\n    });\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page);\n};\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\n\n\nfunction guessType(value) {\n  var type;\n\n  if (typeof value === \"string\") {\n    var query = convert.uriToQuery(\"\", value);\n    if (value.substr(0, 12) === \"web+stellar:\") type = \"sep7\";else if (query && query.substr(0, 6) === \"?sep7=\") type = \"sep7Request\"; // DEPRECATED since 2019-09-11 / `req=` is deprecated in favor of `sep7=`.\n    else if (query && query.substr(0, 5) === \"?req=\") type = \"sep7Request\";else if (query && query.substr(0, 5) === \"?xdr=\") type = \"xdrUri\";else if (value.substr(0, 1) === \"?\") type = \"query\";else if (value.substr(0, 1) === \"{\") type = \"json\";else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = \"xdr\";else type = \"uri\";\n  } else {\n    if (value.tx) type = \"transaction\";else type = \"tdesc\";\n  }\n\n  return type;\n}\n/******************************************************************************/\n\n/**\n * Parse-type type extension\n */\n\n\nparse.rule = {};\n/**\n * Initialize cosmicLink using `transaction`.\n */\n\nparse.rule.transaction = function (cosmicLink, transaction, options) {\n  var network = transaction._networkPassphrase;\n\n  if (network) {\n    options.network = resolve.networkName(cosmicLink, network);\n  }\n\n  return {\n    type: \"transaction\",\n    value: transaction,\n    options: options\n  };\n};\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\n\n\nparse.rule.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri);\n  var query = convert.uriToQuery(cosmicLink, xdrUri);\n  var temp = query.split(\"&\");\n  var xdr = temp[0].substr(5);\n  temp.slice(1).forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"strip\":\n        switch (value) {\n          case \"source\":\n          case \"sequence\":\n          case \"signatures\":\n            options.strip = value;\n            break;\n\n          default:\n            throw new Error(\"Invalid strip directive: strip=\".concat(value));\n        }\n\n        break;\n\n      case \"network\":\n        options.network = decode.network(cosmicLink, value);\n        break;\n\n      case \"horizon\":\n      case \"callback\":\n        options[field] = decode.url(cosmicLink, value);\n        break;\n      // Backward compatibility, deprecated since the 2019-08-26.\n\n      case \"stripSignatures\":\n        options.strip = \"signatures\";\n        break;\n\n      case \"stripSequence\":\n        options.strip = \"sequence\";\n        break;\n\n      case \"stripSource\":\n        options.strip = \"source\";\n        break;\n\n      default:\n        status.error(cosmicLink, \"Unknow option: \" + entry);\n        status.fail(cosmicLink, \"Invalid query\");\n    }\n  });\n  return {\n    type: \"xdr\",\n    value: xdr,\n    options: options\n  };\n};\n/**\n * SEP-0007 parsing\n */\n\n\nparse.rule.sep7Request = sep7Utils.parseRequest;\nparse.rule.sep7 = sep7Utils.parseLink;\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\n\nfunction setTdesc(cosmicLink, type, value, options) {\n  if (type !== \"uri\") cosmicLink[\"_\" + type] = value;\n\n  switch (type) {\n    case \"uri\":\n      parse.page(cosmicLink, value);\n      cosmicLink._query = convert.uriToQuery(cosmicLink, value, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"query\":\n      cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options);\n      delete cosmicLink._query;\n      break;\n\n    case \"json\":\n      value = convert.jsonToTdesc(cosmicLink, value);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"tdesc\":\n      cosmicLink._tdesc = expand.tdesc(cosmicLink, value);\n      delete cosmicLink._json;\n      check.tdesc(cosmicLink, cosmicLink.tdesc);\n      break;\n\n    case \"sep7\":\n      cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"xdr\":\n      cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"transaction\":\n      cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options);\n      delete cosmicLink._sep7;\n\n      if (options.strip === \"source\" || options.strip === \"sequence\") {\n        delete cosmicLink._xdr;\n        delete cosmicLink._transaction;\n      } else if (options.strip === \"signatures\") {\n        cosmicLink.transaction.signatures = [];\n        delete cosmicLink._xdr;\n      }\n\n  }\n}","\"use strict\";\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\n\nvar expand = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\n\n\nexpand.tdesc = function (conf, tdesc) {\n  for (var field in tdesc) {\n    if (field === \"operations\") continue;else tdesc[field] = expand.field(conf, field, tdesc[field]);\n  }\n\n  if (tdesc.operations) tdesc.operations.forEach(function (odesc) {\n    return expand.odesc(conf, odesc);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\n\n\nexpand.odesc = function (conf, odesc) {\n  for (var field in odesc) {\n    if (field === \"type\") continue;else odesc[field] = expand.field(conf, field, odesc[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\nexpand.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return expand.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;\n  if (typeof value === \"number\") value = value + \"\";\n  return expand[type] ? expand[type](conf, value) : value + \"\";\n};\n/******************************************************************************/\n\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset);else if (typeof asset === \"string\") return decode.asset(conf, asset);else return asset;\n};\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(function (asset) {\n    return expand.asset(conf, asset);\n  });else if (typeof assetPath === \"string\") return decode.assetPath(conf, assetPath);\n};\n\nexpand.buffer = function (conf, buffer) {\n  if (!buffer) return \"\";\n  if (buffer instanceof Buffer) return destruct.buffer(conf, buffer);else if (typeof buffer === \"string\") return decode.buffer(conf, buffer);else return buffer;\n};\n\nexpand.date = function (conf, date) {\n  if (typeof date === \"number\") date = date + \"\";\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date);else return destruct.date(conf, date);\n};\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo);else if (typeof memo === \"string\") return decode.memo(conf, memo);else return memo;\n};\n\nexpand.price = function (conf, price) {\n  if (typeof price === \"string\" && price.match(/:/)) {\n    return decode.price(conf, price);\n  } else {\n    return price;\n  }\n};\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer);else if (typeof signer === \"string\") return decode.signer(conf, signer);else return signer;\n};\n\nexpand.string = function (conf, string) {\n  if (typeof string === \"number\") return string + \"\";else return string;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) {\n    exports[type] = function (conf, value) {\n      if (typeof value === \"number\") return value + \"\";else return value;\n    };\n  }\n});"],"sourceRoot":""}