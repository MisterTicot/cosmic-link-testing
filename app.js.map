{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/app.state.js","webpack:///./src/view/signing-widget.js","webpack:///./src/app.embed.js","webpack:///./src/data/authenticators.js","webpack:///./src/data/protocols.js","webpack:///./src/data/wallets.js","webpack:///./src/model/signing-flow.js","webpack:///./src/view/tx-description.js","webpack:///./src/view/handler-form.js","webpack:///./src/view/account-input.js","webpack:///./src/view/handler-selector.js","webpack:///./src/view/network-selector.js","webpack:///./src/view/redirection-form.js","webpack:///./src/view/qr-code-switcher.js","webpack:///./src/view/qr-code-canvas.js","webpack:///./src/view/redirection-button.js","webpack:///./src/view/tx-result-view.js","webpack:///./src/view/xdr-area.js","webpack:///./src/app.full.js","webpack:///./src/lib/navigation.js","webpack:///./src/view/anti-tamper.js"],"names":["CosmicLinkApp","constructor","params","mode","Embed","Full","require","module","exports","type","authenticators","SigningFlow","AppState","super","this","$import","interrupt","proto","prototype","array","$define","find","a","name","authenticatorName","target","cosmicLink","automaticRedirection","sign","$on","current","previous","onExit","View","TxDescription","HandlerForm","RedirectionForm","signingFlow","txDescription","handlerForm","redirectionForm","SigningWidget","state","signingWidget","$pull","x","protocols","wallets","byId","Authenticator","wallet","Object","assign","protocol","replace","fullName","buttonText","redirection","handler","entry","authenticator","id","push","defaults","textarea","qrCode","getLedgerModule","then","ledger","default","getTrezorModule","trezor","register","cosmiclink","url","query","ledgerwallet","getAccountId","async","connect","publicKey","lock","request","transaction","refresh","refresher","onDisconnect","disconnect","trezorwallet","sep0007","sep7","encodeURIComponent","stellarlab","encodedXdr","xdr","network","passphrase","horizon","copy","LedgerWallet","needSource","needNetwork","TrezorWallet","StellarAuthenticator","Lobstr","StellarTerm","Sep7Wallet","StellarLaboratory","CopyPasteXdr","CosmicLink","resolve","config","TxResult","LiveObject","environment","isEmbedded","result","signUsingUri","location","open","window","parent","postMessage","signUsingFunction","forCosmicLink","catch","error","networkName","tdesc","length","source","substr","networkPassphrase","setupNetwork","lockSource","accountId","lockNetwork","Promise","Error","clone","operations","htmlDescription","AccountInput","HandlerSelector","NetworkSelector","handlerSelector","accountInput","networkSelector","html","copyContent","$link","onclick","readonly","domNode","helpers","filter","toOption","value","isCustom","QrCodeSwitcher","RedirectionButton","TxResultView","XdrArea","redirectionButton","xdrArea","qrCodeSwitcher","className","message","action","QrCodeCanvas","disabled","hidden","canvas","switch","showQrCode","QrCode","promise","timeout","$ref","getContext","clearRect","width","height","scale","Math","max","floor","sqrt","toCanvas","margin","setQr","response","txResult","validated","toLi","any","sep7Utils","Navigation","AntiTamper","AppFull","selectedTabId","origin","pathname","navigation","title","view","grab","selectedTabView","isSep7Supported","isWebHandlerSupported","antiTamper","copyHeader","registerSep7Handler","currentPageUrl","href","split","registerWebHandler","tab","hash","LiveArray","tabs","from","toNavigationLink","link","t","baseUrl","set","antiTamperHash","makeHash","size","alphabet","i","random","charAt"],"mappings":"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","file":"app.js","sourcesContent":["\"use strict\"\n/**\n * CosmicLink application.\n */\n\n/* Definiton */\nclass CosmicLinkApp {\n  constructor (params) {\n    if (params.mode === \"embed\") {\n      return new CosmicLinkApp.Embed(params)\n    } else {\n      return new CosmicLinkApp.Full(params)\n    }\n  }\n}\n\n/* Exports */\nCosmicLinkApp.Embed = require(\"./app.embed\")\nCosmicLinkApp.Full = require(\"./app.full\")\nmodule.exports = CosmicLinkApp\n","\"use strict\"\n/**\n * CosmicLinkApp.State\n * */\nconst { type } = require(\"@kisbox/utils\")\n\nconst authenticators = require(\"./data/authenticators\")\nconst SigningFlow = require(\"./model/signing-flow\")\n\n/* Definition */\n\nclass AppState extends SigningFlow {\n  constructor (params) {\n    super(params)\n\n    this.$import(params, [\n      \"automaticRedirection\",\n      \"authenticators\",\n      \"authenticatorName\",\n      \"showQrCode\"\n    ])\n\n    // Prevent UI loading\n    if (this.interrupt) throw \"redirect\"\n  }\n}\n\n/* Defaults */\nconst proto = AppState.prototype\nproto.authenticators = authenticators.array\n\n/* Computations */\n\nproto.$define(\n  \"authenticator\",\n  [\"authenticators\", \"authenticatorName\"],\n  function () {\n    return this.authenticators.find(a => a.name === this.authenticatorName)\n  }\n)\n\nproto.$define(\n  \"interrupt\",\n  [\"automaticRedirection\", \"cosmicLink\", \"authenticator\", \"target\"],\n  function () {\n    if (type(this.target) !== \"string\") return\n\n    if (this.cosmicLink && this.automaticRedirection) {\n      this.sign()\n      return true\n    }\n  }\n)\n\n/* Events */\nproto.$on(\"authenticator\", function (current, previous) {\n  if (previous && previous.onExit) {\n    previous.onExit()\n  }\n})\n\n/* Export */\nmodule.exports = AppState\n","\"use strict\"\n/**\n * Signing Widget\n * */\nconst { View } = require(\"@kisbox/browser\")\n\nconst TxDescription = require(\"./tx-description\")\nconst HandlerForm = require(\"./handler-form\")\nconst RedirectionForm = require(\"./redirection-form\")\n\n/* Definition */\n\nclass SigningWidget extends View {\n  constructor (signingFlow) {\n    super(`\n<section class=\"SigningWidget\">\n  <h2>Stellar Transaction Request</h2>\n  <hr>\n\n  <section>\n    <h3>Step 1: Check the Transaction</h3>\n    %txDescription\n  </section>\n  <hr>\n\n  <section>\n    <h3>Step 2: Selection a Signing Method</h3>\n    %handlerForm\n  </section>\n  <hr>\n\n  <section>\n    <h3>Step 3: Sign the Transaction</h3>\n    %redirectionForm\n  </section>\n    `)\n\n    // Components\n    this.txDescription = new TxDescription(signingFlow)\n    this.handlerForm = new HandlerForm(signingFlow)\n    this.redirectionForm = new RedirectionForm(signingFlow)\n  }\n}\n\n/* Export */\nmodule.exports = SigningWidget\n","\"use strict\"\n/**\n * Widget interface initialization.\n */\nconst { View } = require(\"@kisbox/browser\")\n\nconst AppState = require(\"./app.state\")\nconst SigningWidget = require(\"./view/signing-widget\")\n\n/* Definition */\n\nclass AppEmbed extends View {\n  constructor (params) {\n    super(`\n<div class=\"CosmicLinkApp\" %hidden>\n  <main>\n    <hr>\n    %signingWidget\n  </main>\n</div>\n    `)\n\n    this.state = new AppState(params)\n    this.signingWidget = new SigningWidget(this.state)\n    this.$pull(\"route\", this.state, \"query\", x => x || \"\")\n  }\n}\n\n/* Export */\nmodule.exports = AppEmbed\n","\"use strict\"\n/**\n * Authenticators\n * */\nconst authenticators = exports\n\nconst protocols = require(\"./protocols\")\nconst wallets = require(\"./wallets\")\n\nauthenticators.array = []\nauthenticators.byId = {}\n\nclass Authenticator {\n  constructor (wallet) {\n    Object.assign(this, wallet, protocols[wallet.protocol])\n    this.name = wallet.name.replace(/ \\(.*\\)/, \"\")\n    this.fullName = wallet.name\n\n    if (!this.buttonText && this.redirection)\n      this.buttonText = \"Go to \" + this.name\n  }\n\n  async handle (cosmicLink) {\n    return this.handler(this, cosmicLink)\n  }\n}\n\nfor (let entry in wallets) {\n  const wallet = wallets[entry]\n  const authenticator = new Authenticator(wallet)\n  authenticator.id = entry\n  exports.array.push(authenticator)\n  exports[authenticator.name] = authenticator\n  exports.byId[entry] = authenticator\n}\n","/**\n * Protocols handlers.\n *\n * @exports protocols\n * @private\n */\nconst protocols = exports\n\nconst defaults = {\n  redirection: true,\n  textarea: false,\n  qrCode: true\n}\n\nprotocols.cosmiclink = {\n  handler: function (cosmicLink, authenticator) {\n    return authenticator.url + cosmicLink.query\n  }\n}\n\nprotocols.ledgerwallet = {\n  buttonText: \"Sign with Ledger Wallet\",\n  qrCode: false,\n  getAccountId: async function () {\n    const ledger = await getLedgerModule()\n    await ledger.connect()\n    return ledger.publicKey\n  },\n  handler: async function (cosmicLink) {\n    await cosmicLink.lock()\n    const ledger = await getLedgerModule()\n    const request = async () => ledger.sign(cosmicLink.transaction)\n    request.cosmicLink = cosmicLink\n    return request\n  },\n  refresh: async function (refresher) {\n    const ledger = await getLedgerModule()\n    ledger.onDisconnect = () => refresher()\n  },\n  onExit: async function () {\n    const ledger = await getLedgerModule()\n    ledger.disconnect()\n  }\n}\n\nprotocols.trezorwallet = {\n  buttonText: \"Sign with Trezor Wallet\",\n  qrCode: false,\n  getAccountId: async function () {\n    const trezor = await getTrezorModule()\n    await trezor.connect()\n    return trezor.publicKey\n  },\n  handler: async function (cosmicLink) {\n    await cosmicLink.lock()\n    const trezor = await getTrezorModule()\n    const request = async () => trezor.sign(cosmicLink.transaction)\n    request.cosmicLink = cosmicLink\n    return request\n  },\n  refresh: async function (refresher) {\n    const trezor = await getTrezorModule()\n    trezor.onDisconnect = () => refresher()\n  },\n  onExit: async function () {\n    const trezor = await getTrezorModule()\n    trezor.disconnect()\n  }\n}\n\nprotocols.sep0007 = {\n  handler: async function (cosmicLink, authenticator) {\n    await cosmicLink.lock()\n\n    const url = cosmicLink.sep7\n    const endpoint = \"web+stellar:\"\n    if (authenticator.url !== endpoint) {\n      const sep7 = encodeURIComponent(url)\n      return `${authenticator.url}${sep7}`\n    } else {\n      return url\n    }\n  }\n}\n\nprotocols.stellarlab = {\n  handler: async function (cosmicLink, authenticator) {\n    await cosmicLink.lock()\n    const encodedXdr = encodeURIComponent(cosmicLink.xdr)\n    let query = `?xdr=${encodedXdr}`\n    if (cosmicLink.network === \"public\" || cosmicLink.network === \"test\") {\n      query += `&network=${cosmicLink.network}`\n    } else {\n      const passphrase = encodeURIComponent(cosmicLink.network)\n      const horizon = encodeURIComponent(cosmicLink.horizon)\n      query += `&network=custom&horizonURL=${horizon}&networkPassphrase=${passphrase}`\n    }\n    return authenticator.url + query\n  }\n}\n\nprotocols.copy = {\n  redirection: false,\n  textarea: true,\n  handler: async function (cosmicLink) {\n    await cosmicLink.lock()\n    return cosmicLink.xdr\n  }\n}\n\n/**\n * Module loading\n */\n\nfunction getLedgerModule () {\n  return import(\n    /* webpackChunkName: \"ledger\" */ \"@cosmic-plus/ledger-wallet\"\n  ).then(ledger => ledger.default)\n}\n\nfunction getTrezorModule () {\n  return import(\n    /* webpackChunkName: \"trezor\" */ \"@cosmic-plus/trezor-wallet\"\n  ).then(trezor => {\n    trezor.register(\"https://cosmic.link\", \"mister.ticot@cosmic.plus\")\n    return trezor.default\n  })\n}\n\n/**\n * Apply defaults to each protocols.\n */\n\nfor (let entry in protocols) {\n  protocols[entry] = Object.assign({}, defaults, protocols[entry])\n}\n\nprotocols.defaults = defaults\n","\"use strict\"\n/**\n * Wallets & signing methods that accept arbitrary transactions as input.\n */\nconst wallets = exports\n\n/* Data */\nwallets.LedgerWallet = {\n  name: \"Ledger Wallet\",\n  protocol: \"ledgerwallet\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.TrezorWallet = {\n  name: \"Trezor Wallet\",\n  protocol: \"trezorwallet\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarAuthenticator = {\n  name: \"Stellar Authenticator\",\n  protocol: \"cosmiclink\",\n  url: \"https://stellar-authenticator.org/\"\n}\n\nwallets.Lobstr = {\n  name: \"Lobstr Web (partial support)\",\n  protocol: \"sep0007\",\n  url: \"https://lobstr.co/?tx=\",\n  target: \"new\"\n}\n\nwallets.StellarTerm = {\n  name: \"StellarTerm (partial support)\",\n  protocol: \"sep0007\",\n  url: \"https://stellarterm.com/?tx=\",\n  target: \"new\"\n}\n\nwallets.Sep7Wallet = {\n  name: \"Sep-0007 Wallet\",\n  protocol: \"sep0007\",\n  url: \"web+stellar:\",\n  target: \"external\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarLaboratory = {\n  name: \"Stellar Laboratory\",\n  protocol: \"stellarlab\",\n  url: \"https://stellar.org/laboratory/#txsigner\",\n  target: \"new\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.CopyPasteXdr = {\n  name: \"Copy/Paste XDR\",\n  protocol: \"copy\",\n  needSource: true,\n  needNetwork: true\n}\n","\"use strict\"\n/**\n * Signing Flow\n *\n * - Input: authenticator\n * - InOut: query, cosmicLink, accountId, network, horizon\n * - Intermediate: needSource, needNetwork, lockSource, lockNetwork\n * - Output: request, target, sign, result\n *\n * *: May get replaced during execution.\n * */\nconst { CosmicLink, resolve, config } = require(\"cosmic-lib\")\nconst TxResult = require(\"@cosmic-plus/tx-result\")\n\nconst { LiveObject } = require(\"@kisbox/model\")\nconst { type } = require(\"@kisbox/utils\")\nconst {\n  environment: { isEmbedded }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass SigningFlow extends LiveObject {\n  constructor (params) {\n    super()\n\n    this.network = \"public\"\n    this.result = null\n    this.$import(params, [\n      \"network\",\n      \"horizon\",\n      \"accountId\",\n      \"authenticator\",\n      \"query\",\n      \"cosmicLink\"\n    ])\n  }\n\n  signUsingUri () {\n    if (\n      isEmbedded\n      && (this.authenticator.target === \"new\"\n        || this.authenticator.target === \"external\")\n    ) {\n      open(this.target)\n      window.parent.postMessage(\"close\", \"*\")\n    } else {\n      location.replace(this.target)\n    }\n  }\n\n  signUsingFunction () {\n    this.result = this.request()\n      .then(() => {\n        this.cosmicLink = this.request.cosmicLink\n        return TxResult.forCosmicLink(this.cosmicLink)\n      })\n      .catch(error => error)\n  }\n}\n\n/* Computations: inputs */\nconst proto = SigningFlow.prototype\n\nproto.$on(\"network\", function () {\n  // Turns passphrases into network names. (e.g: \"public\")\n  const name = resolve.networkName(this.network)\n  if (this.network !== name) {\n    this.network = name\n    return\n  }\n})\n\nproto.$define(\"horizon\", [\"network\"], function () {\n  return (\n    resolve.horizon(this.network)\n    || this.cosmicLink && this.cosmicLink.tdesc.horizon\n    || \"\"\n  )\n})\n\n/* Computations: intermediate */\n\nproto.$define(\"cosmicLink\", [\"query\"], function () {\n  if (this.query && this.query.length > 1) {\n    return new CosmicLink(this.query)\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"query\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return this.cosmicLink.query\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"needSource\", [\"authenticator\"], function () {\n  if (this.authenticator) {\n    return !!this.authenticator.needSource\n  }\n})\n\nproto.$define(\"needNetwork\", [\"authenticator\"], function () {\n  if (this.authenticator) {\n    return !!this.authenticator.needNetwork\n  }\n})\n\nproto.$define(\"lockSource\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return !!this.cosmicLink.tdesc.source\n  }\n})\n\nproto.$define(\"lockNetwork\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return !!this.cosmicLink.tdesc.network\n  }\n})\n\n/* Events: intermediate */\n\nproto.$on(\"horizon\", function () {\n  if (this.horizon.length > 4 && this.horizon.substr(0, 4) !== \"http\") {\n    this.horizon = `https://${this.horizon}`\n    return\n  }\n\n  // Save network/horizon association\n  const passphrase = resolve.networkPassphrase(this.network)\n  config.setupNetwork(this.network, this.horizon, passphrase)\n})\n\nproto.$define(\"accountId\", [\"authenticator\", \"cosmicLink\"], function () {\n  if (this.authenticator.getAccountId) {\n    return this.authenticator.getAccountId()\n  } else if (this.lockSource) {\n    return this.cosmicLink.tdesc.source\n  } else if (typeof this.accountId === \"string\") {\n    return this.accountId\n  } else {\n    return \"\"\n  }\n})\n\nproto.$define(\"network\", [\"cosmicLink\"], function () {\n  if (this.lockNetwork) {\n    return this.cosmicLink.tdesc.network\n  } else {\n    return this.network || \"public\"\n  }\n})\n\n/* Computations: outputs */\n\nproto.$define(\n  \"request\",\n  [\"cosmicLink\", \"authenticator\", \"accountId\", \"network\", \"horizon\"],\n  function () {\n    if (!this.cosmicLink) {\n      return this.authenticator.url || null\n    }\n\n    if (\n      type(this.accountId) === \"promise\"\n      || type(this.accountId) === \"error\"\n    ) {\n      return new Promise(() => {})\n    }\n\n    if (this.needSource && !(this.lockSource || this.accountId)) {\n      return new Error(\"Please set a source account\")\n    }\n    if (this.needNetwork) {\n      if (!(this.network || this.lockNetwork)) {\n        return new Error(\"Please set a network\")\n      } else if (!this.horizon) {\n        return new Error(\"Please set an Horizon address\")\n      }\n    }\n\n    const clone = new CosmicLink(this.cosmicLink.query)\n    config.source = this.accountId\n    config.network = this.network\n\n    const response = this.authenticator.handler(clone, this.authenticator)\n    return response\n  }\n)\n\nproto.$define(\"target\", [\"request\"], function () {\n  if (type(this.request) === \"promise\") {\n    return new Promise(() => {})\n  } else if (type(this.request) === \"error\") {\n    return this.request\n  }\n\n  if (typeof this.request === \"string\") {\n    return this.request\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"sign\", [\"request\"], function () {\n  if (type(this.request) === \"promise\") {\n    return new Promise(() => {})\n  } else if (type(this.request) === \"error\") {\n    return this.request\n  }\n\n  if (typeof this.request === \"string\") {\n    return () => this.signUsingUri()\n  } else if (this.request) {\n    return () => this.signUsingFunction()\n  } else {\n    return null\n  }\n})\n\n/* Events */\nproto.$on(\n  [\"cosmicLink\", \"authenticator\", \"network\", \"horizon\", \"sign\"],\n  function () {\n    this.result = null\n  }\n)\n\n/* Export */\nmodule.exports = SigningFlow\n","\"use strict\"\n/**\n * Tx Description\n *\n * Input: cosmicLink\n * */\n\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass TxDescription extends View {\n  constructor (params) {\n    super(`\n<div class=\"TxDescription\">%description</div>\n    `)\n\n    this.$import(params, [\"cosmicLink\"])\n  }\n}\n\n/* Computations */\nconst proto = TxDescription.prototype\n\nproto.$define(\"description\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink && this.cosmicLink.tdesc.operations) {\n    return this.cosmicLink.htmlDescription\n  } else {\n    return \"No transaction\"\n  }\n})\n\n/* Export */\nmodule.exports = TxDescription\n","\"use strict\"\n/**\n * Handler Form\n *\n * *Inputs:* authenticators, signingFlow*\n *\n * *: Can be edited by user input.\n **/\nconst { View } = require(\"@kisbox/browser\")\n\nconst AccountInput = require(\"./account-input\")\nconst HandlerSelector = require(\"./handler-selector\")\nconst NetworkSelector = require(\"./network-selector\")\n\n/* Definition */\n\nclass HandlerForm extends View {\n  constructor (signingFlow) {\n    super(`\n<form class=\"HandlerForm\" onsubmit=\"return false\">\n  %handlerSelector\n  <div hidden=%not:needSource>%accountInput</div>\n  <div hidden=%not:needNetwork>%networkSelector</div>\n</form>\n    `)\n\n    // Inputs\n    this.$import(signingFlow, [\"needSource\", \"needNetwork\"])\n\n    // Components\n    this.handlerSelector = new HandlerSelector(signingFlow)\n    this.accountInput = new AccountInput(signingFlow)\n    this.networkSelector = new NetworkSelector(signingFlow)\n  }\n}\n\n/* Export */\nmodule.exports = HandlerForm\n","\"use strict\"\n/**\n * Account Input Box\n * */\n\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst {\n  html: { copyContent }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass AccountInput extends View {\n  constructor (params) {\n    super(`\n<input type=\"text\" value=%filter:accountId %onclick %readonly %disabled\n  %placeholder autocomplete=\"stellar-address\">\n    `)\n\n    this.accountId = \"\"\n    this.$import(params, [\"cosmicLink\", \"authenticator\"])\n    this.$link(params, [\"accountId\"])\n  }\n\n  onclick () {\n    if (this.readonly) {\n      copyContent(this.domNode)\n    }\n  }\n}\n\n/* Computations */\nconst proto = AccountInput.prototype\n\nproto.$define(\"disabled\", [\"cosmicLink\", \"authenticator\"], function () {\n  return type(this.accountId) === \"promise\" || type(this.accountId) === \"error\"\n})\n\nproto.$define(\"readonly\", [\"cosmicLink\", \"authenticator\"], function () {\n  return !!(\n    this.cosmicLink && this.cosmicLink.tdesc.source\n    || this.authenticator.getAccountId\n  )\n})\n\nproto.$define(\"placeholder\", [\"accountId\"], function () {\n  if (type(this.accountId) === \"promise\") {\n    return \"Connecting...\"\n  } else if (type(this.accountId) === \"error\") {\n    return this.accountId\n  } else {\n    return \"Federated Address or Public Key\"\n  }\n})\n\n/* Helpers */\nconst helpers = AccountInput.helpers\n\nhelpers.filter = function (accountId) {\n  if (type(accountId) === \"string\") {\n    return accountId\n  } else {\n    return \"\"\n  }\n}\n\n/* Export */\nmodule.exports = AccountInput\n","\"use strict\"\n/**\n * Handler Selector\n *\n * * Import: authenticators\n * * Link: authenticatorName\n *\n * */\nconst { View, html } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass HandlerSelector extends View {\n  constructor (params) {\n    super(`\n<select class=\"HandlerSelector\" value=%authenticatorName>\n  %toOption:...authenticators\n</select>\n    `)\n\n    this.$import(params, [\"authenticators\"])\n    this.$link(params, [\"authenticatorName\"])\n  }\n}\n\n/* Helpers */\nconst helpers = HandlerSelector.helpers\n\nhelpers.toOption = function (handler) {\n  return html(\"option\", { value: handler.name }, handler.fullName)\n}\n\n/* Export */\nmodule.exports = HandlerSelector\n","\"use strict\"\n/**\n * Network Selector\n * */\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass NetworkSelector extends View {\n  constructor (params) {\n    super(`\n<div class=\"NetworkSelector\">\n\n  <div>\n    <input type=\"radio\" $group=\"networkSelector\" value=\"public\"\n      disabled=%lockNetwork $label=\"Public\">\n    <input type=\"radio\" $group=\"networkSelector\" value=\"test\"\n      disabled=%lockNetwork $label=\"Test\">\n    <input type=\"radio\" $group=\"networkSelector\" value=\"custom\"\n      disabled=%lockNetwork $label=\"Custom\">\n  </div>\n\n  <div hidden=%not:isCustom>\n    <input type=\"text\" value=%network disabled=%lockNetwork\n      placeholder=\"Network Passphrase or Name\">\n    <input type=\"text\" value=%horizon\n      placeholder=\"Horizon URL\">\n  </div>\n  \n</div>\n    `)\n\n    this.$import(params, [\"lockNetwork\"])\n    this.$link(params, [\"network\", \"horizon\"])\n  }\n}\n\n/* Computations */\nconst proto = NetworkSelector.prototype\n\nproto.$define(\"networkSelector\", [\"network\"], function () {\n  if (this.network === \"public\" || this.network === \"test\") {\n    return this.network\n  } else {\n    return \"custom\"\n  }\n})\n\nproto.$define(\"isCustom\", [\"networkSelector\"], function () {\n  return this.networkSelector === \"custom\"\n})\n\n/* Events */\nproto.$on(\"networkSelector\", function () {\n  if (!this.isCustom) {\n    this.network = this.networkSelector\n  }\n})\n\n/* Export */\nmodule.exports = NetworkSelector\n","\"use strict\"\n/**\n * Redirection Form\n * */\nconst { View, html } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst QrCodeSwitcher = require(\"./qr-code-switcher\")\nconst RedirectionButton = require(\"./redirection-button\")\nconst TxResultView = require(\"./tx-result-view\")\nconst XdrArea = require(\"./xdr-area\")\n\n/* Definition */\n\nclass RedirectionForm extends View {\n  constructor (signingFlow) {\n    super(`\n<form class=\"RedirectionForm\" hidden=%not:showButton>\n  %redirectionButton\n  <div $ref=\"messageBox\"></div>\n  %txResultView\n</form>\n\n\n<form hidden=%not:showTextarea>\n  %xdrArea\n</form>\n\n<div hidden=%not:showQrCodeSwitcher>\n  %qrCodeSwitcher\n</div>\n    `)\n\n    this.$import(signingFlow, [\n      \"cosmicLink\",\n      \"authenticator\",\n      \"action\",\n      \"result\"\n    ])\n\n    // Components\n    this.redirectionButton = new RedirectionButton(signingFlow)\n    this.xdrArea = new XdrArea(signingFlow)\n    this.qrCodeSwitcher = new QrCodeSwitcher(signingFlow)\n  }\n}\n\n/* Computations */\nconst proto = RedirectionForm.prototype\n\nproto.$define(\"showButton\", [\"authenticator\"], function () {\n  return this.authenticator.redirection\n})\n\nproto.$define(\"showTextarea\", [\"cosmicLink\", \"authenticator\"], function () {\n  return this.authenticator.textarea\n})\n\nproto.$define(\n  \"showQrCodeSwitcher\",\n  [\"cosmicLink\", \"authenticator\"],\n  function () {\n    return this.cosmicLink && this.authenticator.qrCode\n  }\n)\n\nproto.$define(\"txResultView\", [\"result\"], function () {\n  if (type(this.result) === \"error\") {\n    return html(\"span\", { className: \"error\" }, this.result.message)\n  } else {\n    return new TxResultView(this.result)\n  }\n})\n\n/* Helpers */\nconst helpers = RedirectionForm.helpers\n\nhelpers.filter = function (action) {\n  if (type(action) === \"promise\") {\n    return \"Pending...\"\n  } else {\n    return action\n  }\n}\n\n/* Export */\nmodule.exports = RedirectionForm\n","\"use strict\"\n/**\n * QR Code UI\n */\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst QrCodeCanvas = require(\"./qr-code-canvas\")\n\n/* Definition */\n\nclass QrCodeSwitcher extends View {\n  constructor (params) {\n    super(`\n<form id=\"qrForm\">\n  <input type=\"button\" value=\"QR Code\" onclick=%switch %disabled>\n  <div %hidden>%canvas</div>\n</form>\n  `)\n\n    this.disabled = false\n    this.hidden = true\n    this.target = null\n    this.$import(params, [\"target\"])\n    this.$link(params, [\"showQrCode\"])\n\n    this.canvas = new QrCodeCanvas(params)\n  }\n\n  switch () {\n    this.showQrCode = !this.showQrCode\n  }\n}\n\n/* Computations */\nconst proto = QrCodeSwitcher.prototype\n\nproto.$define(\"disabled\", [\"target\"], function () {\n  return type(this.target) === \"error\"\n})\n\nproto.$define(\"hidden\", [\"showQrCode\", \"disabled\"], function () {\n  return !this.showQrCode || this.disabled\n})\n\n/* Exports */\nmodule.exports = QrCodeSwitcher\n","\"use strict\"\n/**\n * QR Code Canvas\n */\nconst QrCode = require(\"qrcode\")\n\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\nconst {\n  promise: { timeout }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass QrCodeCanvas extends View {\n  constructor (params) {\n    super(`\n<div class=\"QrCodeCanvas\">\n  <span class=\"cosmiclib_loadingAnim\" hidden=%not:pending></span>\n  <canvas $ref=\"canvas\" title=%target %hidden></canvas>\n</div>\n`)\n\n    this.$import(params, [\"target\"])\n  }\n}\n\n/* Computations */\nconst proto = QrCodeCanvas.prototype\n\nproto.$define(\"pending\", [\"target\"], function () {\n  return type(this.target) === \"promise\"\n})\n\nproto.$define(\"hidden\", [\"target\"], function () {\n  return !this.target || type(this.target) !== \"string\"\n})\n\nproto.$on(\"target\", function () {\n  if (this.hidden) {\n    clearQr(this.$ref.canvas)\n  } else {\n    setQr(this.$ref.canvas, this.target)\n  }\n})\n\n/* Helpers */\n\nfunction setQr (canvas, target) {\n  // Make heavy computation async.\n  timeout(1).then(() => {\n    const scale = Math.max(3, 6 - Math.floor(Math.sqrt(target) / 10))\n    QrCode.toCanvas(canvas, target, { margin: 0, scale })\n  })\n}\n\nfunction clearQr (canvas) {\n  const context = canvas.getContext(\"2d\")\n  context.clearRect(0, 0, canvas.width, canvas.height)\n}\n\n/* Exports */\nmodule.exports = QrCodeCanvas\n","\"use strict\"\n/**\n * Redirection Button\n * */\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\n/* Definition */\n\nclass RedirectionButton extends View {\n  constructor (params) {\n    super(`\n<div class=\"RedirectionButton\">\n  <input type=\"button\" %value %onclick %disabled>\n  <input type=\"checkbox\" checked=%automaticRedirection\n    $label=\"Automatic redirection\">\n</div>\n    `)\n\n    this.$import(params, [\"authenticator\", \"sign\", \"result\"])\n    this.$link(params, [\"automaticRedirection\"])\n  }\n\n  onclick () {\n    this.sign()\n  }\n}\n\n/* Computations */\nconst proto = RedirectionButton.prototype\n\nproto.$define(\"buttonText\", [\"authenticator\", \"sign\"], function () {\n  if (type(this.sign) === \"promise\") {\n    return \"...\"\n  } else if (type(this.sign) === \"error\") {\n    return this.sign\n  } else if (this.sign) {\n    return this.authenticator.buttonText\n  } else {\n    return \"No transaction\"\n  }\n})\n\nproto.$define(\"value\", [\"buttonText\", \"result\"], function () {\n  if (type(this.result) === \"promise\") {\n    return \"Signing...\"\n  } else if (this.result) {\n    return \"Done\"\n  } else {\n    return this.buttonText\n  }\n})\n\nproto.$define(\"disabled\", [\"sign\", \"result\"], function () {\n  return (\n    !this.sign\n    || type(this.sign) === \"promise\"\n    || type(this.sign) === \"error\"\n    || this.result\n  )\n})\n\n/* Export */\nmodule.exports = RedirectionButton\n","\"use strict\"\n/**\n * TxResultView - Displays TxResult instances\n */\nconst TxResult = require(\"@cosmic-plus/tx-result\")\nconst { View, html } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass TxResultView extends View {\n  static async forCosmicLink (cosmicLink) {\n    const result = await TxResult.forCosmicLink(cosmicLink)\n    return new TxResultView(result)\n  }\n\n  static fromResponse (response) {\n    const result = new TxResult(response)\n    return new TxResultView(result)\n  }\n\n  constructor (txResult) {\n    super(`\n<div class=\"TxResultView cosmiclink_description\">\n\n  <span class=%state>%title</span>\n\n  <ul class=\"error\" hidden=%validated>\n    %{toLi:...errors}\n  </ul>\n\n</div>\n    `)\n\n    this.$import(txResult, [\"title\", \"errors\", \"validated\"])\n    this.state = this.validated ? \"info\" : \"error\"\n  }\n}\n\n/* Helpers */\nTxResultView.helpers.toLi = any => html(\"li\", [any])\n\n/* Exports */\nmodule.exports = TxResultView\n","\"use strict\"\n/**\n * XdrArea\n **/\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst { html: copyContent } = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass XdrArea extends View {\n  constructor (params) {\n    super(`\n<textarea rows=3 %value %onclick %disabled %readonly %placeholder></textarea>\n    `)\n\n    this.$import(params, [\"target\"])\n  }\n\n  onclick () {\n    if (this.readonly) {\n      copyContent(this.domNode)\n    }\n  }\n}\n\n/* Computations */\nconst proto = XdrArea.prototype\n\nproto.$define(\"disabled\", [\"target\"], function () {\n  return (\n    !this.target\n    || type(this.target) === \"promise\"\n    || type(this.target) === \"error\"\n  )\n})\n\nproto.$define(\"readonly\", [\"target\"], function () {\n  return !!this.target\n})\n\nproto.$define(\"placeholder\", [\"target\"], function () {\n  if (!this.target) {\n    return \"No transaction\"\n  } else if (type(this.target) === \"promise\") {\n    return \"Pending...\"\n  } else {\n    return this.target\n  }\n})\n\nproto.$define(\"value\", [\"target\"], function () {\n  if (this.disabled) {\n    return \"\"\n  } else {\n    return this.target\n  }\n})\n\n/* Export */\nmodule.exports = XdrArea\n","\"use strict\"\n/**\n * App Full\n *\n * inouts: query, selectedTabId, antiTamperHash, signingFlow\n * outputs: route\n *\n * */\nconst { sep7Utils } = require(\"cosmic-lib\")\nconst { View, html } = require(\"@kisbox/browser\")\n\nconst AppState = require(\"./app.state\")\nconst Navigation = require(\"./lib/navigation\")\n\nconst AntiTamper = require(\"./view/anti-tamper\")\nconst SigningWidget = require(\"./view/signing-widget\")\n\nconst {\n  html: { copyContent }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass AppFull extends View {\n  constructor (params) {\n    super(`\n<div class=\"CosmicLinkApp\">\n  <header onclick=%copyHeader>\n    <h1>%location</h1><span>%query</span>\n  </header>\n\n  <img id=\"logo\" src=\"icons/512x512.png\" alt=\"\">\n\n  <main>\n    %navigation\n    <hr>\n    %selectedTabView\n  </main>\n\n  <footer>\n    <a id=\"registerSep7Handler\" onclick=%registerSep7Handler\n        hidden=%not:isSep7Supported>\n      Register as web+stellar links handler (SEP-0007)\n    </a>\n  </footer>\n\n  %antiTamper\n</div>\n`)\n    this.selectedTabId = \"sign\"\n    this.state = new AppState(params)\n    this.$import(this.state, [\"query\"])\n    this.$import(params, [\"selectedTabId\"])\n\n    // Header\n    if (location.origin === \"null\") {\n      this.location = location.pathname\n    } else {\n      this.location = `${location.origin}${location.pathname}`\n    }\n\n    // Navigation\n    this.navigation = new Navigation([\n      {\n        id: \"sign\",\n        title: \"Sign\",\n        view: new SigningWidget(this.state)\n      },\n      {\n        id: \"about\",\n        title: \"About\",\n        view: html.grab(\"#about\")\n      }\n    ])\n\n    this.navigation.$link(this, [\"selectedTabView\", \"selectedTabId\"])\n    if (!this.selectedTabView) {\n      this.selectedTabId = \"sign\"\n    }\n\n    // SEP-0007\n    this.isSep7Supported = sep7Utils.isWebHandlerSupported()\n\n    // Robot anti-tamper\n    this.antiTamper = new AntiTamper(params)\n  }\n\n  copyHeader () {\n    copyContent(this.$ref(\":scope > header\"))\n  }\n\n  registerSep7Handler () {\n    const currentPageUrl = location.href.split(/[?#]/, 1)[0]\n    sep7Utils.registerWebHandler(currentPageUrl, \"Cosmic.link\")\n  }\n}\n\n/* Computations */\nconst proto = AppFull.prototype\n\nproto.$define(\"route\", [\"query\", \"selectedTabId\"], function () {\n  const tab = this.selectedTabId\n  const query = tab === \"sign\" ? this.query || \"\" : \"\"\n  const hash = tab === \"sign\" ? \"\" : `#${this.selectedTabId}`\n  return `${query}${hash}`\n})\n\n/* Export */\nmodule.exports = AppFull\n","\"use strict\"\n/**\n * Navigation\n * */\nconst { View, html } = require(\"@kisbox/browser\")\nconst { LiveArray } = require(\"@kisbox/model\")\n\n/* Definition */\n\nclass Navigation extends View {\n  constructor (tabs = []) {\n    super(`\n<nav>%toNavigationLink:...tabs</nav>\n    `)\n\n    this.tabs = LiveArray.from(tabs)\n  }\n}\n\n/* Helpers */\nconst helpers = Navigation.helpers\n\nhelpers.toNavigationLink = function (tab) {\n  const link = html(\"a\", null, tab.title)\n  link.onclick = () => this.selectedTabId = tab.id\n  this.$on(\"selectedTabId\", selectedTabId => {\n    link.className = selectedTabId === tab.id ? \"selected\" : \"\"\n  })\n  return link\n}\n\n/* Computations */\nconst proto = Navigation.prototype\n\nproto.$define(\"selectedTabView\", [\"selectedTabId\"], function () {\n  const tab = this.tabs.find(t => t.id === this.selectedTabId)\n  if (tab) return tab.view\n})\n\n/* Export */\nmodule.exports = Navigation\n","\"use strict\"\n/**\n * Anti-tamper robot.\n */\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass AntiTamper extends View {\n  constructor (params = {}) {\n    super(`<img class=\"AntiTamper\" %src>`)\n    this.$import(params, [\"baseUrl\", \"set\", \"antiTamperHash\"])\n  }\n}\n\n/* Defaults */\nconst proto = AntiTamper.prototype\nproto.baseUrl = \"https://robohash.org\"\nproto.set = \"set1\"\n\n/* Computations */\n\nproto.$define(\"src\", [\"baseUrl\", \"set\", \"antiTamperHash\"], function () {\n  return `${this.baseUrl}/${this.antiTamperHash}?set=${this.set}`\n})\n\n/* Utilities */\n\nAntiTamper.makeHash = function (size = 32) {\n  const alphabet =\n    \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\n  let hash = \"\"\n  for (let i = 0; i < size; i++) {\n    const random = Math.floor(Math.random() * alphabet.length)\n    hash += alphabet.charAt(random)\n  }\n\n  return hash\n}\n\n/* Export */\nmodule.exports = AntiTamper\n"],"sourceRoot":""}