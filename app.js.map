{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/app.state.js","webpack:///./src/model/protocol.js","webpack:///./src/view/signing-widget.js","webpack:///./src/app.embed.js","webpack:///./src/lib/crud-array.js","webpack:///./src/model/authenticator.js","webpack:///./src/model/signing-flow.js","webpack:///./src/model/signing-context.js","webpack:///./src/data/protocols.js","webpack:///./src/data/wallets.js","webpack:///./src/view/tx-description.js","webpack:///./src/view/handler-form.js","webpack:///./src/view/account-input.js","webpack:///./src/view/handler-selector.js","webpack:///./src/view/network-selector.js","webpack:///./src/view/redirection-form.js","webpack:///./src/view/qr-code-switcher.js","webpack:///./src/view/qr-code-canvas.js","webpack:///./src/view/redirection-button.js","webpack:///./src/view/tx-result-view.js","webpack:///./src/view/xdr-area.js","webpack:///./src/app.full.js","webpack:///./src/lib/navigation.js","webpack:///./src/view/anti-tamper.js"],"names":["CosmicLinkApp","constructor","params","mode","Embed","Full","require","module","exports","type","CrudArray","Authenticator","Protocol","SigningFlow","protocols","ingest","authenticators","AppState","super","this","$import","interrupt","console","log","proto","prototype","$define","get","authenticatorId","target","cosmicLink","automaticRedirection","sign","$on","current","previous","onExit","LiveObject","redirection","textarea","qrCode","$pick","lock","View","TxDescription","HandlerForm","RedirectionForm","signingFlow","txDescription","handlerForm","redirectionForm","SigningWidget","state","signingWidget","$pull","x","LiveArray","function","xeach","property","hide","Class","$store","key","ingestJson","toJson","toObject","map","JSON","stringify","collection","id","item","put","string","parse","want","delete","push","find","index","findIndex","splice","$listen","$trigger","$ignore","protocol","buttonText","name","CosmicLink","config","TxResult","environment","isEmbedded","SigningContext","open","uri","authenticator","location","replace","window","parent","postMessage","signRequest","returned","resolved","signed","needSource","lockSource","accountId","Error","needNetwork","network","lockNetwork","horizon","clone","query","source","resolveRequest","requestToUri","requestToXdr","forCosmicLink","resolve","networkName","tdesc","length","getAddress","substr","passphrase","networkPassphrase","setupNetwork","getLedgerModule","then","ledger","default","getTrezorModule","trezor","register","cosmiclink","url","ledgerwallet","connect","publicKey","transaction","disconnect","trezorwallet","sep0007","sep7","encodeURIComponent","stellarlab","encodedXdr","xdr","copy","wallets","LedgerWallet","TrezorWallet","StellarAuthenticator","Lobstr","StellarTerm","Sep7Wallet","StellarLaboratory","StellarLaboratoryView","CopyPasteXdr","operations","htmlDescription","AccountInput","HandlerSelector","NetworkSelector","handlerSelector","accountInput","networkSelector","html","copyContent","$link","onclick","readonly","domNode","$customDefine","helpers","filter","toOption","handler","value","isCustom","QrCodeSwitcher","RedirectionButton","TxResultView","XdrArea","redirectionButton","xdrArea","qrCodeSwitcher","result","className","message","QrCodeCanvas","canvas","switch","showQrCode","disabled","QrCode","promise","timeout","$ref","scale","Math","max","floor","sqrt","toCanvas","margin","getContext","clearRect","width","height","clearQr","action","response","txResult","validated","toLi","any","sep7Utils","Navigation","AntiTamper","AppFull","selectedTabId","origin","pathname","navigation","title","view","grab","selectedTabView","isSep7Supported","isWebHandlerSupported","antiTamper","copyHeader","registerSep7Handler","currentPageUrl","href","split","registerWebHandler","tab","hash","tabs","from","toNavigationLink","link","t","baseUrl","set","antiTamperHash","makeHash","size","alphabet","i","random","charAt"],"mappings":"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","file":"app.js","sourcesContent":["\"use strict\"\n/**\n * CosmicLink application.\n */\n\n/* Definiton */\nclass CosmicLinkApp {\n  constructor (params) {\n    if (params.mode === \"embed\") {\n      return new CosmicLinkApp.Embed(params)\n    } else {\n      return new CosmicLinkApp.Full(params)\n    }\n  }\n}\n\n/* Exports */\nCosmicLinkApp.Embed = require(\"./app.embed\")\nCosmicLinkApp.Full = require(\"./app.full\")\nmodule.exports = CosmicLinkApp\n","\"use strict\"\n/**\n * CosmicLinkApp.State\n * */\nconst { type } = require(\"@kisbox/utils\")\n\nconst CrudArray = require(\"./lib/crud-array\")\n\nconst Authenticator = require(\"./model/authenticator\")\nconst Protocol = require(\"./model/protocol\")\nconst SigningFlow = require(\"./model/signing-flow\")\n\n/* Data */\n\nAuthenticator.protocols = new CrudArray(Protocol)\nAuthenticator.protocols.ingest(require(\"./data/protocols\"))\nconst authenticators = new CrudArray(Authenticator)\nauthenticators.ingest(require(\"./data/wallets\"))\n\n/* Definition */\n\nclass AppState extends SigningFlow {\n  constructor (params) {\n    super(params)\n\n    this.$import(params, [\n      \"automaticRedirection\",\n      \"authenticators\",\n      \"authenticatorId\",\n      \"showQrCode\"\n    ])\n\n    // Prevent UI loading\n    if (this.interrupt === true) throw \"redirect\"\n\n    // Beta debugging\n    // eslint-disable-next-line no-console\n    console.log(\"State:\", this)\n  }\n}\n\n/* Defaults */\nconst proto = AppState.prototype\nproto.authenticators = authenticators\n\n/* Computations */\n\nproto.$define(\n  \"authenticator\",\n  [\"authenticators\", \"authenticatorId\"],\n  function () {\n    return this.authenticators.get(this.authenticatorId)\n  }\n)\n\nproto.$define(\n  \"interrupt\",\n  [\"automaticRedirection\", \"cosmicLink\", \"authenticator\", \"target\"],\n  function () {\n    if (type(this.target) !== \"string\") return\n\n    if (this.cosmicLink && this.automaticRedirection) {\n      this.sign()\n      return true\n    }\n  }\n)\n\n/* Events */\nproto.$on(\"authenticator\", function (current, previous) {\n  if (previous && previous.onExit) {\n    previous.onExit()\n  }\n})\n\n/* Export */\nmodule.exports = AppState\n","\"use strict\"\n/**\n * Protocol\n */\nconst { LiveObject } = require(\"@kisbox/model\")\n\n/* Definition */\n\nclass Protocol extends LiveObject {\n  constructor (params) {\n    super()\n\n    // Defaults\n    this.redirection = true\n    this.textarea = false\n    this.qrCode = true\n\n    this.$pick(params, [\n      \"id\",\n      // Values\n      \"redirection\",\n      \"textArea\",\n      \"qrCode\",\n      \"buttonText\",\n      // Actions\n      \"getAddress\",\n      \"resolveRequest\",\n      \"requestToUri\",\n      \"requestToXdr\",\n      \"signRequest\",\n      \"onExit\"\n    ])\n  }\n\n  async resolveRequest (cosmicLink) {\n    await cosmicLink.lock()\n    return cosmicLink\n  }\n}\n\n/* Export */\nmodule.exports = Protocol\n","\"use strict\"\n/**\n * Signing Widget\n * */\nconst { View } = require(\"@kisbox/browser\")\n\nconst TxDescription = require(\"./tx-description\")\nconst HandlerForm = require(\"./handler-form\")\nconst RedirectionForm = require(\"./redirection-form\")\n\n/* Definition */\n\nclass SigningWidget extends View {\n  constructor (signingFlow) {\n    super(`\n<section class=\"SigningWidget\">\n  <h2>Stellar Transaction Request</h2>\n  <hr>\n\n  <section>\n    <h3>Step 1: Check the Transaction</h3>\n    %txDescription\n  </section>\n  <hr>\n\n  <section>\n    <h3>Step 2: Selection a Signing Method</h3>\n    %handlerForm\n  </section>\n  <hr>\n\n  <section>\n    <h3>Step 3: Sign the Transaction</h3>\n    %redirectionForm\n  </section>\n    `)\n\n    // Components\n    this.txDescription = new TxDescription(signingFlow)\n    this.handlerForm = new HandlerForm(signingFlow)\n    this.redirectionForm = new RedirectionForm(signingFlow)\n  }\n}\n\n/* Export */\nmodule.exports = SigningWidget\n","\"use strict\"\n/**\n * Widget interface initialization.\n */\nconst { View } = require(\"@kisbox/browser\")\n\nconst AppState = require(\"./app.state\")\nconst SigningWidget = require(\"./view/signing-widget\")\n\n/* Definition */\n\nclass AppEmbed extends View {\n  constructor (params) {\n    super(`\n<div class=\"CosmicLinkApp\" %hidden>\n  <main>\n    <hr>\n    %signingWidget\n  </main>\n</div>\n    `)\n\n    this.state = new AppState(params)\n    this.signingWidget = new SigningWidget(this.state)\n    this.$pull(\"route\", this.state, \"query\", x => x || \"\")\n  }\n}\n\n/* Export */\nmodule.exports = AppEmbed\n","\"use strict\"\n/**\n * CrudArray\n */\nconst { LiveArray } = require(\"@kisbox/model\")\nconst {\n  function: { xeach },\n  property: { hide }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass CrudArray extends LiveArray {\n  constructor (Class) {\n    super()\n    hide(this, \"Class\", Class)\n  }\n\n  /* Storage */\n  $store (target, key) {\n    if (key in target) this.ingestJson(target[key])\n    this.$on(\"$change\", () => target[key] = this.toJson())\n  }\n\n  /* Formats */\n  toObject () {\n    return this.map(x => x.toObject())\n  }\n\n  toJson () {\n    return JSON.stringify(this.toObject())\n  }\n\n  ingest (collection) {\n    xeach(collection, (params, id) => {\n      const item = this.put(params)\n      if (!item.id) item.id = id\n    })\n    // collection.forEach(params => this.put(params))\n  }\n\n  ingestJson (string) {\n    this.ingest(JSON.parse(string))\n  }\n\n  /* Primitives */\n  put (params) {\n    const item = want(this.Class, params)\n    this.delete(item.id)\n    this.push(item)\n    return item\n  }\n\n  get (id) {\n    return this.find(x => x.id === id)\n  }\n\n  delete (id) {\n    const index = this.findIndex(x => x.id === id)\n    if (index !== -1) this.splice(index, 1)\n  }\n}\n\n/* Events */\nconst proto = CrudArray.prototype\n\nproto.$on(\"$add\", function ([item]) {\n  this.$listen(item, \"$set\", () => {\n    this.$trigger(\"$change\")\n  })\n})\n\nproto.$on(\"$remove\", function ([item]) {\n  this.$ignore(item, \"$set\")\n})\n\n/* Helpers */\n\nfunction want (Class, params) {\n  return params instanceof Class ? params : new Class(params)\n}\n\n/* Export */\nmodule.exports = CrudArray\n","\"use strict\"\n/**\n * Authenticator\n */\nconst Protocol = require(\"./protocol\")\n\n/* Definition */\n\nclass Authenticator extends Protocol {\n  constructor (params) {\n    const protocol = Authenticator.protocols.get(params.protocol)\n    super(protocol)\n    delete this.id\n\n    this.$import(params, [\n      \"id\",\n      // Values\n      \"name\",\n      \"protocol\",\n      \"url\",\n      \"target\",\n      \"needSource\",\n      \"needNetwork\"\n    ])\n\n    if (!this.buttonText && this.redirection)\n      this.buttonText = \"Go to \" + this.name\n  }\n}\n\n/* Export */\nmodule.exports = Authenticator\n","\"use strict\"\n/**\n * Signing Flow\n **/\nconst { CosmicLink, config } = require(\"cosmic-lib\")\nconst TxResult = require(\"@cosmic-plus/tx-result\")\n\nconst {\n  environment: { isEmbedded }\n} = require(\"@kisbox/helpers\")\n\nconst SigningContext = require(\"./signing-context\")\n\n/* Definition */\n\nclass SigningFlow extends SigningContext {\n  constructor (params) {\n    super(params)\n  }\n\n  open () {\n    if (!this.uri) return\n\n    // TODO: use an opening callback instead?\n    if (\n      isEmbedded\n      && (this.authenticator.target === \"new\"\n        || this.authenticator.target === \"external\")\n    ) {\n      open(this.uri)\n      window.parent.postMessage(\"close\", \"*\")\n    } else {\n      location.replace(this.uri)\n    }\n  }\n\n  async sign () {\n    if (!this.authenticator.signRequest) return null\n\n    const returned = await this.authenticator.signRequest(this.resolved)\n    this.signed = returned || this.resolved\n  }\n}\n\n/* Computations */\nconst proto = SigningFlow.prototype\n\nproto.$define(\n  \"resolved\",\n  [\"authenticator\", \"accountId\", \"network\", \"horizon\"],\n  function () {\n    if (!this.cosmicLink) return\n\n    if (this.needSource && !(this.lockSource || this.accountId)) {\n      return new Error(\"Please set a source account\")\n    }\n    if (this.needNetwork) {\n      if (!(this.network || this.lockNetwork)) {\n        return new Error(\"Please set a network\")\n      } else if (!this.horizon) {\n        return new Error(\"Please set an Horizon address\")\n      }\n    }\n\n    const clone = new CosmicLink(this.cosmicLink.query)\n    config.source = this.accountId\n    config.network = this.network\n\n    return this.authenticator.resolveRequest(clone, this.authenticator)\n  }\n)\n\nproto.$on(\"authenticator\", function () {\n  this.signed = null\n})\n\nproto.$define(\"uri\", [\"resolved\"], function () {\n  if (!this.resolved) {\n    return this.authenticator.uri\n  } else if (this.authenticator.requestToUri) {\n    return this.authenticator.requestToUri(this.resolved, this.authenticator)\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"xdr\", [\"resolved\"], function () {\n  if (this.resolved && this.authenticator.requestToXdr) {\n    return this.authenticator.requestToXdr(this.resolved, this.authenticator)\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"action\", [\"resolved\"], function () {\n  if (this.authenticator.signRequest) {\n    return () => this.sign()\n  } else {\n    return () => this.open()\n  }\n})\n\nproto.$on(\"signed\", function () {\n  if (this.signed) {\n    this.query = this.signed.query\n  }\n})\n\nproto.$define(\"result\", [\"signed\"], function () {\n  return this.signed && TxResult.forCosmicLink(this.signed)\n})\n\n/* Export */\nmodule.exports = SigningFlow\n","\"use strict\"\n/**\n * Signing Context\n **/\nconst { CosmicLink, resolve, config } = require(\"cosmic-lib\")\nconst { LiveObject } = require(\"@kisbox/model\")\n\n/* Definition */\n\nclass SigningContext extends LiveObject {\n  constructor (params) {\n    super()\n\n    this.network = \"public\"\n    this.$import(params, [\n      \"network\",\n      \"horizon\",\n      \"accountId\",\n      \"authenticator\",\n      \"query\",\n      \"cosmicLink\"\n    ])\n  }\n}\n\n/* Computations: inputs */\nconst proto = SigningContext.prototype\n\nproto.$on(\"network\", function () {\n  // Turns passphrases into network names. (e.g: \"public\")\n  const name = resolve.networkName(this.network)\n  if (this.network !== name) {\n    this.network = name\n    return\n  }\n})\n\nproto.$define(\"horizon\", [\"network\"], function () {\n  return (\n    resolve.horizon(this.network)\n    || this.cosmicLink && this.cosmicLink.tdesc.horizon\n    || \"\"\n  )\n})\n\nproto.$define(\"cosmicLink\", [\"query\"], function () {\n  if (this.query && this.query.length > 1) {\n    return new CosmicLink(this.query)\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"query\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return this.cosmicLink.query\n  } else {\n    return null\n  }\n})\n\n/* Computations: intermediate */\n\nproto.$define(\"needSource\", [\"authenticator\"], function () {\n  if (this.authenticator) {\n    return !!this.authenticator.needSource\n  }\n})\n\nproto.$define(\"needNetwork\", [\"authenticator\"], function () {\n  if (this.authenticator) {\n    return !!this.authenticator.needNetwork\n  }\n})\n\nproto.$define(\"lockSource\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return !!this.cosmicLink.tdesc.source\n  }\n})\n\nproto.$define(\"lockNetwork\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return !!this.cosmicLink.tdesc.network\n  }\n})\n\nproto.$define(\"accountId\", [\"authenticator\", \"cosmicLink\"], function () {\n  if (this.authenticator.getAddress) {\n    return this.authenticator.getAddress()\n  } else if (this.lockSource) {\n    return this.cosmicLink.tdesc.source\n  } else if (typeof this.accountId === \"string\") {\n    return this.accountId\n  } else {\n    return \"\"\n  }\n})\n\nproto.$define(\"network\", [\"cosmicLink\"], function () {\n  if (this.lockNetwork) {\n    return this.cosmicLink.tdesc.network\n  } else {\n    return this.network || \"public\"\n  }\n})\n\n/* Events: intermediate */\n\nproto.$on(\"horizon\", function () {\n  if (this.horizon.length > 4 && this.horizon.substr(0, 4) !== \"http\") {\n    this.horizon = `https://${this.horizon}`\n    return\n  }\n\n  // Save network/horizon association\n  const passphrase = resolve.networkPassphrase(this.network)\n  config.setupNetwork(this.network, this.horizon, passphrase)\n})\n\n/* Export */\nmodule.exports = SigningContext\n","\"use strict\"\n/**\n * Wallet protocols.\n *\n * Properties:\n *\n * - getAddress\n * - resolveRequest\n * - signRequest\n * - requestToUri\n * - requestToXdr\n * - onExit\n *\n * @exports protocols\n * @private\n */\nconst protocols = exports\n\n/* Data */\n\nprotocols.cosmiclink = {\n  resolveRequest (cosmicLink) {\n    return cosmicLink\n  },\n  requestToUri (cosmicLink, authenticator) {\n    return `${authenticator.url}${cosmicLink.query}`\n  }\n}\n\nprotocols.ledgerwallet = {\n  buttonText: \"Sign with Ledger Wallet\",\n  qrCode: false,\n  async getAddress () {\n    const ledger = await getLedgerModule()\n    await ledger.connect()\n    return ledger.publicKey\n  },\n  async signRequest (cosmicLink) {\n    const ledger = await getLedgerModule()\n    await ledger.sign(cosmicLink.transaction)\n  },\n  async onExit () {\n    const ledger = await getLedgerModule()\n    ledger.disconnect()\n  }\n}\n\nprotocols.trezorwallet = {\n  buttonText: \"Sign with Trezor Wallet\",\n  qrCode: false,\n  async getAddress () {\n    const trezor = await getTrezorModule()\n    await trezor.connect()\n    return trezor.publicKey\n  },\n  async signRequest (cosmicLink) {\n    const trezor = await getTrezorModule()\n    await trezor.sign(cosmicLink.transaction)\n  },\n  async onExit () {\n    const trezor = await getTrezorModule()\n    trezor.disconnect()\n  }\n}\n\nprotocols.sep0007 = {\n  requestToUri (cosmicLink, authenticator) {\n    const uri = cosmicLink.sep7\n    const endpoint = \"web+stellar:\"\n    if (authenticator.url !== endpoint) {\n      const sep7 = encodeURIComponent(uri)\n      return `${authenticator.url}${sep7}`\n    } else {\n      return uri\n    }\n  }\n}\n\nprotocols.stellarlab = {\n  async requestToUri (cosmicLink, authenticator) {\n    const encodedXdr = encodeURIComponent(cosmicLink.xdr)\n    let query = `${encodedXdr}`\n\n    if (cosmicLink.network === \"public\" || cosmicLink.network === \"test\") {\n      query += `&network=${cosmicLink.network}`\n    } else {\n      const passphrase = encodeURIComponent(cosmicLink.network)\n      const horizon = encodeURIComponent(cosmicLink.horizon)\n      query += `&network=custom&horizonURL=${horizon}`\n      query += `&networkPassphrase=${passphrase}`\n    }\n\n    return `${authenticator.url}${query}`\n  }\n}\n\nprotocols.copy = {\n  redirection: false,\n  textarea: true,\n  requestToXdr (cosmicLink) {\n    return cosmicLink.xdr\n  }\n}\n\n/* Module loading */\n\nfunction getLedgerModule () {\n  return import(\n    /* webpackChunkName: \"ledger\" */ \"@cosmic-plus/ledger-wallet\"\n  ).then(ledger => ledger.default)\n}\n\nfunction getTrezorModule () {\n  return import(\n    /* webpackChunkName: \"trezor\" */ \"@cosmic-plus/trezor-wallet\"\n  ).then(trezor => {\n    trezor.register(\"https://cosmic.link\", \"mister.ticot@cosmic.plus\")\n    return trezor.default\n  })\n}\n","\"use strict\"\n/**\n * Wallets & signing methods that accept arbitrary transactions as input.\n */\nconst wallets = exports\n\n/* Data */\nwallets.LedgerWallet = {\n  name: \"Ledger Wallet\",\n  protocol: \"ledgerwallet\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.TrezorWallet = {\n  name: \"Trezor Wallet\",\n  protocol: \"trezorwallet\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarAuthenticator = {\n  name: \"Stellar Authenticator\",\n  protocol: \"cosmiclink\",\n  url: \"https://stellar-authenticator.org/\"\n}\n\nwallets.Lobstr = {\n  name: \"Lobstr Web (partial support)\",\n  protocol: \"sep0007\",\n  url: \"https://lobstr.co/?tx=\",\n  target: \"new\"\n}\n\nwallets.StellarTerm = {\n  name: \"StellarTerm (partial support)\",\n  protocol: \"sep0007\",\n  url: \"https://stellarterm.com/?tx=\",\n  target: \"new\"\n}\n\nwallets.Sep7Wallet = {\n  name: \"Sep-0007 Wallet\",\n  protocol: \"sep0007\",\n  url: \"web+stellar:\",\n  target: \"external\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarLaboratory = {\n  name: \"Stellar Laboratory (Sign)\",\n  protocol: \"stellarlab\",\n  url: \"https://stellar.org/laboratory/#txsigner?xdr=\",\n  target: \"new\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarLaboratoryView = {\n  name: \"Stellar Laboratory (View)\",\n  protocol: \"stellarlab\",\n  url:\n    \"https://stellar.org/laboratory/#xdr-viewer?type=TransactionEnvelope&input=\",\n  target: \"new\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.CopyPasteXdr = {\n  name: \"Copy/Paste XDR\",\n  protocol: \"copy\",\n  needSource: true,\n  needNetwork: true\n}\n","\"use strict\"\n/**\n * Tx Description\n *\n * Input: cosmicLink\n * */\n\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass TxDescription extends View {\n  constructor (params) {\n    super(`\n<div class=\"TxDescription\">%description</div>\n    `)\n\n    this.$import(params, [\"cosmicLink\"])\n  }\n}\n\n/* Computations */\nconst proto = TxDescription.prototype\n\nproto.$define(\"description\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink && this.cosmicLink.tdesc.operations) {\n    return this.cosmicLink.htmlDescription\n  } else {\n    return \"No transaction\"\n  }\n})\n\n/* Export */\nmodule.exports = TxDescription\n","\"use strict\"\n/**\n * Handler Form\n *\n * *Inputs:* authenticators, signingFlow*\n *\n * *: Can be edited by user input.\n **/\nconst { View } = require(\"@kisbox/browser\")\n\nconst AccountInput = require(\"./account-input\")\nconst HandlerSelector = require(\"./handler-selector\")\nconst NetworkSelector = require(\"./network-selector\")\n\n/* Definition */\n\nclass HandlerForm extends View {\n  constructor (signingFlow) {\n    super(`\n<form class=\"HandlerForm\" onsubmit=\"return false\">\n  %handlerSelector\n  <div hidden=%not:needSource>%accountInput</div>\n  <div hidden=%not:needNetwork>%networkSelector</div>\n</form>\n    `)\n\n    // Inputs\n    this.$import(signingFlow, [\"needSource\", \"needNetwork\"])\n\n    // Components\n    this.handlerSelector = new HandlerSelector(signingFlow)\n    this.accountInput = new AccountInput(signingFlow)\n    this.networkSelector = new NetworkSelector(signingFlow)\n  }\n}\n\n/* Export */\nmodule.exports = HandlerForm\n","\"use strict\"\n/**\n * Account Input Box\n * */\n\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst {\n  html: { copyContent }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass AccountInput extends View {\n  constructor (params) {\n    super(`\n<input type=\"text\" value=%filter:accountId %onclick %readonly %placeholder\n  disabled=%notAvailable:accountId autocomplete=\"stellar-address\">\n      `)\n\n    this.accountId = \"\"\n    this.$import(params, [\"cosmicLink\", \"authenticator\"])\n    this.$link(params, [\"accountId\"])\n  }\n\n  onclick () {\n    if (this.readonly) {\n      copyContent(this.domNode)\n    }\n  }\n}\n\n/* Computations */\nconst proto = AccountInput.prototype\n\nproto.$define(\"readonly\", [\"cosmicLink\", \"authenticator\"], function () {\n  return !!(\n    this.cosmicLink && this.cosmicLink.tdesc.source\n    || this.authenticator.getAddress\n  )\n})\n\nproto.$customDefine(\"placeholder\", [\"accountId\"], function () {\n  switch (type(this.accountId)) {\n  case \"promise\":\n    return \"Connecting...\"\n  case \"error\":\n    return this.accountId\n  default:\n    return \"Federated Address or Public Key\"\n  }\n})\n\n/* Helpers */\nconst helpers = AccountInput.helpers\n\nhelpers.filter = function (accountId) {\n  if (type(accountId) === \"string\") {\n    return accountId\n  } else {\n    return \"\"\n  }\n}\n\n/* Export */\nmodule.exports = AccountInput\n","\"use strict\"\n/**\n * Handler Selector\n *\n * * Import: authenticators\n * * Link: authenticatorId\n *\n * */\nconst { View, html } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass HandlerSelector extends View {\n  constructor (params) {\n    super(`\n<select class=\"HandlerSelector\" value=%authenticatorId>\n  %toOption:...authenticators\n</select>\n    `)\n\n    this.$import(params, [\"authenticators\"])\n    this.$link(params, [\"authenticatorId\"])\n  }\n}\n\n/* Helpers */\nconst helpers = HandlerSelector.helpers\n\nhelpers.toOption = function (handler) {\n  return html(\"option\", { value: handler.id }, handler.name)\n}\n\n/* Export */\nmodule.exports = HandlerSelector\n","\"use strict\"\n/**\n * Network Selector\n * */\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass NetworkSelector extends View {\n  constructor (params) {\n    super(`\n<div class=\"NetworkSelector\">\n\n  <div>\n    <input type=\"radio\" $group=\"networkSelector\" value=\"public\"\n      disabled=%lockNetwork $label=\"Public\">\n    <input type=\"radio\" $group=\"networkSelector\" value=\"test\"\n      disabled=%lockNetwork $label=\"Test\">\n    <input type=\"radio\" $group=\"networkSelector\" value=\"custom\"\n      disabled=%lockNetwork $label=\"Custom\">\n  </div>\n\n  <div hidden=%not:isCustom>\n    <input type=\"text\" value=%network disabled=%lockNetwork\n      placeholder=\"Network Passphrase or Name\">\n    <input type=\"text\" value=%horizon\n      placeholder=\"Horizon URL\">\n  </div>\n  \n</div>\n    `)\n\n    this.$import(params, [\"lockNetwork\"])\n    this.$link(params, [\"network\", \"horizon\"])\n  }\n}\n\n/* Computations */\nconst proto = NetworkSelector.prototype\n\nproto.$define(\"networkSelector\", [\"network\"], function () {\n  if (this.network === \"public\" || this.network === \"test\") {\n    return this.network\n  } else {\n    return \"custom\"\n  }\n})\n\nproto.$define(\"isCustom\", [\"networkSelector\"], function () {\n  return this.networkSelector === \"custom\"\n})\n\n/* Events */\nproto.$on(\"networkSelector\", function () {\n  if (!this.isCustom) {\n    this.network = this.networkSelector\n  }\n})\n\n/* Export */\nmodule.exports = NetworkSelector\n","\"use strict\"\n/**\n * Redirection Form\n * */\nconst { View, html } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst QrCodeSwitcher = require(\"./qr-code-switcher\")\nconst RedirectionButton = require(\"./redirection-button\")\nconst TxResultView = require(\"./tx-result-view\")\nconst XdrArea = require(\"./xdr-area\")\n\n/* Definition */\n\nclass RedirectionForm extends View {\n  constructor (signingFlow) {\n    super(`\n<form class=\"RedirectionForm\" hidden=%not:showButton>\n  %redirectionButton\n  <div $ref=\"messageBox\"></div>\n  %txResultView\n</form>\n\n\n<form hidden=%not:showTextarea>\n  %xdrArea\n</form>\n\n<div hidden=%not:showQrCodeSwitcher>\n  %qrCodeSwitcher\n</div>\n    `)\n\n    this.$import(signingFlow, [\"cosmicLink\", \"authenticator\", \"result\"])\n\n    // Components\n    this.redirectionButton = new RedirectionButton(signingFlow)\n    this.xdrArea = new XdrArea(signingFlow)\n    this.qrCodeSwitcher = new QrCodeSwitcher(signingFlow)\n  }\n}\n\n/* Computations */\nconst proto = RedirectionForm.prototype\n\nproto.$define(\"showButton\", [\"authenticator\"], function () {\n  return this.authenticator.requestToUri || this.authenticator.signRequest\n})\n\nproto.$define(\"showTextarea\", [\"authenticator\"], function () {\n  return this.authenticator.requestToXdr\n})\n\nproto.$define(\n  \"showQrCodeSwitcher\",\n  [\"cosmicLink\", \"authenticator\"],\n  function () {\n    return (\n      this.cosmicLink\n      && (this.authenticator.requestToUri || this.authenticator.requestToXdr)\n    )\n  }\n)\n\nproto.$customDefine(\"txResultView\", [\"result\"], function () {\n  if (type(this.result) === \"error\") {\n    return html(\"span\", { className: \"error\" }, this.result.message)\n  } else {\n    return new TxResultView(this.result)\n  }\n})\n\n/* Export */\nmodule.exports = RedirectionForm\n","\"use strict\"\n/**\n * QR Code UI\n */\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst QrCodeCanvas = require(\"./qr-code-canvas\")\n\n/* Definition */\n\nclass QrCodeSwitcher extends View {\n  constructor (params) {\n    super(`\n<form id=\"qrForm\">\n  <input type=\"button\" value=\"QR Code\" onclick=%switch %disabled>\n  <div %hidden>%canvas</div>\n</form>\n  `)\n\n    this.$import(params, [\"uri\", \"xdr\"])\n    this.$link(params, [\"showQrCode\"])\n\n    this.canvas = new QrCodeCanvas(this)\n  }\n\n  switch () {\n    this.showQrCode = !this.showQrCode\n  }\n}\n\n/* Computations */\nconst proto = QrCodeSwitcher.prototype\n\nproto.$define(\"target\", [\"uri\", \"xdr\"], function () {\n  return this.uri || this.xdr\n})\n\nproto.$customDefine(\"disabled\", [\"target\"], function () {\n  return type(this.target) === \"error\"\n})\n\nproto.$define(\"hidden\", [\"showQrCode\", \"disabled\"], function () {\n  return !this.showQrCode || this.disabled\n})\n\n/* Exports */\nmodule.exports = QrCodeSwitcher\n","\"use strict\"\n/**\n * QR Code Canvas\n */\nconst QrCode = require(\"qrcode\")\n\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\nconst {\n  promise: { timeout }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass QrCodeCanvas extends View {\n  constructor (params) {\n    super(`\n<div class=\"QrCodeCanvas\">\n  <span class=\"cosmiclib_loadingAnim\" hidden=%notPending:target></span>\n  <canvas $ref=\"canvas\" title=%target hidden=%not:target></canvas>\n</div>\n`)\n\n    this.$import(params, [\"target\"])\n  }\n}\n\n/* Computations */\nconst proto = QrCodeCanvas.prototype\n\nproto.$on(\"target\", function () {\n  if (type(this.target) === \"string\") {\n    setQr(this.$ref.canvas, this.target)\n  } else if (this.$ref.canvas) {\n    clearQr(this.$ref.canvas)\n  }\n})\n\n/* Helpers */\n\nfunction setQr (canvas, target) {\n  // Make heavy computation async.\n  timeout(1).then(() => {\n    const scale = Math.max(3, 6 - Math.floor(Math.sqrt(target) / 10))\n    QrCode.toCanvas(canvas, target, { margin: 0, scale })\n  })\n}\n\nfunction clearQr (canvas) {\n  const context = canvas.getContext(\"2d\")\n  context.clearRect(0, 0, canvas.width, canvas.height)\n}\n\n/* Exports */\nmodule.exports = QrCodeCanvas\n","\"use strict\"\n/**\n * Redirection Button\n * */\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\n/* Definition */\n\nclass RedirectionButton extends View {\n  constructor (params) {\n    super(`\n<div class=\"RedirectionButton\">\n  <input type=\"button\" %value %onclick %disabled>\n  <input type=\"checkbox\" checked=%automaticRedirection\n    $label=\"Automatic redirection\">\n</div>\n    `)\n\n    this.$import(params, [\"authenticator\", \"resolved\", \"action\", \"result\"])\n    this.$link(params, [\"automaticRedirection\"])\n  }\n\n  onclick () {\n    this.action()\n  }\n}\n\n/* Computations */\nconst proto = RedirectionButton.prototype\n\nproto.$customDefine(\n  \"value\",\n  [\"authenticator\", \"resolved\", \"result\"],\n  function () {\n    if (type(this.signed) === \"promise\") {\n      return \"Signing...\"\n    } else if (type(this.result) === \"promise\") {\n      return \"Sending...\"\n    } else if (this.result) {\n      return \"Done\"\n    } else if (type(this.resolved) === \"error\") {\n      return this.resolved\n    } else if (type(this.resolved) === \"promise\") {\n      return \"...\"\n    } else if (!this.resolved) {\n      return \"No transaction\"\n    } else if (this.authenticator.signRequest) {\n      return `Sign with ${this.authenticator.name}`\n    } else if (this.authenticator.requestToUri) {\n      return `Go to ${this.authenticator.name}`\n    }\n  }\n)\n\nproto.$customDefine(\"disabled\", [\"action\", \"result\"], function () {\n  return (\n    !this.action\n    || type(this.action) === \"promise\"\n    || type(this.action) === \"error\"\n    || this.result\n  )\n})\n\n/* Export */\nmodule.exports = RedirectionButton\n","\"use strict\"\n/**\n * TxResultView - Displays TxResult instances\n */\nconst TxResult = require(\"@cosmic-plus/tx-result\")\nconst { View, html } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass TxResultView extends View {\n  static async forCosmicLink (cosmicLink) {\n    const result = await TxResult.forCosmicLink(cosmicLink)\n    return new TxResultView(result)\n  }\n\n  static fromResponse (response) {\n    const result = new TxResult(response)\n    return new TxResultView(result)\n  }\n\n  constructor (txResult) {\n    super(`\n<div class=\"TxResultView cosmiclink_description\">\n\n  <span class=%state>%title</span>\n\n  <ul class=\"error\" hidden=%validated>\n    %{toLi:...errors}\n  </ul>\n\n</div>\n    `)\n\n    this.$import(txResult, [\"title\", \"errors\", \"validated\"])\n    this.state = this.validated ? \"info\" : \"error\"\n  }\n}\n\n/* Helpers */\nTxResultView.helpers.toLi = any => html(\"li\", [any])\n\n/* Exports */\nmodule.exports = TxResultView\n","\"use strict\"\n/**\n * XdrArea\n **/\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst {\n  html: { copyContent }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass XdrArea extends View {\n  constructor (params) {\n    super(`\n<textarea rows=3 readonly %value %onclick %placeholder disabled=%not:xdr>\n</textarea>\n    `)\n\n    this.$import(params, [\"xdr\"])\n  }\n\n  onclick () {\n    copyContent(this.domNode)\n  }\n}\n\n/* Computations */\nconst proto = XdrArea.prototype\n\nproto.$customDefine(\"placeholder\", [\"xdr\"], function () {\n  if (!this.xdr) {\n    return \"No transaction\"\n  } else if (type(this.xdr) === \"promise\") {\n    return \"Pending...\"\n  } else {\n    return this.xdr\n  }\n})\n\nproto.$customDefine(\"value\", [\"xdr\"], function () {\n  if (type(this.xdr) === \"string\" || type(this.xdr) === \"error\") {\n    return this.xdr\n  } else {\n    return \"\"\n  }\n})\n\n/* Export */\nmodule.exports = XdrArea\n","\"use strict\"\n/**\n * App Full\n *\n * inouts: query, selectedTabId, antiTamperHash, signingFlow\n * outputs: route\n *\n * */\nconst { sep7Utils } = require(\"cosmic-lib\")\nconst { View, html } = require(\"@kisbox/browser\")\n\nconst AppState = require(\"./app.state\")\nconst Navigation = require(\"./lib/navigation\")\n\nconst AntiTamper = require(\"./view/anti-tamper\")\nconst SigningWidget = require(\"./view/signing-widget\")\n\nconst {\n  html: { copyContent }\n} = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass AppFull extends View {\n  constructor (params) {\n    super(`\n<div class=\"CosmicLinkApp\">\n  <header onclick=%copyHeader>\n    <h1>%location</h1><span>%query</span>\n  </header>\n\n  <img id=\"logo\" src=\"icons/512x512.png\" alt=\"\">\n\n  <main>\n    %navigation\n    <hr>\n    %selectedTabView\n  </main>\n\n  <footer>\n    <a id=\"registerSep7Handler\" onclick=%registerSep7Handler\n        hidden=%not:isSep7Supported>\n      Register as web+stellar links handler (SEP-0007)\n    </a>\n  </footer>\n\n  %antiTamper\n</div>\n`)\n    this.selectedTabId = \"sign\"\n    this.state = new AppState(params)\n    this.$import(this.state, [\"query\"])\n    this.$import(params, [\"selectedTabId\"])\n\n    // Header\n    if (location.origin === \"null\") {\n      this.location = location.pathname\n    } else {\n      this.location = `${location.origin}${location.pathname}`\n    }\n\n    // Navigation\n    this.navigation = new Navigation([\n      {\n        id: \"sign\",\n        title: \"Sign\",\n        view: new SigningWidget(this.state)\n      },\n      {\n        id: \"about\",\n        title: \"About\",\n        view: html.grab(\"#about\")\n      }\n    ])\n\n    this.navigation.$link(this, [\"selectedTabView\", \"selectedTabId\"])\n    if (!this.selectedTabView) {\n      this.selectedTabId = \"sign\"\n    }\n\n    // SEP-0007\n    this.isSep7Supported = sep7Utils.isWebHandlerSupported()\n\n    // Robot anti-tamper\n    this.antiTamper = new AntiTamper(params)\n  }\n\n  copyHeader () {\n    copyContent(this.$ref(\":scope > header\"))\n  }\n\n  registerSep7Handler () {\n    const currentPageUrl = location.href.split(/[?#]/, 1)[0]\n    sep7Utils.registerWebHandler(currentPageUrl, \"Cosmic.link\")\n  }\n}\n\n/* Computations */\nconst proto = AppFull.prototype\n\nproto.$define(\"route\", [\"query\", \"selectedTabId\"], function () {\n  const tab = this.selectedTabId\n  const query = tab === \"sign\" ? this.query || \"\" : \"\"\n  const hash = tab === \"sign\" ? \"\" : `#${this.selectedTabId}`\n  return `${query}${hash}`\n})\n\n/* Export */\nmodule.exports = AppFull\n","\"use strict\"\n/**\n * Navigation\n * */\nconst { View, html } = require(\"@kisbox/browser\")\nconst { LiveArray } = require(\"@kisbox/model\")\n\n/* Definition */\n\nclass Navigation extends View {\n  constructor (tabs = []) {\n    super(`\n<nav>%toNavigationLink:...tabs</nav>\n    `)\n\n    this.tabs = LiveArray.from(tabs)\n  }\n}\n\n/* Helpers */\nconst helpers = Navigation.helpers\n\nhelpers.toNavigationLink = function (tab) {\n  const link = html(\"a\", null, tab.title)\n  link.onclick = () => this.selectedTabId = tab.id\n  this.$on(\"selectedTabId\", selectedTabId => {\n    link.className = selectedTabId === tab.id ? \"selected\" : \"\"\n  })\n  return link\n}\n\n/* Computations */\nconst proto = Navigation.prototype\n\nproto.$define(\"selectedTabView\", [\"selectedTabId\"], function () {\n  const tab = this.tabs.find(t => t.id === this.selectedTabId)\n  if (tab) return tab.view\n})\n\n/* Export */\nmodule.exports = Navigation\n","\"use strict\"\n/**\n * Anti-tamper robot.\n */\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass AntiTamper extends View {\n  constructor (params = {}) {\n    super(`<img class=\"AntiTamper\" %src>`)\n    this.$import(params, [\"baseUrl\", \"set\", \"antiTamperHash\"])\n  }\n}\n\n/* Defaults */\nconst proto = AntiTamper.prototype\nproto.baseUrl = \"https://robohash.org\"\nproto.set = \"set1\"\n\n/* Computations */\n\nproto.$define(\"src\", [\"baseUrl\", \"set\", \"antiTamperHash\"], function () {\n  return `${this.baseUrl}/${this.antiTamperHash}?set=${this.set}`\n})\n\n/* Utilities */\n\nAntiTamper.makeHash = function (size = 32) {\n  const alphabet =\n    \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\n  let hash = \"\"\n  for (let i = 0; i < size; i++) {\n    const random = Math.floor(Math.random() * alphabet.length)\n    hash += alphabet.charAt(random)\n  }\n\n  return hash\n}\n\n/* Export */\nmodule.exports = AntiTamper\n"],"sourceRoot":""}