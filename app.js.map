{"version":3,"sources":["webpack:///./src/view/tx-result-view.js","webpack:///./src/tamper.js","webpack:///./src/app.js","webpack:///./src/app-interface.js","webpack:///./src/helpers.js","webpack:///./src/app-widget.js","webpack:///./src/signing-ui.js"],"names":["Gui","require","html","TxResult","TxResultView","txResult","Object","assign","state","validated","cosmicLink","forCosmicLink","result","response","obj","msg","create","module","exports","tamper","src","localStorage","myHash","alphabet","hash","i","charAt","Math","floor","random","length","contextIsWidget","signingUI","signingPage","cosmicLib","dom","Page","the","copyContent","add","sign","onSelect","history","replaceState","location","pathname","search","refresh","init","origin","websiteUrl","textContent","query","header","onclick","about","sep7Utils","isWebHandlerSupported","registerSep7Handler","registerWebHandler","href","split","show","current","select","helpers","enableButton","button","value","disabled","disableButton","readWriteBox","box","placeholder","readOnly","undefined","style","cursor","readOnlyBox","disableBox","display","element","type","message","classname","messageNode","rewrite","showIf","flag","hide","switchPage","from","to","append","body","main","document","activeElement","prevNode","grab","destroy","copiedNode","parentNode","insertBefore","setTimeout","hidden","load","authenticators","parseQuery","params","substr","forEach","keyval","key","val","decodeURIComponent","async","referrer","join","csp","content","replace","handler","byId","authenticator","console","error","qrcode","qrCode","log","keys","loading","css","push","Promise","all","then","CosmicLink","env","QrCode","timeout","cosmiclink_description","nodes","entry","name","redirect","redirectionCheckbox","checked","qrCodeUI","enable","id","passphrase","resolve","networkPassphrase","config","setupNetwork","tdesc","authenticatorUI","redirectionUI","transactionUI","needSource","accountId","needNetwork","customNetwork","horizon","network","source","saveTransaction","transaction","handle","status","getAccountId","accountMsgbox","accountUI","disable","networkUI","accountDiv","accountIdBox","networkDiv","customNetworkSetup","networkSelector","publicNetwork","scrollLeft","testNetwork","onscroll","customPassphrase","customHorizon","lock","selector","onchange","onExit","textOverflow","networkName","redirection","redirectionForm","textarea","textareaForm","qrForm","redirectionButton","xdrBox","loadingAnim","url","buttonText","click","clear","action","isEmbedded","target","open","window","parent","postMessage","redirectionMsgbox","sendTransaction","scrollTo","scrollHeight","back","canvas","title","scale","max","sqrt","toCanvas","margin","QR","qrButton","className"],"mappings":"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","file":"app.js","sourcesContent":["\"use strict\"\n/**\n * TxResultView - Displays TxResult instances\n */\nconst Gui = require(\"@cosmic-plus/domutils/es5/gui\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\n\nconst TxResult = require(\"@cosmic-plus/tx-result\")\n\n/* Definition */\nclass TxResultView extends Gui {\n  static async forCosmicLink (cosmicLink) {\n    const result = await TxResult.forCosmicLink(cosmicLink)\n    return new TxResultView(result)\n  }\n\n  static fromResponse (response) {\n    const result = new TxResult(response)\n    return new TxResultView(result)\n  }\n\n  constructor (txResult) {\n    super(`\n<div class=\"cosmiclink_description\">\n\n  <span class=%state>%title</span>\n\n  <ul class=\"error\" hidden=%validated>\n    %{toLi:errors...}\n  </ul>\n\n</div>\n    `)\n\n    Object.assign(this, txResult)\n    this.state = this.validated ? \"info\" : \"error\"\n  }\n\n  has (obj) {\n    return !!obj\n  }\n  toLi (msg) {\n    return html.create(\"li\", null, msg)\n  }\n}\n\n/* Exports */\nmodule.exports = TxResultView\n","\"use strict\"\n/**\n * Robot tamper.\n */\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\n\nfunction myHash () {\n  if (localStorage.myHash) return localStorage.myHash\n\n  var alphabet =\n    \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  var size = 32\n\n  var hash = \"\"\n  for (var i = 0; i < size; i++) {\n    hash += alphabet.charAt(Math.floor(Math.random() * alphabet.length))\n  }\n\n  localStorage.myHash = hash\n  return hash\n}\n\ndom.tamper.src = \"https://robohash.org/\" + myHash()\n","\"use strict\"\n/**\n * Cosmic.Link Graphical User Interface\n */\nconst the = require(\"./shared\")\n\nif (the.contextIsWidget) {\n  require(\"./app-widget\")\n} else {\n  require(\"./app-interface\")\n}\n","\"use strict\"\n/**\n * App interface initialization.\n */\nconst cosmicLib = require(\"cosmic-lib\")\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\nconst Page = require(\"@cosmic-plus/domutils/es5/page\")\n\nconst the = require(\"./shared\")\nconst { copyContent } = require(\"./helpers\")\n\n/* Functions */\n\nfunction initInterface () {\n  // Signing interface\n  const signingUI = require(\"./signing-ui\")\n  const signingPage = Page.add(\"Sign\", dom.sign)\n  signingPage.onSelect = function () {\n    history.replaceState(\"\", null, location.pathname + location.search)\n    signingUI.refresh()\n  }\n  signingUI.init()\n\n  // Non-widget components\n  if (!the.contextIsWidget) {\n    initNonWidgetInterface()\n  }\n\n  // Default page\n  if (Page.current === signingPage) signingPage.onSelect()\n  else if (!Page.current) Page.select(\"#sign\")\n}\n\nfunction initNonWidgetInterface () {\n  // Header\n  if (location.origin === \"null\") {\n    dom.websiteUrl.textContent = location.pathname\n  } else {\n    dom.websiteUrl.textContent = location.origin + location.pathname\n  }\n  dom.query.textContent = location.search\n  dom.header.onclick = () => copyContent(dom.header)\n\n  // About page\n  Page.add(\"About\", dom.about)\n\n  // SEP-0007\n  if (cosmicLib.sep7Utils.isWebHandlerSupported()) {\n    dom.registerSep7Handler.onclick = () => {\n      cosmicLib.sep7Utils.registerWebHandler(\n        location.href.split(/[?#]/, 1)[0],\n        \"Cosmic.link\"\n      )\n    }\n  } else {\n    // (hack) Keep the collapsed bottom margin.\n    dom.registerSep7Handler.textContent = \"\"\n  }\n  html.show(dom.registerSep7Handler)\n\n  // Robot tamper\n  require(\"./tamper\")\n}\n\n/* Init */\ninitInterface()\n","\"use strict\"\n/**\n * Generic helpers\n */\nconst helpers = exports\n\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\n\n/*******************************************************************************\n * Form Elements Helpers\n */\n\nhelpers.enableButton = function (button, value, onclick) {\n  if (typeof value === \"string\") button.value = value\n  button.onclick = onclick\n  button.disabled = false\n}\n\nhelpers.disableButton = function (button, value) {\n  if (typeof value === \"string\") button.value = value\n  button.disabled = true\n}\n\nhelpers.readWriteBox = function (box, placeholder, value) {\n  if (typeof value === \"string\") box.value = value\n  if (typeof placeholder === \"string\") box.placeholder = placeholder\n  box.disabled = false\n  box.readOnly = false\n  box.onclick = undefined\n  box.style.cursor = \"initial\"\n}\n\nhelpers.readOnlyBox = function (box, value) {\n  if (typeof value === \"string\") box.value = value\n  box.disabled = false\n  box.readOnly = true\n  box.onclick = () => helpers.copyContent(box)\n  box.style.cursor = \"pointer\"\n}\n\nhelpers.disableBox = function (box, placeholder) {\n  helpers.readWriteBox(box, placeholder, \"\")\n  box.disabled = true\n}\n\n/*******************************************************************************\n * Other Helpers\n */\n\nhelpers.display = function (element, type = \"\", message = \"\") {\n  const classname = type ? \".\" + type : null\n  const messageNode = classname\n    ? html.create(\"span\", classname, message)\n    : message\n  html.rewrite(element, html.create(\"span\", classname, messageNode))\n}\n\nhelpers.showIf = function (flag, element) {\n  flag ? html.show(element) : html.hide(element)\n}\n\nhelpers.switchPage = function (from, to) {\n  html.append(dom.body, from)\n  html.append(dom.main, to)\n}\n\nhelpers.copyContent = function (element) {\n  if (html.copyContent(element) && document.activeElement.value) {\n    const prevNode = html.grab(\"#copied\")\n    if (prevNode) html.destroy(prevNode)\n    const copiedNode = html.create(\"span\", \"#copied\", \"Copied\")\n    element.parentNode.insertBefore(copiedNode, element)\n    setTimeout(() => {\n      copiedNode.hidden = true\n    }, 3000)\n  }\n}\n","\"use strict\"\n/**\n * Widget interface initialization.\n */\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\nconst load = require(\"@cosmic-plus/domutils/es5/load\")\n\nconst authenticators = require(\"./authenticators\")\nconst the = require(\"./shared\")\n\n/* Functions */\n\nasync function initWidget () {\n  const referrer = document.referrer.split(\"/\", 3).join(\"/\")\n  const hash = location.hash\n  const params = parseQuery(hash)\n\n  // Strengthen Content-Security-Policy.\n  const csp = html.grab(\"meta[http-equiv='Content-Security-Policy']\")\n  csp.content = csp.content.replace(\n    \"style-src *  ;\",\n    `\n    style-src 'self'\n      'sha256-UpnKee22eAiBMULu1lvaV7de7xOzTjdN7K/WZDBil10='\n      ${referrer};\n  `\n  )\n\n  // Interface control.\n  if (params.handler) {\n    const handler = authenticators.byId[params.handler]\n    if (handler) {\n      the.authenticator = handler\n    } else {\n      console.error(`Unknown handler: ${params.handler}`)\n    }\n  }\n  if (params.qrcode) {\n    the.qrCode = params.qrcode !== \"false\"\n  }\n  // eslint-disable-next-line no-console\n  console.log(\"Valid handlers: \", Object.keys(authenticators.byId))\n\n  // Style control (asynchronous).\n  let loading = []\n  if (params.css) {\n    loading.push(load.css(`${referrer}/${params.css}`).catch(console.error))\n  } else {\n    loading.push(load.css(\"widget.css\").catch(console.error))\n    if (params[\"css+\"]) {\n      loading.push(\n        load.css(`${referrer}/${params[\"css+\"]}`).catch(console.error)\n      )\n    }\n  }\n  Promise.all(loading).then(() => html.show(document.body))\n\n  // Interface initialization.\n  require(\"./app-interface\")\n\n  // Consistent reload (app-interface mess with location.hash)\n  location.hash = hash\n}\n\n/* Helpers */\nfunction parseQuery (query) {\n  const params = {}\n\n  query\n    .substr(1)\n    .split(\"&\")\n    .forEach(keyval => {\n      const key = keyval.split(\"=\", 1)[0]\n      const val = keyval.substr(key.length + 1)\n      params[key] = decodeURIComponent(val)\n    })\n\n  return params\n}\n\n/* Initialization */\ninitWidget()\n","\"use strict\"\nconst main = exports\n\nconst cosmicLib = require(\"cosmic-lib\")\nconst CosmicLink = cosmicLib.CosmicLink\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst env = require(\"@cosmic-plus/jsutils/es5/env\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\nconst QrCode = require(\"qrcode\")\nconst { timeout } = require(\"@cosmic-plus/jsutils/es5/misc\")\n\nconst TxResultView = require(\"./view/tx-result-view\")\n\nconst authenticators = require(\"./authenticators\")\nconst the = require(\"./shared\")\n\nconst {\n  enableButton,\n  disableButton,\n  readWriteBox,\n  readOnlyBox,\n  disableBox,\n  display,\n  showIf\n} = require(\"./helpers\")\n\n// Run once page is fully loaded\nmain.init = function () {\n  // Step 1: Transaction\n  if (!the.query) html.rewrite(dom.cosmiclink_description, \"No transaction\")\n\n  // Step 2: Authenticator\n  authenticators.nodes.forEach(entry => html.append(dom.authenticators, entry))\n  dom.authenticators.value = the.authenticator.name\n\n  // Step 3: Signing\n  if (the.redirect) dom.redirectionCheckbox.checked = true\n  if (the.qrCode) qrCodeUI.enable()\n\n  // CosmicLib network setup\n  for (let key in localStorage) {\n    if (key.substr(0, 8) === \"network:\") {\n      const id = key.substr(8)\n      const passphrase = cosmicLib.resolve.networkPassphrase(id)\n      cosmicLib.config.setupNetwork(id, localStorage[key], passphrase)\n    }\n  }\n}\n\nmain.refresh = async function () {\n  if (the.query) the.cosmicLink = new CosmicLink(the.query)\n  else the.cosmicLink = { tdesc: {} }\n  authenticatorUI.init()\n  redirectionUI.init()\n  if (the.cosmicLink.query) transactionUI.refresh()\n}\n\n/*******************************************************************************\n * Step 1: Transaction UI\n */\n\nconst transactionUI = {}\n\ntransactionUI.refresh = function () {\n  if (the.authenticator.needSource && !the.accountId) {\n    if (!the.authenticator.getAccountId) {\n      redirectionUI.error(\"Please set a source account\")\n    }\n    return\n  }\n  if (the.authenticator.needNetwork) {\n    if (dom.customNetwork.checked && (!the.horizon || !the.network)) {\n      redirectionUI.error(\"Please fill custom network fields\")\n      return\n    }\n  }\n\n  cosmicLib.config.source = the.accountId\n  cosmicLib.config.network = the.network\n\n  const saveTransaction = the.transaction = the.authenticator.handle(\n    the.cosmicLink\n  )\n\n  the.transaction\n    .then(function (value) {\n      if (the.transaction === saveTransaction) redirectionUI.refresh(value)\n    })\n    .catch(function () {\n      if (the.transaction === saveTransaction)\n        redirectionUI.error(the.cosmicLink.status)\n    })\n}\n\n/*******************************************************************************\n * Step 2: Authenticator UI\n */\n\nconst authenticatorUI = {}\n\nauthenticatorUI.init = function () {\n  display(dom.accountMsgbox, \"\")\n  the.authenticator = authenticators[dom.authenticators.value]\n  localStorage.authenticator = the.authenticator.name\n\n  if (the.authenticator.needSource) accountUI.init()\n  else accountUI.disable()\n  if (the.authenticator.needNetwork) networkUI.init()\n  else networkUI.disable()\n\n  if (the.authenticator.refresh) the.authenticator.refresh(main.refresh)\n}\n\n/**\n * AccountID box UI\n */\nconst accountUI = {}\n\naccountUI.disable = function () {\n  html.hide(dom.accountDiv)\n  the.accountId = undefined\n}\n\naccountUI.init = async function () {\n  html.show(dom.accountDiv)\n\n  if (!the.authenticator.getAccountId) {\n    if (the.cosmicLink.tdesc.source) {\n      if (the.cosmicLink.tdesc.source.error) {\n        disableBox(dom.accountIdBox, the.cosmicLink.tdesc.source.error.message)\n      } else {\n        the.accountId = true\n        readOnlyBox(dom.accountIdBox, the.cosmicLink.tdesc.source)\n      }\n    } else {\n      the.accountId = localStorage.accountId\n      readWriteBox(\n        dom.accountIdBox,\n        \"Federated Address or Public Key\",\n        the.accountId\n      )\n    }\n  } else {\n    the.accountId = undefined\n    disableBox(dom.accountIdBox, \"Connecting...\")\n\n    const authenticator = the.authenticator\n    try {\n      const accountId = await the.authenticator.getAccountId()\n      if (the.authenticator !== authenticator) return\n      the.accountId = accountId\n      readOnlyBox(dom.accountIdBox, accountId)\n      transactionUI.refresh()\n    } catch (error) {\n      if (the.authenticator !== authenticator) return\n      dom.accountIdBox.placeholder = \"Error\"\n      display(dom.accountMsgbox, \"error\", error.message + \".\")\n      console.error(error)\n    }\n  }\n}\n\n/**\n * Network selection UI\n */\nconst networkUI = {}\n\nnetworkUI.disable = function () {\n  html.hide(dom.networkDiv)\n  the.network = \"public\"\n  the.horizon = undefined\n}\n\nnetworkUI.init = function () {\n  html.show(dom.networkDiv)\n  html.hide(dom.customNetworkSetup)\n  the.network = the.cosmicLink.tdesc.network || localStorage.networkSelector\n  the.horizon = undefined\n\n  switch (the.network) {\n  case undefined:\n  case \"public\":\n    dom.publicNetwork.checked = true\n    dom.networkSelector.scrollLeft = 0\n    break\n  case \"test\":\n    dom.testNetwork.checked = true\n    break\n  default:\n    if (dom.networkSelector.onscroll) dom.networkSelector.onscroll()\n    // Doesn't works when called synchronously.\n    timeout(1).then(() => dom.networkSelector.scrollLeft = 999)\n    dom.customNetwork.checked = true\n\n    html.show(dom.customNetworkSetup)\n    if (!the.network) the.network = localStorage.customPassphrase\n    the.horizon =\n        cosmicLib.resolve.horizon(the.network || \"\")\n        || the.cosmicLink.tdesc.horizon\n    dom.customPassphrase.value = the.network || \"\"\n    dom.customHorizon.value = the.horizon || \"\"\n  }\n\n  if (the.cosmicLink.tdesc.network) networkUI.lock()\n}\n\nnetworkUI.lock = function () {\n  readOnlyBox(dom.customPassphrase)\n  dom.publicNetwork.disabled = true\n  dom.testNetwork.disabled = true\n  dom.customNetwork.disabled = true\n}\n\nnetworkUI.switch = function (selector) {\n  localStorage.networkSelector = selector\n  main.refresh()\n}\n\n/**\n * HTML Elements Events\n */\n\ndom.authenticators.onchange = function () {\n  if (the.authenticator && the.authenticator.onExit) the.authenticator.onExit()\n  the.redirect = localStorage.redirect = false\n  dom.redirectionCheckbox.checked = false\n  main.refresh()\n}\n\ndom.accountIdBox.onchange = function () {\n  the.accountId = localStorage.accountId = dom.accountIdBox.value\n  main.refresh()\n}\n\ndom.networkSelector.onscroll = function () {\n  dom.networkSelector.style.textOverflow = \"initial\"\n  dom.networkSelector.onscroll = undefined\n}\n\ndom.publicNetwork.onchange = () => networkUI.switch(\"public\")\ndom.testNetwork.onchange = () => networkUI.switch(\"test\")\ndom.customNetwork.onchange = () => networkUI.switch(\"\")\n\ndom.customPassphrase.onchange = function () {\n  const networkName = cosmicLib.resolve.networkName(dom.customPassphrase.value)\n  localStorage.customPassphrase = networkName\n  networkUI.switch(\"\")\n}\n\ndom.customHorizon.onchange = function () {\n  the.horizon = dom.customHorizon.value\n  if (the.horizon && the.horizon.substr(0, 4) !== \"http\") {\n    the.horizon = \"https://\" + the.horizon\n  }\n  if (the.network && the.horizon) {\n    const passphrase = cosmicLib.resolve.networkPassphrase(the.network)\n    cosmicLib.config.setupNetwork(the.network, the.horizon, passphrase)\n    localStorage[\"network:\" + passphrase] = the.horizon\n  }\n  if (the.network) main.refresh()\n}\n\n/*******************************************************************************\n * Step 3: Signing/Redirection UI\n */\n\nconst redirectionUI = {}\n\nredirectionUI.init = function () {\n  redirectionUI.display(\"\")\n  showIf(the.authenticator.redirection, dom.redirectionForm)\n  showIf(the.authenticator.textarea, dom.textareaForm)\n  showIf(the.query && the.authenticator.qrCode, dom.qrForm)\n\n  if (!the.query) {\n    if (the.authenticator.url) {\n      const onclick = () => location.href = the.authenticator.url\n      enableButton(dom.redirectionButton, the.authenticator.buttonText, onclick)\n    } else {\n      redirectionUI.error(\"No transaction\")\n    }\n  } else {\n    if (the.authenticator.redirection) disableButton(dom.redirectionButton, \"…\")\n    if (the.authenticator.textarea) disableBox(dom.xdrBox, \"Computing...\")\n    if (the.authenticator.qrCode) qrCodeUI.loadingAnim()\n  }\n}\n\nredirectionUI.refresh = function (value) {\n  if (the.authenticator.redirection) {\n    const onclick = () => redirectionUI.click(value)\n    enableButton(dom.redirectionButton, the.authenticator.buttonText, onclick)\n  }\n\n  if (the.redirect && !the.contextIsWidget) {\n    dom.redirectionButton.onclick()\n  }\n\n  if (the.authenticator.textarea) readOnlyBox(dom.xdrBox, value)\n  if (the.authenticator.qrCode) qrCodeUI.refresh(value)\n}\n\nredirectionUI.error = function (error) {\n  disableButton(dom.redirectionButton, error)\n  disableBox(dom.xdrBox, error)\n  html.clear(dom.qrCode)\n}\n\nredirectionUI.click = async function (action) {\n  if (typeof action === \"string\") {\n    if (\n      the.contextIsWidget\n      || env.isEmbedded && the.authenticator.target === \"new\"\n    ) {\n      open(action, \"_blank\")\n      window.parent.postMessage(\"close\", \"*\")\n    } else if (env.isEmbedded && the.authenticator.target === \"external\") {\n      open(action)\n      window.parent.postMessage(\"close\", \"*\")\n    } else {\n      location.replace(action)\n    }\n  } else if (typeof action === \"function\") {\n    display(dom.redirectionMsgbox, \"info\", \"Waiting for confirmation...\")\n    dom.redirectionButton.disabled = true\n\n    try {\n      const transaction = await action()\n      await redirectionUI.sendTransaction(transaction)\n    } catch (error) {\n      console.error(error.response || error)\n      redirectionUI.display(\"error\", error.message.replace(/\\.$/, \"\"))\n      dom.redirectionButton.disabled = false\n    }\n  }\n}\n\nredirectionUI.sendTransaction = async function () {\n  redirectionUI.display(\"info\", \"Sending to the network...\")\n  history.replaceState({}, \"\", the.cosmicLink.query)\n  networkUI.lock()\n\n  // Non-widget interface\n  if (dom.query) {\n    dom.query.textContent = the.cosmicLink.query\n  }\n\n  window.scrollTo(0, document.body.scrollHeight)\n  const result = await TxResultView.forCosmicLink(the.cosmicLink)\n  redirectionUI.display(\"\", result)\n\n  if (result.validated && env.isEmbedded) {\n    parent.postMessage(\"close\", \"*\")\n  }\n  if (document.referrer) {\n    enableButton(dom.redirectionButton, \"Close\", () => history.back())\n  } else {\n    dom.redirectionButton.value = \"Done\"\n  }\n}\n\nredirectionUI.display = function (type, message) {\n  display(dom.redirectionMsgbox, type, message)\n}\n\nconst qrCodeUI = {}\n\nqrCodeUI.loadingAnim = function () {\n  html.rewrite(dom.qrCode, html.create(\"span\", \".cosmiclib_loadingAnim\"))\n}\n\nqrCodeUI.refresh = async function (value) {\n  // Makes that fuction non-blocking.\n  await timeout(0)\n\n  if (!the.authenticator.qrCode || !value) return\n\n  const canvas = html.create(\"canvas\", { title: value })\n  const scale = Math.max(3, 6 - Math.floor(Math.sqrt(value) / 10))\n  QrCode.toCanvas(canvas, value, { margin: 0, scale })\n\n  html.rewrite(dom.qrCode, canvas)\n}\n\nqrCodeUI.switch = function () {\n  the.qrCode = localStorage.QR = !the.qrCode\n  if (the.qrCode) qrCodeUI.enable()\n  else qrCodeUI.disable()\n}\n\nqrCodeUI.enable = function () {\n  dom.qrButton.className = \"enabled\"\n  html.show(dom.qrCode)\n}\n\nqrCodeUI.disable = function () {\n  dom.qrButton.className = undefined\n  html.hide(dom.qrCode)\n}\n\n/**\n * HTML Elements Events\n */\n\ndom.redirectionButton.onclick = redirectionUI.click\ndom.qrButton.onclick = qrCodeUI.switch\n\ndom.redirectionCheckbox.onchange = function () {\n  the.redirect = localStorage.redirect = !the.redirect\n}\n"],"sourceRoot":""}