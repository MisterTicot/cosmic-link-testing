{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/app.state.js","webpack:///./src/model/protocol.js","webpack:///./src/view/signing-widget.js","webpack:///./src/app.embed.js","webpack:///./src/lib/crud-array.js","webpack:///./src/model/authenticator.js","webpack:///./src/model/signing-flow.js","webpack:///./src/model/signing-context.js","webpack:///./src/data/protocols.js","webpack:///./src/data/wallets.js","webpack:///./src/view/tx-description.js","webpack:///./src/view/handler-form.js","webpack:///./src/view/account-input.js","webpack:///./src/view/handler-selector.js","webpack:///./src/view/network-selector.js","webpack:///./src/view/redirection-form.js","webpack:///./src/view/qr-code-switcher.js","webpack:///./src/view/qr-code-canvas.js","webpack:///./src/view/redirection-button.js","webpack:///./src/view/tx-result-view.js","webpack:///./src/view/xdr-area.js","webpack:///./src/app.full.js","webpack:///./src/lib/navigation.js","webpack:///./src/view/anti-tamper.js"],"names":["CosmicLinkApp","constructor","params","mode","Embed","Full","require","module","exports","type","StellarSdk","CrudArray","Authenticator","Protocol","SigningFlow","protocols","ingest","authenticators","AppState","super","this","$import","testAccount","get","keypair","Keypair","fromSecret","authenticator","$trigger","interrupt","console","log","proto","prototype","$define","authenticatorId","target","cosmicLink","automaticRedirection","sign","$on","current","previous","onExit","LiveObject","redirection","textarea","qrCode","$pick","lock","View","TxDescription","HandlerForm","RedirectionForm","signingFlow","txDescription","handlerForm","redirectionForm","SigningWidget","state","signingWidget","$pull","x","LiveArray","xeach","hide","Class","$store","key","ingestJson","toJson","toObject","map","JSON","stringify","collection","id","item","put","string","parse","want","delete","push","find","index","findIndex","splice","$listen","$ignore","protocol","buttonText","name","CosmicLink","config","TxResult","isEmbedded","SigningContext","open","uri","location","replace","window","parent","postMessage","signRequest","returned","resolved","signed","_","initialCosmicLink","needSource","tdesc","source","lastAccountId","accountId","async","lockSource","Error","needNetwork","network","lockNetwork","horizon","clone","query","resolveRequest","error","requestToUri","requestToXdr","forCosmicLink","resolve","networkName","length","getAddress","substr","passphrase","networkPassphrase","setupNetwork","friendbot","testnet","withConfig","getLedgerModule","then","ledger","default","getTrezorModule","trezor","register","cosmiclink","url","ledgerwallet","connect","publicKey","transaction","disconnect","trezorwallet","sep0007","sep7","encodeURIComponent","stellarlab","encodedXdr","xdr","copy","pubkey","isAccountEmpty","catch","wallets","LedgerWallet","TrezorWallet","StellarAuthenticator","Lobstr","StellarTerm","Sep7Wallet","StellarLaboratory","StellarLaboratoryView","TestAccount","CopyPasteXdr","html","format","operations","htmlDescription","$customDefine","status","descriptionDiv","grab","context","signatures","AccountInput","HandlerSelector","NetworkSelector","handlerSelector","accountInput","networkSelector","copyContent","$link","onclick","readonly","domNode","helpers","filter","toOption","handler","value","isCustom","QrCodeSwitcher","RedirectionButton","TxResultView","XdrArea","redirectionButton","xdrArea","qrCodeSwitcher","result","className","message","QrCodeCanvas","canvas","switch","showQrCode","disabled","QrCode","timeout","$ref","scale","Math","max","floor","sqrt","toCanvas","margin","getContext","clearRect","width","height","clearQr","linkAction","action","noLinkAction","shortName","response","txResult","validated","toLi","any","sep7Utils","Navigation","AntiTamper","AppFull","selectedTabId","origin","pathname","navigation","title","view","selectedTabView","isSep7Supported","isWebHandlerSupported","antiTamper","copyHeader","registerSep7Handler","currentPageUrl","href","split","registerWebHandler","tab","hash","tabs","from","toNavigationLink","link","t","baseUrl","set","antiTamperHash","makeHash","size","alphabet","i","random","charAt"],"mappings":"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","file":"app.js","sourcesContent":["\"use strict\"\n/**\n * CosmicLink application.\n */\n\n/* Definiton */\nclass CosmicLinkApp {\n  constructor (params) {\n    if (params.mode === \"embed\") {\n      return new CosmicLinkApp.Embed(params)\n    } else {\n      return new CosmicLinkApp.Full(params)\n    }\n  }\n}\n\n/* Exports */\nCosmicLinkApp.Embed = require(\"./app.embed\")\nCosmicLinkApp.Full = require(\"./app.full\")\nmodule.exports = CosmicLinkApp\n","\"use strict\"\n/**\n * CosmicLinkApp.State\n * */\nconst { type } = require(\"@kisbox/utils\")\n\nconst { StellarSdk } = require(\"@cosmic-plus/base\")\n\nconst CrudArray = require(\"./lib/crud-array\")\n\nconst Authenticator = require(\"./model/authenticator\")\nconst Protocol = require(\"./model/protocol\")\nconst SigningFlow = require(\"./model/signing-flow\")\n\n/* Data */\n\nAuthenticator.protocols = new CrudArray(Protocol)\nAuthenticator.protocols.ingest(require(\"./data/protocols\"))\nconst authenticators = new CrudArray(Authenticator)\nauthenticators.ingest(require(\"./data/wallets\"))\n\n/* Definition */\n\nclass AppState extends SigningFlow {\n  constructor (params) {\n    super(params)\n\n    this.$import(params, [\n      \"automaticRedirection\",\n      \"authenticators\",\n      \"authenticatorId\",\n      \"showQrCode\"\n    ])\n\n    // Setup test account\n    const testAccount = this.authenticators.get(\"TestAccount\")\n    testAccount.keypair = StellarSdk.Keypair.fromSecret(params.testAccount)\n    if (this.authenticator === testAccount) {\n      this.$trigger(\"authenticator\")\n    }\n\n    // Prevent UI loading\n    if (this.interrupt === true) throw \"redirect\"\n\n    // Beta debugging\n    // eslint-disable-next-line no-console\n    console.log(\"State:\", this)\n  }\n}\n\n/* Defaults */\nconst proto = AppState.prototype\nproto.authenticators = authenticators\n\n/* Computations */\n\nproto.$define(\n  \"authenticator\",\n  [\"authenticators\", \"authenticatorId\"],\n  function () {\n    return this.authenticators.get(this.authenticatorId)\n  }\n)\n\nproto.$define(\n  \"interrupt\",\n  [\"automaticRedirection\", \"cosmicLink\", \"authenticator\", \"target\"],\n  function () {\n    if (type(this.target) !== \"string\") return\n\n    if (this.cosmicLink && this.automaticRedirection) {\n      this.sign()\n      return true\n    }\n  }\n)\n\n/* Events */\nproto.$on(\"authenticator\", function (current, previous) {\n  if (previous && previous.onExit) {\n    previous.onExit()\n  }\n})\n\n/* Export */\nmodule.exports = AppState\n","\"use strict\"\n/**\n * Protocol\n */\nconst { LiveObject } = require(\"@kisbox/model\")\n\n/* Definition */\n\nclass Protocol extends LiveObject {\n  constructor (params) {\n    super()\n\n    // Defaults\n    this.redirection = true\n    this.textarea = false\n    this.qrCode = true\n\n    this.$pick(params, [\n      \"id\",\n      // Values\n      \"redirection\",\n      \"textArea\",\n      \"qrCode\",\n      \"buttonText\",\n      // Actions\n      \"getAddress\",\n      \"resolveRequest\",\n      \"requestToUri\",\n      \"requestToXdr\",\n      \"signRequest\",\n      \"onExit\"\n    ])\n  }\n\n  async resolveRequest (cosmicLink) {\n    await cosmicLink.lock()\n    return cosmicLink\n  }\n}\n\n/* Export */\nmodule.exports = Protocol\n","\"use strict\"\n/**\n * Signing Widget\n * */\nconst { View } = require(\"@kisbox/browser\")\n\nconst TxDescription = require(\"./tx-description\")\nconst HandlerForm = require(\"./handler-form\")\nconst RedirectionForm = require(\"./redirection-form\")\n\n/* Definition */\n\nclass SigningWidget extends View {\n  constructor (signingFlow) {\n    super(`\n<section class=\"SigningWidget\">\n  <h2>Stellar Transaction Request</h2>\n  <hr>\n\n  <section>\n    <h3>Step 1: Check the Transaction</h3>\n    %txDescription\n  </section>\n  <hr>\n\n  <section>\n    <h3>Step 2: Select a Signing Method</h3>\n    %handlerForm\n  </section>\n  <hr>\n\n  <section>\n    <h3>Step 3: Sign the Transaction</h3>\n    %redirectionForm\n  </section>\n    `)\n\n    // Components\n    this.txDescription = new TxDescription(signingFlow)\n    this.handlerForm = new HandlerForm(signingFlow)\n    this.redirectionForm = new RedirectionForm(signingFlow)\n  }\n}\n\n/* Export */\nmodule.exports = SigningWidget\n","\"use strict\"\n/**\n * Widget interface initialization.\n */\nconst { View } = require(\"@kisbox/browser\")\n\nconst AppState = require(\"./app.state\")\nconst SigningWidget = require(\"./view/signing-widget\")\n\n/* Definition */\n\nclass AppEmbed extends View {\n  constructor (params) {\n    super(`\n<div class=\"CosmicLinkApp\" %hidden>\n  <main>\n    <hr>\n    %signingWidget\n  </main>\n</div>\n    `)\n\n    this.state = new AppState(params)\n    this.signingWidget = new SigningWidget(this.state)\n    this.$pull(\"route\", this.state, \"query\", x => x || \"\")\n  }\n}\n\n/* Export */\nmodule.exports = AppEmbed\n","\"use strict\"\n/**\n * CrudArray\n */\nconst { LiveArray } = require(\"@kisbox/model\")\nconst { xeach, hide } = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass CrudArray extends LiveArray {\n  constructor (Class) {\n    super()\n    hide(this, \"Class\", Class)\n  }\n\n  /* Storage */\n  $store (target, key) {\n    if (key in target) this.ingestJson(target[key])\n    this.$on(\"$change\", () => target[key] = this.toJson())\n  }\n\n  /* Formats */\n  toObject () {\n    return this.map(x => x.toObject())\n  }\n\n  toJson () {\n    return JSON.stringify(this.toObject())\n  }\n\n  ingest (collection) {\n    xeach(collection, (params, id) => {\n      const item = this.put(params)\n      if (!item.id) item.id = id\n    })\n    // collection.forEach(params => this.put(params))\n  }\n\n  ingestJson (string) {\n    this.ingest(JSON.parse(string))\n  }\n\n  /* Primitives */\n  put (params) {\n    const item = want(this.Class, params)\n    this.delete(item.id)\n    this.push(item)\n    return item\n  }\n\n  get (id) {\n    return this.find(x => x.id === id)\n  }\n\n  delete (id) {\n    const index = this.findIndex(x => x.id === id)\n    if (index !== -1) this.splice(index, 1)\n  }\n}\n\n/* Events */\nconst proto = CrudArray.prototype\n\nproto.$on(\"$add\", function ([item]) {\n  this.$listen(item, \"$set\", () => {\n    this.$trigger(\"$change\")\n  })\n})\n\nproto.$on(\"$remove\", function ([item]) {\n  this.$ignore(item, \"$set\")\n})\n\n/* Helpers */\n\nfunction want (Class, params) {\n  return params instanceof Class ? params : new Class(params)\n}\n\n/* Export */\nmodule.exports = CrudArray\n","\"use strict\"\n/**\n * Authenticator\n */\nconst Protocol = require(\"./protocol\")\n\n/* Definition */\n\nclass Authenticator extends Protocol {\n  constructor (params) {\n    const protocol = Authenticator.protocols.get(params.protocol)\n    super(protocol)\n    delete this.id\n\n    this.$import(params, [\n      \"id\",\n      // Values\n      \"name\",\n      \"protocol\",\n      \"url\",\n      \"target\",\n      \"needSource\",\n      \"needNetwork\"\n    ])\n\n    if (!this.buttonText && this.redirection)\n      this.buttonText = \"Go to \" + this.name\n  }\n}\n\n/* Export */\nmodule.exports = Authenticator\n","\"use strict\"\n/**\n * Signing Flow\n **/\nconst { CosmicLink, config } = require(\"cosmic-lib\")\nconst TxResult = require(\"@cosmic-plus/tx-result\")\n\nconst { isEmbedded } = require(\"@kisbox/helpers\")\n\nconst SigningContext = require(\"./signing-context\")\n\n/* Definition */\n\nclass SigningFlow extends SigningContext {\n  constructor (params) {\n    super(params)\n  }\n\n  open () {\n    if (!this.uri) return\n\n    // TODO: use an opening callback instead?\n    if (\n      isEmbedded\n      && (this.authenticator.target === \"new\"\n        || this.authenticator.target === \"external\")\n    ) {\n      open(this.uri)\n      window.parent.postMessage(\"close\", \"*\")\n    } else {\n      location.replace(this.uri)\n    }\n  }\n\n  async sign () {\n    if (!this.authenticator.signRequest) return null\n\n    const returned = await this.authenticator.signRequest(this.resolved)\n    this.signed = returned || this.resolved\n  }\n}\n\n/* Computations */\nconst proto = SigningFlow.prototype\n\nproto.$on([\"open\", \"cosmicLink\"], function (_, initialCosmicLink) {\n  const cosmicLink = initialCosmicLink || this.cosmicLink\n  if (this.needSource && !cosmicLink.tdesc.source) {\n    this.lastAccountId = this.accountId\n  }\n})\n\nproto.$define(\n  \"resolved\",\n  [\"authenticator\", \"accountId\", \"network\", \"horizon\"],\n  async function () {\n    if (!this.cosmicLink) return\n\n    if (this.needSource && !(this.lockSource || this.accountId)) {\n      return new Error(\"Please set a source account\")\n    }\n    if (this.needNetwork) {\n      if (!(this.network || this.lockNetwork)) {\n        return new Error(\"Please set a network\")\n      } else if (!this.horizon) {\n        return new Error(\"Please set an Horizon address\")\n      }\n    }\n\n    const clone = new CosmicLink(this.cosmicLink.query)\n    config.source = this.accountId\n    config.network = this.network\n\n    try {\n      return await this.authenticator.resolveRequest(clone)\n    } catch (error) {\n      error.cosmicLink = clone\n      throw error\n    }\n  }\n)\n\nproto.$on(\"authenticator\", function () {\n  this.signed = null\n})\n\nproto.$define(\"uri\", [\"resolved\"], function () {\n  if (!this.resolved) {\n    return this.authenticator.uri\n  } else if (this.authenticator.requestToUri) {\n    return this.authenticator.requestToUri(this.resolved, this.authenticator)\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"xdr\", [\"resolved\"], function () {\n  if (this.resolved && this.authenticator.requestToXdr) {\n    return this.authenticator.requestToXdr(this.resolved, this.authenticator)\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"action\", [\"resolved\"], function () {\n  if (this.authenticator.signRequest) {\n    return () => this.sign()\n  } else {\n    return () => this.open()\n  }\n})\n\nproto.$on(\"signed\", function () {\n  if (this.signed) {\n    this.query = this.signed.query\n  }\n})\n\nproto.$define(\"result\", [\"signed\"], function () {\n  return this.signed && TxResult.forCosmicLink(this.signed)\n})\n\n/* Export */\nmodule.exports = SigningFlow\n","\"use strict\"\n/**\n * Signing Context\n **/\nconst { CosmicLink, resolve, config } = require(\"cosmic-lib\")\nconst { LiveObject } = require(\"@kisbox/model\")\n\n/* Definition */\n\nclass SigningContext extends LiveObject {\n  constructor (params) {\n    super()\n\n    /* Defaults */\n    this.network = \"public\"\n    this.accountId = null\n\n    /* Imports */\n    this.$import(params, [\n      \"network\",\n      \"horizon\",\n      \"accountId\",\n      \"lastAccountId\",\n      \"authenticator\",\n      \"query\",\n      \"cosmicLink\"\n    ])\n  }\n}\n\n/* Computations: inputs */\nconst proto = SigningContext.prototype\n\nproto.$on(\"network\", function () {\n  // Turns passphrases into network names. (e.g: \"public\")\n  const name = resolve.networkName(this.network)\n  if (this.network !== name) {\n    this.network = name\n    return\n  }\n})\n\nproto.$define(\"horizon\", [\"network\"], function () {\n  return (\n    resolve.horizon(this.network)\n    || this.cosmicLink && this.cosmicLink.tdesc.horizon\n    || \"\"\n  )\n})\n\nproto.$define(\"cosmicLink\", [\"query\"], function () {\n  if (this.query && this.query.length > 1) {\n    return new CosmicLink(this.query)\n  } else {\n    return null\n  }\n})\n\nproto.$define(\"query\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return this.cosmicLink.query\n  } else {\n    return null\n  }\n})\n\n/* Computations: intermediate */\n\nproto.$define(\"needSource\", [\"authenticator\"], function () {\n  if (this.authenticator) {\n    return !!this.authenticator.needSource\n  }\n})\n\nproto.$define(\"needNetwork\", [\"authenticator\"], function () {\n  if (this.authenticator) {\n    return !!this.authenticator.needNetwork\n  }\n})\n\nproto.$define(\"lockSource\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return !!this.cosmicLink.tdesc.source\n  }\n})\n\nproto.$define(\"lockNetwork\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink) {\n    return !!this.cosmicLink.tdesc.network\n  }\n})\n\nproto.$on(\"authenticator\", function (_, previous) {\n  if (previous.getAddress) {\n    this.accountId = null\n  }\n})\n\nproto.$on([\"authenticator\", \"cosmicLink\"], function () {\n  if (this.authenticator.getAddress) {\n    this.accountId = this.authenticator.getAddress()\n  } else if (this.lockSource) {\n    this.accountId = this.cosmicLink.tdesc.source\n  } else if (!this.accountId) {\n    this.accountId = this.lastAccountId\n  }\n})\n\nproto.$define(\"network\", [\"cosmicLink\"], function () {\n  if (this.lockNetwork) {\n    return this.cosmicLink.tdesc.network\n  } else {\n    return this.network || \"public\"\n  }\n})\n\n/* Events: intermediate */\n\nproto.$on(\"horizon\", function () {\n  if (this.horizon.length > 4 && this.horizon.substr(0, 4) !== \"http\") {\n    this.horizon = `https://${this.horizon}`\n    return\n  }\n\n  // Save network/horizon association\n  const passphrase = resolve.networkPassphrase(this.network)\n  config.setupNetwork(this.network, this.horizon, passphrase)\n})\n\n/* Export */\nmodule.exports = SigningContext\n","\"use strict\"\n/**\n * Wallet protocols.\n *\n * Properties:\n *\n * - getAddress\n * - resolveRequest\n * - signRequest\n * - requestToUri\n * - requestToXdr\n * - onExit\n *\n * @exports protocols\n * @private\n */\nconst protocols = exports\n\nconst { friendbot } = require(\"@cosmic-plus/base\")\nconst cosmicLib = require(\"cosmic-lib\")\nconst testnet = cosmicLib.withConfig({ network: \"test\" })\n\n/* Data */\n\nprotocols.cosmiclink = {\n  resolveRequest (cosmicLink) {\n    return cosmicLink\n  },\n  requestToUri (cosmicLink, authenticator) {\n    return `${authenticator.url}${cosmicLink.query}`\n  }\n}\n\nprotocols.ledgerwallet = {\n  buttonText: \"Sign with Ledger Wallet\",\n  qrCode: false,\n  async getAddress () {\n    const ledger = await getLedgerModule()\n    await ledger.connect()\n    return ledger.publicKey\n  },\n  async signRequest (cosmicLink) {\n    const ledger = await getLedgerModule()\n    await ledger.sign(cosmicLink.transaction)\n  },\n  async onExit () {\n    const ledger = await getLedgerModule()\n    ledger.disconnect()\n  }\n}\n\nprotocols.trezorwallet = {\n  buttonText: \"Sign with Trezor Wallet\",\n  qrCode: false,\n  async getAddress () {\n    const trezor = await getTrezorModule()\n    await trezor.connect()\n    return trezor.publicKey\n  },\n  async signRequest (cosmicLink) {\n    const trezor = await getTrezorModule()\n    await trezor.sign(cosmicLink.transaction)\n  },\n  async onExit () {\n    const trezor = await getTrezorModule()\n    trezor.disconnect()\n  }\n}\n\nprotocols.sep0007 = {\n  requestToUri (cosmicLink, authenticator) {\n    const uri = cosmicLink.sep7\n    const endpoint = \"web+stellar:\"\n    if (authenticator.url !== endpoint) {\n      const sep7 = encodeURIComponent(uri)\n      return `${authenticator.url}${sep7}`\n    } else {\n      return uri\n    }\n  }\n}\n\nprotocols.stellarlab = {\n  async requestToUri (cosmicLink, authenticator) {\n    const encodedXdr = encodeURIComponent(cosmicLink.xdr)\n    let query = `${encodedXdr}`\n\n    if (cosmicLink.network === \"public\" || cosmicLink.network === \"test\") {\n      query += `&network=${cosmicLink.network}`\n    } else {\n      const passphrase = encodeURIComponent(cosmicLink.network)\n      const horizon = encodeURIComponent(cosmicLink.horizon)\n      query += `&network=custom&horizonURL=${horizon}`\n      query += `&networkPassphrase=${passphrase}`\n    }\n\n    return `${authenticator.url}${query}`\n  }\n}\n\nprotocols.copy = {\n  redirection: false,\n  textarea: true,\n  requestToXdr (cosmicLink) {\n    return cosmicLink.xdr\n  }\n}\n\nprotocols.testAccount = {\n  buttonText: \"Sign with Testnet Account\",\n  qrCode: false,\n  async getAddress () {\n    if (!this.keypair) return\n    const pubkey = this.keypair.publicKey()\n    if (await testnet.resolve.isAccountEmpty(pubkey)) {\n      await friendbot(pubkey).catch(() => null)\n    }\n    return pubkey\n  },\n  signRequest (cosmicLink) {\n    cosmicLink.sign(this.keypair)\n  }\n}\n\n/* Module loading */\n\nfunction getLedgerModule () {\n  return import(\n    /* webpackChunkName: \"ledger\" */ \"@cosmic-plus/ledger-wallet\"\n  ).then(ledger => ledger.default)\n}\n\nfunction getTrezorModule () {\n  return import(\n    /* webpackChunkName: \"trezor\" */ \"@cosmic-plus/trezor-wallet\"\n  ).then(trezor => {\n    trezor.register(\"https://cosmic.link\", \"mister.ticot@cosmic.plus\")\n    return trezor.default\n  })\n}\n","\"use strict\"\n/**\n * Wallets & signing methods that accept arbitrary transactions as input.\n */\nconst wallets = exports\n\n/* Data */\nwallets.LedgerWallet = {\n  name: \"Ledger Wallet\",\n  protocol: \"ledgerwallet\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.TrezorWallet = {\n  name: \"Trezor Wallet\",\n  protocol: \"trezorwallet\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarAuthenticator = {\n  name: \"Stellar Authenticator\",\n  protocol: \"cosmiclink\",\n  url: \"https://stellar-authenticator.org/\"\n}\n\nwallets.Lobstr = {\n  name: \"Lobstr Web (partial support)\",\n  protocol: \"sep0007\",\n  url: \"https://lobstr.co/?tx=\",\n  target: \"new\"\n}\n\nwallets.StellarTerm = {\n  name: \"StellarTerm (partial support)\",\n  protocol: \"sep0007\",\n  url: \"https://stellarterm.com/?tx=\",\n  target: \"new\"\n}\n\nwallets.Sep7Wallet = {\n  name: \"Sep-0007 Wallet\",\n  protocol: \"sep0007\",\n  url: \"web+stellar:\",\n  target: \"external\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarLaboratory = {\n  name: \"Stellar Laboratory (Sign)\",\n  protocol: \"stellarlab\",\n  url: \"https://stellar.org/laboratory/#txsigner?xdr=\",\n  target: \"new\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.StellarLaboratoryView = {\n  name: \"Stellar Laboratory (View)\",\n  protocol: \"stellarlab\",\n  url:\n    \"https://stellar.org/laboratory/#xdr-viewer?type=TransactionEnvelope&input=\",\n  target: \"new\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.TestAccount = {\n  name: \"Test Account\",\n  protocol: \"testAccount\",\n  needSource: true,\n  needNetwork: true\n}\n\nwallets.CopyPasteXdr = {\n  name: \"Copy/Paste XDR\",\n  protocol: \"copy\",\n  needSource: true,\n  needNetwork: true\n}\n","\"use strict\"\n/**\n * Tx Description\n * */\n\nconst { View, html } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst format = require(\"cosmic-lib/es5/format\")\n\n/* Definition */\n\nclass TxDescription extends View {\n  constructor (params) {\n    super(`\n<div class=\"TxDescription cosmiclink_description\">\n  %description\n  %status\n  %signers\n</div>\n    `)\n\n    this.$import(params, [\"cosmicLink\", \"result\", \"resolved\"])\n  }\n}\n\n/* Computations */\nconst proto = TxDescription.prototype\n\nproto.$define(\"description\", [\"cosmicLink\"], function () {\n  if (this.cosmicLink && this.cosmicLink.tdesc.operations) {\n    return this.cosmicLink.htmlDescription\n  } else {\n    return \"No transaction\"\n  }\n})\n\nproto.$customDefine(\"status\", [\"resolved\"], function () {\n  if (this.cosmicLink.status) return\n  if (!(this.resolved instanceof Error)) return\n\n  const cosmicLink = this.resolved.cosmicLink\n  if (!cosmicLink) return\n\n  const descriptionDiv = cosmicLink.htmlDescription\n  const statusDiv = html.grab(\".cosmiclib_statusNode\", descriptionDiv)\n  return statusDiv\n})\n\nproto.$customDefine(\"signers\", [\"resolved\"], function () {\n  if (!this.resolved || !type(this.resolved) === \"object\") return\n\n  const context = this.resolved\n  const transaction = this.resolved.transaction\n  if (!transaction) return\n\n  const signersNode = format.signatures(context, transaction)\n  return signersNode\n})\n\n/* Export */\nmodule.exports = TxDescription\n","\"use strict\"\n/**\n * Handler Form\n *\n * *Inputs:* authenticators, signingFlow*\n *\n * *: Can be edited by user input.\n **/\nconst { View } = require(\"@kisbox/browser\")\n\nconst AccountInput = require(\"./account-input\")\nconst HandlerSelector = require(\"./handler-selector\")\nconst NetworkSelector = require(\"./network-selector\")\n\n/* Definition */\n\nclass HandlerForm extends View {\n  constructor (signingFlow) {\n    super(`\n<form class=\"HandlerForm\" onsubmit=\"return false\">\n  %handlerSelector\n  <div hidden=%not:needSource>%accountInput</div>\n  <div hidden=%not:needNetwork>%networkSelector</div>\n</form>\n    `)\n\n    // Inputs\n    this.$import(signingFlow, [\"needSource\", \"needNetwork\"])\n\n    // Components\n    this.handlerSelector = new HandlerSelector(signingFlow)\n    this.accountInput = new AccountInput(signingFlow)\n    this.networkSelector = new NetworkSelector(signingFlow)\n  }\n}\n\n/* Export */\nmodule.exports = HandlerForm\n","\"use strict\"\n/**\n * Account Input Box\n * */\n\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst { copyContent } = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass AccountInput extends View {\n  constructor (params) {\n    super(`\n<input type=\"text\" value=%filter:accountId %onclick %readonly %placeholder\n  disabled=%notAvailable:accountId autocomplete=\"stellar-address\">\n      `)\n\n    this.accountId = \"\"\n    this.$import(params, [\"cosmicLink\", \"authenticator\"])\n    this.$link(params, [\"accountId\"])\n  }\n\n  onclick () {\n    if (this.readonly) {\n      copyContent(this.domNode)\n    }\n  }\n}\n\n/* Computations */\nconst proto = AccountInput.prototype\n\nproto.$define(\"readonly\", [\"cosmicLink\", \"authenticator\"], function () {\n  return !!(\n    this.cosmicLink && this.cosmicLink.tdesc.source\n    || this.authenticator.getAddress\n  )\n})\n\nproto.$customDefine(\"placeholder\", [\"accountId\"], function () {\n  switch (type(this.accountId)) {\n  case \"promise\":\n    return \"Connecting...\"\n  case \"error\":\n    return this.accountId\n  default:\n    return \"Federated Address or Public Key\"\n  }\n})\n\n/* Helpers */\nconst helpers = AccountInput.helpers\n\nhelpers.filter = function (accountId) {\n  if (type(accountId) === \"string\") {\n    return accountId\n  }\n}\n\n/* Export */\nmodule.exports = AccountInput\n","\"use strict\"\n/**\n * Handler Selector\n *\n * * Import: authenticators\n * * Link: authenticatorId\n *\n * */\nconst { View, html } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass HandlerSelector extends View {\n  constructor (params) {\n    super(`\n<select class=\"HandlerSelector\" value=%authenticatorId>\n  %toOption:...authenticators\n</select>\n    `)\n\n    this.$import(params, [\"authenticators\"])\n    this.$link(params, [\"authenticatorId\"])\n  }\n}\n\n/* Helpers */\nconst helpers = HandlerSelector.helpers\n\nhelpers.toOption = function (handler) {\n  return html(\"option\", { value: handler.id }, handler.name)\n}\n\n/* Export */\nmodule.exports = HandlerSelector\n","\"use strict\"\n/**\n * Network Selector\n * */\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass NetworkSelector extends View {\n  constructor (params) {\n    super(`\n<div class=\"NetworkSelector\">\n\n  <div>\n    <input type=\"radio\" $group=\"networkSelector\" value=\"public\"\n      disabled=%lockNetwork $label=\"Public\">\n    <input type=\"radio\" $group=\"networkSelector\" value=\"test\"\n      disabled=%lockNetwork $label=\"Test\">\n    <input type=\"radio\" $group=\"networkSelector\" value=\"custom\"\n      disabled=%lockNetwork $label=\"Custom\">\n  </div>\n\n  <div hidden=%not:isCustom>\n    <input type=\"text\" value=%network disabled=%lockNetwork\n      placeholder=\"Network Passphrase or Name\">\n    <input type=\"text\" value=%horizon\n      placeholder=\"Horizon URL\">\n  </div>\n  \n</div>\n    `)\n\n    this.$import(params, [\"lockNetwork\"])\n    this.$link(params, [\"network\", \"horizon\"])\n  }\n}\n\n/* Computations */\nconst proto = NetworkSelector.prototype\n\nproto.$define(\"networkSelector\", [\"network\"], function () {\n  if (this.network === \"public\" || this.network === \"test\") {\n    return this.network\n  } else {\n    return \"custom\"\n  }\n})\n\nproto.$define(\"isCustom\", [\"networkSelector\"], function () {\n  return this.networkSelector === \"custom\"\n})\n\n/* Events */\nproto.$on(\"networkSelector\", function () {\n  if (!this.isCustom) {\n    this.network = this.networkSelector\n  }\n})\n\n/* Export */\nmodule.exports = NetworkSelector\n","\"use strict\"\n/**\n * Redirection Form\n * */\nconst { View, html } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst QrCodeSwitcher = require(\"./qr-code-switcher\")\nconst RedirectionButton = require(\"./redirection-button\")\nconst TxResultView = require(\"./tx-result-view\")\nconst XdrArea = require(\"./xdr-area\")\n\n/* Definition */\n\nclass RedirectionForm extends View {\n  constructor (signingFlow) {\n    super(`\n<form class=\"RedirectionForm\" hidden=%not:showButton>\n  %redirectionButton\n  <div $ref=\"messageBox\"></div>\n  %txResultView\n</form>\n\n\n<form hidden=%not:showTextarea>\n  %xdrArea\n</form>\n\n<div hidden=%not:showQrCodeSwitcher>\n  %qrCodeSwitcher\n</div>\n    `)\n\n    this.$import(signingFlow, [\"cosmicLink\", \"authenticator\", \"result\"])\n\n    // Components\n    this.redirectionButton = new RedirectionButton(signingFlow)\n    this.xdrArea = new XdrArea(signingFlow)\n    this.qrCodeSwitcher = new QrCodeSwitcher(signingFlow)\n  }\n}\n\n/* Computations */\nconst proto = RedirectionForm.prototype\n\nproto.$define(\"showButton\", [\"authenticator\"], function () {\n  return this.authenticator.requestToUri || this.authenticator.signRequest\n})\n\nproto.$define(\"showTextarea\", [\"authenticator\"], function () {\n  return this.authenticator.requestToXdr\n})\n\nproto.$define(\n  \"showQrCodeSwitcher\",\n  [\"cosmicLink\", \"authenticator\"],\n  function () {\n    return (\n      this.cosmicLink\n      && (this.authenticator.requestToUri || this.authenticator.requestToXdr)\n    )\n  }\n)\n\nproto.$customDefine(\"txResultView\", [\"result\"], function () {\n  if (type(this.result) === \"error\") {\n    return html(\"span\", { className: \"error\" }, this.result.message)\n  } else {\n    return new TxResultView(this.result)\n  }\n})\n\n/* Export */\nmodule.exports = RedirectionForm\n","\"use strict\"\n/**\n * QR Code UI\n */\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\nconst QrCodeCanvas = require(\"./qr-code-canvas\")\n\n/* Definition */\n\nclass QrCodeSwitcher extends View {\n  constructor (params) {\n    super(`\n<form id=\"qrForm\">\n  <input type=\"button\" value=\"QR Code\" onclick=%switch %disabled>\n  <div %hidden>%canvas</div>\n</form>\n  `)\n\n    this.$import(params, [\"uri\", \"xdr\"])\n    this.$link(params, [\"showQrCode\"])\n\n    this.canvas = new QrCodeCanvas(this)\n  }\n\n  switch () {\n    this.showQrCode = !this.showQrCode\n  }\n}\n\n/* Computations */\nconst proto = QrCodeSwitcher.prototype\n\nproto.$define(\"target\", [\"uri\", \"xdr\"], function () {\n  return this.uri || this.xdr\n})\n\nproto.$customDefine(\"disabled\", [\"target\"], function () {\n  return type(this.target) === \"error\"\n})\n\nproto.$define(\"hidden\", [\"showQrCode\", \"disabled\"], function () {\n  return !this.showQrCode || this.disabled\n})\n\n/* Exports */\nmodule.exports = QrCodeSwitcher\n","\"use strict\"\n/**\n * QR Code Canvas\n */\nconst QrCode = require(\"qrcode\")\n\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\nconst { timeout } = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass QrCodeCanvas extends View {\n  constructor (params) {\n    super(`\n<div class=\"QrCodeCanvas\">\n  <span class=\"cosmiclib_loadingAnim\" hidden=%notPending:target></span>\n  <canvas $ref=\"canvas\" title=%target hidden=%not:target></canvas>\n</div>\n`)\n\n    this.$import(params, [\"target\"])\n  }\n}\n\n/* Computations */\nconst proto = QrCodeCanvas.prototype\n\nproto.$on(\"target\", function () {\n  if (type(this.target) === \"string\") {\n    setQr(this.$ref.canvas, this.target)\n  } else if (this.$ref.canvas) {\n    clearQr(this.$ref.canvas)\n  }\n})\n\n/* Helpers */\n\nfunction setQr (canvas, target) {\n  // Make heavy computation async.\n  timeout(1).then(() => {\n    const scale = Math.max(3, 6 - Math.floor(Math.sqrt(target) / 10))\n    QrCode.toCanvas(canvas, target, { margin: 0, scale })\n  })\n}\n\nfunction clearQr (canvas) {\n  const context = canvas.getContext(\"2d\")\n  context.clearRect(0, 0, canvas.width, canvas.height)\n}\n\n/* Exports */\nmodule.exports = QrCodeCanvas\n","\"use strict\"\n/**\n * Redirection Button\n * */\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\n\n/* Definition */\n\nclass RedirectionButton extends View {\n  constructor (params) {\n    super(`\n<div class=\"RedirectionButton\">\n  <input type=\"button\" hidden=%not:cosmicLink value=%buttonText\n    onclick=%linkAction disabled=%disabled>\n  <input type=\"button\" hidden=%has:cosmicLink value=%noLinkButtonText\n    onclick=%noLinkAction disabled=%noLinkDisabled>\n  <input type=\"checkbox\" checked=%automaticRedirection\n    $label=\"Automatic redirection\">\n</div>\n    `)\n\n    this.$import(params, [\n      \"authenticator\",\n      \"resolved\",\n      \"action\",\n      \"result\",\n      \"cosmicLink\"\n    ])\n    this.$link(params, [\"automaticRedirection\"])\n  }\n\n  linkAction () {\n    this.action()\n  }\n\n  noLinkAction () {\n    open(this.authenticator.url)\n  }\n}\n\n/* Computations */\nconst proto = RedirectionButton.prototype\n\nproto.$define(\"noLinkButtonText\", [\"authenticator\"], function () {\n  if (this.authenticator.url) {\n    const shortName = this.authenticator.name.replace(/ \\(.*/, \"\")\n    return `Go to ${shortName}`\n  } else {\n    return \"No transaction\"\n  }\n})\n\nproto.$define(\"noLinkDisabled\", [\"authenticator\"], function () {\n  return !this.authenticator.url\n})\n\nproto.$customDefine(\n  \"buttonText\",\n  [\"authenticator\", \"resolved\", \"result\"],\n  function () {\n    if (type(this.signed) === \"promise\") {\n      return \"Signing...\"\n    } else if (type(this.result) === \"promise\") {\n      return \"Sending...\"\n    } else if (this.result) {\n      return \"Done\"\n    } else if (type(this.resolved) === \"error\") {\n      return this.resolved\n    } else if (type(this.resolved) === \"promise\") {\n      return \"...\"\n    } else {\n      return `Sign with ${this.authenticator.name}`\n    }\n  }\n)\n\nproto.$customDefine(\"disabled\", [\"action\", \"result\"], function () {\n  return (\n    !this.action\n    || type(this.action) === \"promise\"\n    || type(this.action) === \"error\"\n    || this.result\n  )\n})\n\n/* Export */\nmodule.exports = RedirectionButton\n","\"use strict\"\n/**\n * TxResultView - Displays TxResult instances\n */\nconst TxResult = require(\"@cosmic-plus/tx-result\")\nconst { View, html } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass TxResultView extends View {\n  static async forCosmicLink (cosmicLink) {\n    const result = await TxResult.forCosmicLink(cosmicLink)\n    return new TxResultView(result)\n  }\n\n  static fromResponse (response) {\n    const result = new TxResult(response)\n    return new TxResultView(result)\n  }\n\n  constructor (txResult) {\n    super(`\n<div class=\"TxResultView cosmiclink_description\">\n\n  <span class=%state>%title</span>\n\n  <ul class=\"error\" hidden=%validated>\n    %{toLi:...errors}\n  </ul>\n\n</div>\n    `)\n\n    this.$import(txResult, [\"title\", \"errors\", \"validated\"])\n    this.state = this.validated ? \"info\" : \"error\"\n  }\n}\n\n/* Helpers */\nTxResultView.helpers.toLi = any => html(\"li\", [any])\n\n/* Exports */\nmodule.exports = TxResultView\n","\"use strict\"\n/**\n * XdrArea\n **/\nconst { View } = require(\"@kisbox/browser\")\nconst { type } = require(\"@kisbox/utils\")\nconst { copyContent } = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass XdrArea extends View {\n  constructor (params) {\n    super(`\n<textarea rows=3 readonly %value %onclick %placeholder disabled=%not:xdr>\n</textarea>\n    `)\n\n    this.$import(params, [\"cosmicLink\", \"xdr\"])\n  }\n\n  onclick () {\n    copyContent(this.domNode)\n  }\n}\n\n/* Computations */\nconst proto = XdrArea.prototype\n\nproto.$customDefine(\"placeholder\", [\"cosmicLink\", \"xdr\"], function () {\n  if (!this.cosmicLink) {\n    return \"No transaction\"\n  } else if (type(this.xdr) === \"promise\") {\n    return \"Pending...\"\n  }\n})\n\nproto.$customDefine(\"value\", [\"xdr\"], function () {\n  if (type(this.xdr) === \"string\" || type(this.xdr) === \"error\") {\n    return this.xdr\n  }\n})\n\n/* Export */\nmodule.exports = XdrArea\n","\"use strict\"\n/**\n * App Full\n *\n * inouts: query, selectedTabId, antiTamperHash, signingFlow\n * outputs: route\n *\n * */\nconst { sep7Utils } = require(\"cosmic-lib\")\nconst { View, html } = require(\"@kisbox/browser\")\n\nconst AppState = require(\"./app.state\")\nconst Navigation = require(\"./lib/navigation\")\n\nconst AntiTamper = require(\"./view/anti-tamper\")\nconst SigningWidget = require(\"./view/signing-widget\")\n\nconst { copyContent } = require(\"@kisbox/helpers\")\n\n/* Definition */\n\nclass AppFull extends View {\n  constructor (params) {\n    super(`\n<div class=\"CosmicLinkApp\">\n  <header onclick=%copyHeader>\n    <h1>%location</h1><span>%query</span>\n  </header>\n\n  <img id=\"logo\" src=\"icons/512x512.png\" alt=\"\">\n\n  <main>\n    %navigation\n    <hr>\n    %selectedTabView\n  </main>\n\n  <footer>\n    <a id=\"registerSep7Handler\" onclick=%registerSep7Handler\n        hidden=%not:isSep7Supported>\n      Register as web+stellar links handler (SEP-0007)\n    </a>\n  </footer>\n\n  %antiTamper\n</div>\n`)\n    this.selectedTabId = \"sign\"\n    this.state = new AppState(params)\n    this.$import(this.state, [\"query\"])\n    this.$import(params, [\"selectedTabId\"])\n\n    // Header\n    if (location.origin === \"null\") {\n      this.location = location.pathname\n    } else {\n      this.location = `${location.origin}${location.pathname}`\n    }\n\n    // Navigation\n    this.navigation = new Navigation([\n      {\n        id: \"sign\",\n        title: \"Sign\",\n        view: new SigningWidget(this.state)\n      },\n      {\n        id: \"about\",\n        title: \"About\",\n        view: html.grab(\"#about\")\n      }\n    ])\n\n    this.navigation.$link(this, [\"selectedTabView\", \"selectedTabId\"])\n    if (!this.selectedTabView) {\n      this.selectedTabId = \"sign\"\n    }\n\n    // SEP-0007\n    this.isSep7Supported = sep7Utils.isWebHandlerSupported()\n\n    // Robot anti-tamper\n    this.antiTamper = new AntiTamper(params)\n  }\n\n  copyHeader () {\n    copyContent(this.$ref(\":scope > header\"))\n  }\n\n  registerSep7Handler () {\n    const currentPageUrl = location.href.split(/[?#]/, 1)[0]\n    sep7Utils.registerWebHandler(currentPageUrl, \"Cosmic.link\")\n  }\n}\n\n/* Computations */\nconst proto = AppFull.prototype\n\nproto.$define(\"route\", [\"query\", \"selectedTabId\"], function () {\n  const tab = this.selectedTabId\n  const query = tab === \"sign\" ? this.query || \"\" : \"\"\n  const hash = tab === \"sign\" ? \"\" : `#${this.selectedTabId}`\n  return `${query}${hash}`\n})\n\n/* Export */\nmodule.exports = AppFull\n","\"use strict\"\n/**\n * Navigation\n * */\nconst { View, html } = require(\"@kisbox/browser\")\nconst { LiveArray } = require(\"@kisbox/model\")\n\n/* Definition */\n\nclass Navigation extends View {\n  constructor (tabs = []) {\n    super(`\n<nav>%toNavigationLink:...tabs</nav>\n    `)\n\n    this.tabs = LiveArray.from(tabs)\n  }\n}\n\n/* Helpers */\nconst helpers = Navigation.helpers\n\nhelpers.toNavigationLink = function (tab) {\n  const link = html(\"a\", null, tab.title)\n  link.onclick = () => this.selectedTabId = tab.id\n  this.$on(\"selectedTabId\", selectedTabId => {\n    link.className = selectedTabId === tab.id ? \"selected\" : \"\"\n  })\n  return link\n}\n\n/* Computations */\nconst proto = Navigation.prototype\n\nproto.$define(\"selectedTabView\", [\"selectedTabId\"], function () {\n  const tab = this.tabs.find(t => t.id === this.selectedTabId)\n  if (tab) return tab.view\n})\n\n/* Export */\nmodule.exports = Navigation\n","\"use strict\"\n/**\n * Anti-tamper robot.\n */\nconst { View } = require(\"@kisbox/browser\")\n\n/* Definition */\n\nclass AntiTamper extends View {\n  constructor (params = {}) {\n    super(`<img class=\"AntiTamper\" %src>`)\n    this.$import(params, [\"baseUrl\", \"set\", \"antiTamperHash\"])\n  }\n}\n\n/* Defaults */\nconst proto = AntiTamper.prototype\nproto.baseUrl = \"https://robohash.org\"\nproto.set = \"set1\"\n\n/* Computations */\n\nproto.$define(\"src\", [\"baseUrl\", \"set\", \"antiTamperHash\"], function () {\n  return `${this.baseUrl}/${this.antiTamperHash}?set=${this.set}`\n})\n\n/* Utilities */\n\nAntiTamper.makeHash = function (size = 32) {\n  const alphabet =\n    \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\n  let hash = \"\"\n  for (let i = 0; i < size; i++) {\n    const random = Math.floor(Math.random() * alphabet.length)\n    hash += alphabet.charAt(random)\n  }\n\n  return hash\n}\n\n/* Export */\nmodule.exports = AntiTamper\n"],"sourceRoot":""}