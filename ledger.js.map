{"version":3,"sources":["webpack:///../ledger-wallet/es5/index.js"],"names":["connection","disconnection","_regeneratorRuntime","require","_asyncToGenerator","ledger","exports","env","timeout","StellarApp","Transport","isBrowser","nodeRequire","connect","_x","_connect","apply","this","arguments","mark","_callee7","path","startTime","app","iframe","ellapsed","wrap","_context7","prev","next","console","log","publicKey","Date","transport","isNode","create","sent","application","t0","Object","t1","getPublicKey","replace","t2","assign","call","t3","t4","getAppConfiguration","t5","onConnect","t6","id","document","querySelector","parentNode","removeChild","softReset","message","stop","closeTransport","_x3","_closeTransport","_callee8","_context8","close","error","reset","libValues","forEach","key","version","multiOpsEnabled","_callee","account","_args","_context","length","undefined","abrupt","Error","concat","sign","_ref2","_callee2","transaction","result","signature","_context2","signTransaction","signatureBase","toString","addSignature","_x2","disconnect","_callee3","_context3","then","onDisconnect","_onConnect","_callee9","_context9","newAccount","_callee4","horizon","accounts","last","_args4","_context4","scan","attempts","includeMerged","_ref6","_callee5","_ref5","_ref5$horizon","_ref5$attempts","_ref5$includeMerged","_require2","Server","miss","index","current","callBuilder","response","latest","_context5","getPublicKeys","effects","forAccount","order","limit","records","state","type","push","_x4","_callee6","start","keys","_args6","_context6"],"mappings":"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","file":"ledger.js","sourcesContent":["\"use strict\";\n/**\n * This library is a convenient wrapper around the official Ledger libraries for\n * Stellar:\n *\n * - [Stellar app API](https://www.npmjs.com/package/@ledgerhq/hw-app-str)\n * - [Transport Node HID](https://www.npmjs.com/package/@ledgerhq/hw-transport-node-hid) - Node.js support\n * - [Transport U2F](https://www.npmjs.com/package/@ledgerhq/hw-transport-u2f) - Browser support\n *\n * It provides a way to support Ledger Wallets with a few one-liners:\n *\n * ```js\n * // Step 1: Connect\n * await ledgerWallet.connect()\n *\n * // Step 2: Get public key\n * const pubkey = ledgerWallet.publicKey\n *\n * // Step 3: Sign transaction\n * await ledgerWallet.sign(transaction)\n *\n * // Extra: Event handlers\n * ledgerWallet.onConnect = connectionHandler\n * ledgerWallet.onDisconnect = disconnectionHandler\n * ```\n *\n * This library is compatible with both Node.js and browser environments.\n *\n * @exports ledgerWallet\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar ledger = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar _require = require(\"@cosmic-plus/jsutils/es5/misc\"),\n    timeout = _require.timeout;\n\nvar StellarApp = require(\"@ledgerhq/hw-app-str\")[\"default\"];\n\nvar Transport = env.isBrowser ? require(\"@ledgerhq/hw-transport-u2f\")[\"default\"] : env.nodeRequire(\"@ledgerhq/hw-transport-node-hid\")[\"default\"];\n/* Configuration */\n\nvar BIP32_PATH = \"m/44'/148'\";\n/* Properties */\n\n/**\n * Public key of the connected account.\n * @var {String}\n */\n\nledger.publicKey = null;\n/**\n * Derivation path of the connected account (default: `m/44'/148'/0'`).\n * @var {String}\n */\n\nledger.path = null;\n/**\n * Version of the Stellar application installed on the connected device.\n * @var {String}\n */\n\nledger.version = null;\n/**\n * Whether or not the user accepts to sign transactions without checking them on\n * the device first. This allows to sign long transactions (10+ ops) that could\n * normally not be handled by the device memory, but this is insecure.\n * @var {Boolean}\n */\n\nledger.multiOpsEnabled = null;\n/**\n * The Ledger Transport instance. (internal component)\n * @var {Transport}\n */\n\nledger.transport = null;\n/**\n * The Ledger Stellar application instance. (internal component)\n * @var {StellarApp}\n */\n\nledger.application = null;\n/* Methods */\n\nvar connection, disconnection;\n/**\n * Waits for a connection with the Ledger Wallet application for Stellar. If\n * **account** is not provided, account 1 is used. The library will stop\n * listening for a connection if `await ledgerWallet.disconnect()` is called.\n *\n * Once the connection is established, you can use `await\n * ledgerWallet.connect(account)` again at any time to ensure the device is\n * still connected.\n *\n * When switching to another account, you can `await\n * ledgerWallet.connect(new_account)` without prior disconnection.\n *\n * _Note:_ To stay consistent with the way Trezor numbers accounts, **account**\n * starts at 1 (derivation path: `m/44'/148'/0'`).\n *\n * @async\n * @param [account=1] {Number|String} - Either an account number (starts at 1)\n * or a derivation path (e.g: `m/44'/148'/0'`).\n */\n\nledger.connect =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var account,\n      path,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          account = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n          path = ledger.connect.path(account);\n\n          if (!disconnection) {\n            _context.next = 5;\n            break;\n          }\n\n          _context.next = 5;\n          return disconnection;\n\n        case 5:\n          if (ledger.path && ledger.path !== path) softReset();\n          if (!connection) connection = connect(path);\n          return _context.abrupt(\"return\", connection);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nledger.connect.path = function (account) {\n  if (typeof account === \"number\") {\n    if (account < 1) throw new Error(\"Account number starts at 1.\");\n    return \"\".concat(BIP32_PATH, \"/\").concat(account - 1, \"'\");\n  } else {\n    return account;\n  }\n};\n\nfunction connect(_x) {\n  return _connect.apply(this, arguments);\n}\n/**\n * Prompts the user to accept **transaction** using the connected account of\n * their Ledger Wallet.\n *\n * If the user accepts, adds the signature to **transaction**. Else, throws an\n * error.\n *\n * @async\n * @param transaction {Transaction} A StellarSdk Transaction\n */\n\n\nfunction _connect() {\n  _connect = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(path) {\n    var startTime, app, iframeSelector, iframe, ellapsed;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            // eslint-disable-next-line no-console\n            console.log(\"Attempting ledger connection...\");\n            connection = true; // Try to connect until disconnect() is called or until connection happens.\n\n          case 2:\n            if (!(connection && !ledger.publicKey)) {\n              _context7.next = 42;\n              break;\n            }\n\n            startTime = +new Date();\n            _context7.prev = 4;\n\n            if (!(!ledger.transport || env.isNode)) {\n              _context7.next = 9;\n              break;\n            }\n\n            _context7.next = 8;\n            return Transport.create();\n\n          case 8:\n            ledger.transport = _context7.sent;\n\n          case 9:\n            if (!ledger.application || env.isNode) {\n              ledger.application = new StellarApp(ledger.transport);\n            } // Set ledger properties\n\n\n            app = ledger.application;\n            _context7.t0 = Object;\n            _context7.t1 = ledger;\n            _context7.next = 15;\n            return app.getPublicKey(path.replace(/^m\\//, \"\"));\n\n          case 15:\n            _context7.t2 = _context7.sent;\n\n            _context7.t0.assign.call(_context7.t0, _context7.t1, _context7.t2);\n\n            _context7.t3 = Object;\n            _context7.t4 = ledger;\n            _context7.next = 21;\n            return app.getAppConfiguration();\n\n          case 21:\n            _context7.t5 = _context7.sent;\n\n            _context7.t3.assign.call(_context7.t3, _context7.t4, _context7.t5);\n\n            ledger.path = path;\n            onConnect();\n            _context7.next = 40;\n            break;\n\n          case 27:\n            _context7.prev = 27;\n            _context7.t6 = _context7[\"catch\"](4);\n\n            if (_context7.t6.id === \"U2FNotSupported\") {\n              // This frame may show up when using strict Content-Security-Policy\n              // See: https://github.com/LedgerHQ/ledgerjs/issues/254\n              iframeSelector = \"iframe[src^=chrome-extension/*/u2f-comms.html]\";\n              iframe = document.querySelector(iframeSelector);\n              if (iframe) iframe.parentNode.removeChild(iframe);\n            } // Keep looping over timeout/non-connected/non-opened app errors.\n\n\n            ellapsed = +new Date() - startTime;\n\n            if (!( // Firefox user cancels.\n            _context7.t6.id === \"U2F_1\" // Chrome/Win user cancels.\n            || _context7.t6.id === \"U2F_4\" && ellapsed < 25000)) {\n              _context7.next = 37;\n              break;\n            }\n\n            softReset();\n            _context7.t6.message = \"Connexion invite cancelled\";\n            throw _context7.t6;\n\n          case 37:\n            if (!(ellapsed < 8000)) {\n              _context7.next = 40;\n              break;\n            }\n\n            _context7.next = 40;\n            return timeout(8000 - ellapsed);\n\n          case 40:\n            _context7.next = 2;\n            break;\n\n          case 42:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[4, 27]]);\n  }));\n  return _connect.apply(this, arguments);\n}\n\nledger.sign =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(transaction) {\n    var result, signature;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (ledger.publicKey) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new Error(\"No ledger wallet connected.\");\n\n          case 2:\n            _context2.next = 4;\n            return ledger.application.signTransaction(ledger.path.replace(/^m\\//, \"\"), transaction.signatureBase());\n\n          case 4:\n            result = _context2.sent;\n            signature = result.signature.toString(\"base64\");\n            transaction.addSignature(ledger.publicKey, signature);\n            return _context2.abrupt(\"return\", transaction);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Close the connection with the Ledger device, or stop waiting for one in case\n * a connection has not been established yet.\n *\n * @async\n */\n\n\nledger.disconnect =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee3() {\n  var transport;\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          transport = ledger.transport;\n          reset();\n\n          if (!transport) {\n            _context3.next = 9;\n            break;\n          }\n\n          disconnection = closeTransport(transport);\n          disconnection.then(onDisconnect);\n          _context3.next = 7;\n          return disconnection;\n\n        case 7:\n          _context3.next = 12;\n          break;\n\n        case 9:\n          if (!disconnection) {\n            _context3.next = 12;\n            break;\n          }\n\n          _context3.next = 12;\n          return disconnection;\n\n        case 12:\n          disconnection = null;\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n}));\n\nfunction closeTransport(_x3) {\n  return _closeTransport.apply(this, arguments);\n}\n\nfunction _closeTransport() {\n  _closeTransport = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(transport) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return transport.close();\n\n          case 3:\n            _context8.next = 8;\n            break;\n\n          case 5:\n            _context8.prev = 5;\n            _context8.t0 = _context8[\"catch\"](0);\n            console.error(_context8.t0);\n\n          case 8:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 5]]);\n  }));\n  return _closeTransport.apply(this, arguments);\n}\n\nfunction softReset() {\n  connection = null;\n  ledger.path = null;\n  ledger.publicKey = null;\n}\n\nfunction reset() {\n  connection = null;\n  libValues.forEach(function (key) {\n    return ledger[key] = null;\n  });\n}\n\nvar libValues = [\"transport\", \"application\", \"path\", \"version\", \"publicKey\", \"multiOpsEnabled\"];\n/**\n * Connects the first unused account.\n *\n * _Note:_ merged accounts are considered as used.\n *\n * @param {String|Server} [horizon=\"https://horizon.stellar.org\"] - The\n * Horizon server where to check for account existence. It can be either an URL\n * or a _StellarSdk.Server_ object.\n */\n\nledger.newAccount =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee4() {\n  var horizon,\n      accounts,\n      last,\n      _args4 = arguments;\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          horizon = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : \"https://horizon.stellar.org\";\n          _context4.next = 3;\n          return ledger.scan({\n            horizon: horizon,\n            attempts: 1,\n            includeMerged: true\n          });\n\n        case 3:\n          accounts = _context4.sent;\n          last = accounts[accounts.length - 1];\n          _context4.next = 7;\n          return ledger.connect(last ? last.account + 1 : 1);\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n}));\n/**\n * Scans the ledger device for accounts that exist on **params.horizon**. The\n * scanning stops after encountering **params.attempts** unused accounts.\n *\n * Merged accounts are considered as existing accounts and will reset the\n * **params.attempts** counter when encountered.\n *\n * Returns an _Array_ of _Objects_ containing `account` number, `publicKey`,\n * `path`, and `state` (either `\"open\"` or `\"merged\"`).\n *\n * @param {Object} [params] - Optional parameters.\n * @param {String|Server} [params.horizon=\"https://horizon.stellar.org\"] - The\n * Horizon server where to check for account existence. It can be either an URL\n * or a _StellarSdk.Server_ object.\n * @param {Number} [params.attempts=3] - The number of empty accounts before\n * scanning stops.\n * @param {Boolean} [params.includeMerged=false] - List merged accounts as well.\n * @returns {Array}\n */\n\nledger.scan =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(_ref5) {\n    var _ref5$horizon, horizon, _ref5$attempts, attempts, _ref5$includeMerged, includeMerged, _require2, Server, accounts, miss, index, current, callBuilder, response, latest;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _ref5$horizon = _ref5.horizon, horizon = _ref5$horizon === void 0 ? \"https://horizon.stellar.org\" : _ref5$horizon, _ref5$attempts = _ref5.attempts, attempts = _ref5$attempts === void 0 ? 3 : _ref5$attempts, _ref5$includeMerged = _ref5.includeMerged, includeMerged = _ref5$includeMerged === void 0 ? false : _ref5$includeMerged;\n\n            if (typeof horizon === \"string\") {\n              _require2 = require(\"@cosmic-plus/base/es5/stellar-sdk\"), Server = _require2.Server;\n              horizon = new Server(horizon);\n            }\n\n            accounts = [];\n            miss = 0, index = 1;\n\n          case 4:\n            if (!(miss < attempts)) {\n              _context5.next = 16;\n              break;\n            }\n\n            _context5.next = 7;\n            return ledger.getPublicKeys(index, 1);\n\n          case 7:\n            current = _context5.sent[0];\n            // effectForAccount let us know about merged account as well.\n            callBuilder = horizon.effects().forAccount(current.publicKey);\n            _context5.next = 11;\n            return callBuilder.order(\"desc\").limit(1).call()[\"catch\"](function () {\n              return null;\n            });\n\n          case 11:\n            response = _context5.sent;\n\n            if (response) {\n              miss = 0;\n              latest = response.records[0];\n              current.state = latest.type === \"account_removed\" ? \"merged\" : \"open\";\n\n              if (includeMerged || current.state === \"open\") {\n                accounts.push(current);\n              }\n            } else {\n              miss++;\n            }\n\n            index++;\n            _context5.next = 4;\n            break;\n\n          case 16:\n            return _context5.abrupt(\"return\", accounts);\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n/**\n * Request multiple public keys from the Ledger device. The request will return\n * **length** accounts, starting by **start** (minimum 1).\n *\n * Returns an _Array_ of _Objects_ with properties `account`, `publicKey`, and\n * `path`.\n *\n * @param {Number} [start=1] - Starting account number\n * @param {Number} [length=1] - Number of account to be listed.\n * @return {Array}\n */\n\n\nledger.getPublicKeys =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee6() {\n  var start,\n      length,\n      keys,\n      account,\n      _args6 = arguments;\n  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          start = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : 1;\n          length = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 1;\n          keys = [];\n          account = start;\n\n        case 4:\n          if (!(account < start + length)) {\n            _context6.next = 11;\n            break;\n          }\n\n          _context6.next = 7;\n          return ledger.connect(account);\n\n        case 7:\n          keys.push({\n            account: account,\n            publicKey: ledger.publicKey,\n            path: ledger.path\n          });\n\n        case 8:\n          account++;\n          _context6.next = 4;\n          break;\n\n        case 11:\n          return _context6.abrupt(\"return\", keys);\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6);\n}));\n/* Events */\n\n/**\n * _Function_ to execute on each connection.\n *\n * @category event\n * @var {Function}\n */\n\nledger.onConnect = null;\n\nfunction onConnect() {\n  return _onConnect.apply(this, arguments);\n}\n/**\n * _Function_ to execute on each disconnection.\n *\n * @category event\n * @var {Function}\n */\n\n\nfunction _onConnect() {\n  _onConnect = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9() {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            // eslint-disable-next-line no-console\n            console.log(\"Ledger connected\");\n            if (typeof ledger.onConnect === \"function\") ledger.onConnect();\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _onConnect.apply(this, arguments);\n}\n\nledger.onDisconnect = null;\n\nfunction onDisconnect() {\n  // eslint-disable-next-line no-console\n  console.log(\"Ledger disconnected\");\n  if (typeof ledger.onDisconnect === \"function\") ledger.onDisconnect();\n}"],"sourceRoot":""}